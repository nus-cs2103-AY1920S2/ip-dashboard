[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 46,
      "-": 21
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "T | 0 | run"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "D | 0 | hi | 2020-09-20"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "E | 0 | meeting | 2020-03-03 | 23:59"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "E | 0 | ihg | 2020-03-03 | 23:59"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# User Guide of \u0027Spiderverse\u0027"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "## About"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Spiderverse is a personal Chatbot task manager that follows the theme of Marvel\u0027s Spiderman."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "It manages all your tasks in a list, keeping you productive and organized. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "1. Words in `UPPER_CASE` are parameters entered by you."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "2. For parameter `INDEX`, enter a integer corresponding to the task\u0027s index in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "### Feature 1 - Add task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "There are three types of tasks that you can add into the list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "1. Todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "2. Deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "3. Event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "1. `todo DESCRIPTION` (eg. todo buy groceries)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "2. `deadline DESCRIPTION /by YYYY-MM-DD` (eg. deadline essay /by 2020-03-01)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "3. `event DESCRIPTION /at YYYY-MM-DD` (eg. event meeting /at 2020-02-25)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "![Adding tasks](./images/add.png)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "### Feature 2 - Delete task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "You can remove a task from the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Command Format: `delete INDEX` (eg. delete 2)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "### Feature 3 - Mark task as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "When you are done, you can:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "1. Mark a task as completed with a tick."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "2. Mark several tasks as completed with ticks at one go."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Command Format: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "1. `done INDEX` (eg. done 3)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "2. `done INDEX1 INDEX2 INDEX3` (eg. done 2 4 5)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "### Feature 4 - Find task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "You can find tasks by entering a keyword. The search result will be given in a list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Command Format: `find KEYWORD` (eg. find eat)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "### Feature 5 - List all tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "You can view all your tasks in a list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Command Format: `list`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "### Feature 6 - Exits Spiderverse"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "You can exit and close the Spiderverse window."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Command Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 42,
      "-": 13
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Command that adds a task to the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        storage.writeToOld(task.formatText());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return ui.printAddedTask(task, taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 26
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Represents the user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns whether command leads to closing of Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return true if close, false if not."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns actions according to the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param taskList Deals with tasks in Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param storage Deals with saving of tasks in file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @throws IOException when there is error in executing command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 33
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * A Deadline Task that takes in date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected LocalDate localDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Deadline(String description, String localDate) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.localDate \u003d LocalDate.parse(localDate);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        localDate + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 27
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Command that deletes a task from TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected int idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public DeleteCommand(int idx) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Task task \u003d taskList.getTask(idx - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        taskList.deleteTask(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        storage.writeNew(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return ui.printDeletedTask(task, taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 26
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Command that marks a task as done with a tick."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected int idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public DoneCommand(int idx) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Task task \u003d taskList.getTask(idx - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        storage.writeNew(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return ui.printDoneTask(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 26
    }
  },
  {
    "path": "src/main/java/DoneSomeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Command that marks a few tasks as done at the same time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class DoneSomeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private ArrayList\u003cInteger\u003e idxList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public DoneSomeCommand(ArrayList\u003cInteger\u003e idxList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.idxList \u003d idxList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        taskList.doneSpecificTasks(idxList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        storage.writeNew(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return ui.printSpecificDoneTasks(taskList.doneSpecificTasks(idxList));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Duke is a chat bot that manages your tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    static String path \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Creates a Duke object and initializes Ui, Storage and TaskList objects."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            this.taskList \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            ui.printFileNotFoundError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Duke(String path) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            this.taskList \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            ui.printFileNotFoundError();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns Duke\u0027s response in the GUI when user\u0027s input is parsed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                Executors.newSingleThreadScheduledExecutor().schedule("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        () -\u003e System.exit(0), 500, TimeUnit.MILLISECONDS);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            } return command.action(taskList, storage, ui);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 108,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Exception thrown when Duke encounters an unknown user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * An Event Task that takes in date and time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected LocalDate localDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected LocalTime localTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    String inputTimePattern \u003d \"HH:mm\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    DateTimeFormatter inputTimeFormatter \u003d DateTimeFormatter.ofPattern(inputTimePattern);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Event(String description, String localDate, String localTime) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            this.localDate \u003d LocalDate.parse(localDate);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            this.localTime \u003d LocalTime.parse(localTime, inputTimeFormatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            throw new DukeException(\"Parker.. Try: event {DESCRIPTION} /at YYYY-MM-DD HH:mm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        LocalTime.parse(localTime.toString(), inputTimeFormatter) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        localDate + \" | \" + localTime + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 42
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Command that closes Duke with a message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return ui.exit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 22
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Command that finds tasks consisting of given keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected String key;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public FindCommand(String key) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return ui.printMatchList(taskList.findMatching(key));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 24
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 11
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Command that lists all the tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String action(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return ui.printList(taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 18
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            stage.setTitle(\"Spiderverse\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                DialogBox.getDukeDialog(ui.intro(), dukeImage));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 55
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Parser deals with making sense of the user inputs."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Parses the user input and tag it to the respective command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param  input User input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return Appropriate command that executes the input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @throws DukeException thrown when input is unknown to Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        assert input.length() !\u003d 0 : \"Error: User input not found.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String[] inputArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String type \u003d inputArray[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                if (inputArray.length !\u003d1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    if (isNumber(inputArray[1])) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        int i \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        return new DoneCommand(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        ArrayList\u003cInteger\u003e idxList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        String[] idxArray \u003d inputArray[1].split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        for (String id : idxArray) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                            int idx \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                            idxList.add(idx);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        return new DoneSomeCommand(idxList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    throw new DukeException(\"Parker! Try: done {INDEX} or done {INDEX1 INDEX2 ...}\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                if (inputArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    int j \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    return new DeleteCommand(j);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    throw new DukeException(\"Parker.. Try: delete {INDEX}\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                if (inputArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    return new AddCommand(new Todo(inputArray[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    throw new DukeException(\"Parker.. Try: todo {DESCRIPTION}\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                if (inputArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    String[] byArray \u003d inputArray[1].split(\"/by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    return new AddCommand(new Deadline(byArray[0].trim(), byArray[1]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    throw new DukeException(\"Parker.. Try: deadline {DESCRIPTION} /by YYYY-MM-DD\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                if (inputArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    String[] atArray \u003d inputArray[1].split(\"/at \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    String[] dateTimeArray \u003d atArray[1].split(\" \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    return new AddCommand(new Event(atArray[0].trim(), dateTimeArray[0], dateTimeArray[1]));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    throw new DukeException(\"Parker.. Try: event {DESCRIPTION} /at YYYY-MM-DD HH:mm\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                if (inputArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    String key \u003d inputArray[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    return new FindCommand(key);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    throw new DukeException(\"Parker.. Try: find {KEYWORD}\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                throw new DukeException(\"You are not making sense, Parker!!! \u003e:(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns whether the String is an Integer."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param s Input string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return true if Integer, false if not."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static boolean isNumber(String s) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        if (s \u003d\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 111
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Storage deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected String path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Loads contents in text file into TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return TaskList for Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @throws IOException thrown when error encountered."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        File f \u003d new File(path); //create a file for the given file path"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                String[] taskArray \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                String type \u003d taskArray[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        Todo t1 \u003d new Todo(taskArray[2]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        if (taskArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                            t1.markDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.add(t1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        Deadline d1 \u003d new Deadline(taskArray[2], taskArray[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        if (taskArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                            d1.markDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.add(d1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        Event e1 \u003d new Event(taskArray[2], taskArray[3], taskArray[4]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        if (taskArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                            e1.markDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.add(e1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Writes a new ArrayList of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param taskList List of tasks for Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @throws IOException thrown when error is encountered."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void writeNew(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        for (Task task : taskList.list) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            fw.write(task.formatText());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Writes to the old ArrayList of tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param newText New task added."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @throws IOException thrown when error is encountered."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void writeToOld(String newText) throws IOException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        fw.write(newText);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 98
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Represents a task in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.isDone \u003d false; //default not done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns the status of the task based on boolean isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return tick if true, cross if false."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Marks the task as done if completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[\" + getStatus() + \"] \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns task in the format to be saved in file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return task as a string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"X | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns whether task description contains the keyword."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param key Keyword."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return true if contains, false if not."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public boolean contains(String key) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return this.description.contains(key);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 54
    }
  },
  {
    "path": "src/main/java/Tasklist.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * TaskList contains the list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns specific task required."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param idx Index of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return Required task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return list.get(idx);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns number of tasks in list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return size of list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        list.remove(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Marks a few specified tasks as done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param idxList List of indices of the tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return TaskList consisting of the tasks marked done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public TaskList doneSpecificTasks(ArrayList\u003cInteger\u003e idxList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        ArrayList\u003cTask\u003e doneList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        for (int i \u003d 0; i \u003c idxList.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            getTask(idxList.get(i) - 1).markDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            doneList.add(getTask(idxList.get(i) - 1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return new TaskList(doneList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Finds tasks consisting of keyword."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param key Keyword."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return TaskList consisting of tasks that has the keyword."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public TaskList findMatching(String key) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            if (list.get(i).contains(key)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                results.add(list.get(i));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return new TaskList(results);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 73
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * A Todo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " * Ui deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String input() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String intro() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String intro \u003d \"Nice to see you, Parker! What do you need?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return intro;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String exit \u003d \"Bye Parker... I love you 3000 \u003c3\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String msg \u003d \"Here are your tasks in the Spiderverse: \\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            msg +\u003d (i + 1) + \".\" + taskList.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Displays list of tasks that contains keyword."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param taskList resulting TaskList"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return resulting TaskList in string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printMatchList(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String msg \u003d \"Here are the search results: \\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            msg +\u003d (i + 1) + \".\" + taskList.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printDoneTask(Task task) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"Well done! I\u0027ve marked this as done:\" + \"\\n\" + task.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printSpecificDoneTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String msg \u003d \"Well done! I\u0027ve marked these tasks as done:\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            msg +\u003d (i + 1) + \".\" + taskList.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printDeletedTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"Noted! I\u0027ve removed this task:\\n  \" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                \"Now you have \" + taskList.getListSize() + \" tasks in the Spiderverse.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printAddedTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                \"Now you have \" + taskList.getListSize() + \" tasks in the Spiderverse.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printFileNotFoundError() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"File not found in this Spiderverse...\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Displays message when an error is encountered."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @param msg Error message."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String printError(String msg) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 86
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Spidey!\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 19
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            Task task \u003d new Event(\"test\", \"2020-01-01\", \"23:59\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            String output \u003d \"[E][✗] test (at: Jan 1 2020, 23:59)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            assertEquals(output, task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            String output1 \u003d \"E | 0 | test | 2020-01-01 | 23:59\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            assertEquals(output1, task.formatText());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 20
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Task task \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String output \u003d \"[T][✗] test\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        assertEquals(output, task.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String output1 \u003d \"T | 0 | test\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        assertEquals(output1, task.formatText());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 15
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Hello. What can I do for you? xD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Now you have 3 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 34
    }
  }
]
