[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 20,
      "-": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.lang.Integer.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static void printFileContents(String path) throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        File f \u003d new File(path); //create a file for the given file path"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            System.out.println(sc.nextLine());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static void writeToFile(String path, ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            fw.write(list.get(i).formatText());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public static void appendToFile(String path, String text) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        System.out.println(\"Hello friend. What can I do for you? xD\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        String path \u003d \"duke/src/main/java/duke.txt\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                printFileContents(path);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                String[] arr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    System.out.println(\"Bye!!! See ya again soon xD\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        System.out.println((i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    Task t \u003d new Task(command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    if ((arr[0]).equals(\"done\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        int i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.get(i - 1).markDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this as done:\" + \"\\n  \" + list.get(i - 1).toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    } else if ((arr[0]).equals(\"delete\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        int i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        Task d \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.remove(d);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + d.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                                        \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        writeToFile(path, list);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    } else if ((arr[0]).equals(\"todo\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        Task t1 \u003d new Todo(arr[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.add(t1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t1.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                                        \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        appendToFile(path, t1.formatText());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    } else if ((arr[0].equals(\"deadline\"))) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        String[] byArr \u003d arr[1].split(\"/by \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        Task t2 \u003d new Deadline(byArr[0], byArr[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.add(t2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + t2.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                                        \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        appendToFile(path, t2.formatText());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    } else if ((arr[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        String[] atArr \u003d arr[1].split(\"/at\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        Task t3 \u003d new Event(atArr[0], atArr[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        list.add(t3);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + t3.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                                        \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        appendToFile(path, t3.formatText());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            catch (DukeException m) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                System.out.println(m.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "                System.out.println(\"File not found :(\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 111,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 17
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String find(String word) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 5
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.isDone \u003d false; //default not done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * Returns the status of the task. Depends on whether task isDone \u003d true."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     * @return tick or cross"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[\" + getStatus() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"X | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 33
    }
  },
  {
    "path": "src/main/java/Tasklist.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Tasklist {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Tasklist(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 12
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String formatText() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 15
    }
  },
  {
    "path": "src/main/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 2
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    public String intro() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "        return \"Hello friend. What can I do for you? xD\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 8
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Hello. What can I do for you? xD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "Now you have 3 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wanxuanong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wanxuanong": 34
    }
  }
]
