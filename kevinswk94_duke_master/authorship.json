[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.2.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    toolVersion(\"8.23\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    ignoreFailures(true)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "version \u00270.1\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "// JUnit configuration"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    archiveVersion \u003d \"0.8\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "kevinswk94": 31
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    BYE, FIND, LIST, DONE, DELETE, DEADLINE, EVENT, TODO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * The Command enum represents the various commands Duke can respond to."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param cmd The input string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @return A Command enum"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public static Command getCommand(String cmd) throws InvalidCommandException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        cmd \u003d cmd.toLowerCase();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else if (cmd.equals(\"find\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else if (cmd.equals(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else if (cmd.equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else if (cmd.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else if (cmd.equals(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else if (cmd.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 34
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private LocalDate dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Constructs a new deadline task with a description and due date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param desc The description of the deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param dueDate The due date of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Deadline(String desc, LocalDate dueDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Constructs a new deadline task with a description, due date and status."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param desc The description of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param dueDate The due date of the deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param isDone The status of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Deadline(String desc, LocalDate dueDate, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super.setStatus(isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Returns a save file entry to be inserted into a save file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @return The save file entry generated from a Deadline"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String generateSaveFileEntry() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return String.format(\"D | %d | %s | %s\\n\", this.getStatusAsInt(), this.getDescription(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                this.dueDate.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Returns a string representation of a Deadline."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @return The string representation of a Deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return String.format(\"[D] [%s] %s (by: %s)\", this.getStatus(), this.getDescription(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 53
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this(\"data/duke.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Instantiates a Duke instance with a path to a save file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param filePath The save file location relative to the project root"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.tasks \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * The main method of the Duke class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param args Arguments to be passed into Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Starts the Duke program after initialisation."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        Parser.parse(storage, tasks, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 37,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 7
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    protected LocalDate duration;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Event(String desc, LocalDate duration) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Constructs a new Event task from a description, duration and status."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param desc The description of the Event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param duration The duration of the Event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param isDone The status of the Event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Event(String desc, LocalDate duration, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super.setStatus(isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String generateSaveFileEntry() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return String.format(\"E | %d | %s | %s\\n\", this.getStatusAsInt(), this.getDescription(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                this.duration.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return String.format(\"[E] [%s] %s (at: %s)\", this.getStatus(), this.getDescription(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                this.duration.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 38
    }
  },
  {
    "path": "src/main/java/duke/InsufficientArgumentsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class InsufficientArgumentsException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public InsufficientArgumentsException(String errMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 7
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 7
    }
  },
  {
    "path": "src/main/java/duke/OutOfRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class OutOfRangeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public OutOfRangeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(\"☹ OOPS!!! duke.Task number out of range!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * Parses user input to determine what action to take."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param storage A Storage instance managing a save file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param tasks A TaskList instance managing tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     * @param ui A Ui instance managing displaying of output"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public static void parse(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                String[] inputSplit \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                Command cmd \u003d Command.getCommand(inputSplit[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                switch (cmd) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    Ui.printMessage(\"Bye! Hope you visit again soon!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    isRunning \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        throw new InsufficientArgumentsException(\"☹ OOPS!!! FIND requires something to search for.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        Ui.printMessage(tasks.findTask(inputSplit[1]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    tasks.displayTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        throw new InsufficientArgumentsException(\"☹ OOPS!!! Missing command parameters!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        int index \u003d Integer.valueOf(inputSplit[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        if (index \u003c 0 || index \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            throw new OutOfRangeException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            Task task \u003d tasks.getTasks().get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            Ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            storage.storeTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        throw new InsufficientArgumentsException(\"☹ OOPS!!! Missing command parameters!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        int index \u003d Integer.valueOf(inputSplit[1]) - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        if (index \u003c 0 || index \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            throw new OutOfRangeException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            Task taskToDelete \u003d tasks.getTasks().get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            tasks.getTasks().remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            Ui.printMessage("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                    \"Noted! I\u0027ve removed this task:\\n\\t\\t\" + taskToDelete.toString() + \"\\n\\tNow you \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                    + \"have \" + tasks.getTasks().size() + \" tasks in the \" + \"list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            storage.storeTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        throw new InsufficientArgumentsException("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                \"☹ OOPS!!! The description of a deadline cannot \" + \"be empty!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        String[] arguments \u003d inputSplit[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            throw new InsufficientArgumentsException(\"☹ OOPS!!! Missing deadline parameters!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                Task newTask \u003d new Deadline(arguments[0], LocalDate.parse(arguments[1]));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                tasks.getTasks().add(newTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                Ui.printMessage("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                        \"Got it! I\u0027ve added the task:\\n\\t\\t\" + newTask.toString() + \"\\n\\tNow you \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                        + \"have\" + \" \" + tasks.getTasks().size() + \" tasks in \" + \"the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                Ui.printMessage(\"☹ OOPS!!! Please enter a valid date: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            storage.storeTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        throw new InsufficientArgumentsException("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                \"☹ OOPS!!! The description of an event cannot\" + \" be empty\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        String[] arguments \u003d inputSplit[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            throw new InsufficientArgumentsException(\"☹ OOPS!!! Missing event parameters!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                Task newTask \u003d new Event(arguments[0], LocalDate.parse(arguments[1]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                tasks.getTasks().add(newTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                Ui.printMessage("
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                        \"Got it! I\u0027ve added the task:\\n\\t\\t\" + newTask.toString() + \"\\n\\tNow you \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                        + \"have\" + \" \" + tasks.getTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                Ui.printMessage(\"☹ OOPS!!! Please enter a valid date: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                            storage.storeTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        throw new InsufficientArgumentsException("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                \"☹ OOPS!!! The description of a to-do cannot be \" + \"empty\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        Task newTask \u003d new Todo(inputSplit[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        tasks.getTasks().add(newTask);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        Ui.printMessage("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                \"Got it! I\u0027ve added the task:\\n\\t\\t\" + newTask.toString() + \"\\n\\tNow you have \" + tasks"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                        .getTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        storage.storeTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                Ui.printMessage(ex.getMessage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 140
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private Path file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.file \u003d Paths.get(workingDir, filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public static boolean parseTaskStatusFromString(String status) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return status.equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public List\u003cTask\u003e loadTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        List\u003cTask\u003e retrievedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            if (!Files.exists(file)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                Files.createDirectories(file.getParent());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                Files.createFile(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                List\u003cString\u003e lines \u003d Files.readAllLines(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                for (String line : lines) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    String[] lineSplit \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    if (lineSplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        retrievedTasks.add(new Todo(lineSplit[2], parseTaskStatusFromString(lineSplit[1])));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else if (lineSplit[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        retrievedTasks.add(new Deadline(lineSplit[2], LocalDate.parse(lineSplit[3]),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                parseTaskStatusFromString(lineSplit[1])));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    } else if (lineSplit[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                        retrievedTasks.add(new Event(lineSplit[2], LocalDate.parse(lineSplit[3]),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                                parseTaskStatusFromString(lineSplit[1])));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return retrievedTasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public void storeTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            result.append(task.generateSaveFileEntry());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            Files.write(file, result.toString().getBytes());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            System.err.println(\"duke.Task file not found.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 69
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.description \u003d desc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return isDone ? \"V\" : \"X\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public void setStatus(boolean status) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public int getStatusAsInt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public abstract String generateSaveFileEntry();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatus(), this.description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 39
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public void deleteTask(int index) throws OutOfRangeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public void displayTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                result.append(String.format(\"%d. %s\\n\\t\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                result.append(String.format(\"%d. %s\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        Ui.printMessage(result.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String findTask(String searchTerm) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        StringBuilder result \u003d new StringBuilder(\"Here\u0027s the matching tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            if (task.getDescription().contains(searchTerm)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                result.append(String.format(\"\\n\\t%d. %s\", ++i, task.toString()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "            return \"No results matching your search was found!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 54
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Todo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        super.setStatus(isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String generateSaveFileEntry() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return String.format(\"T | %d | %s\\n\", this.getStatusAsInt(), this.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return String.format(\"[T] [%s] %s\", this.getStatus(), this.getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 22
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public static void printMessage(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        System.out.println(\"\\t\" + msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        Ui.printMessage(\"Greetings! I\u0027m Duke!\\n\\tHow may I help you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 32
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    void generateSaveFileEntry_validDeadline_returnsEntry() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"D | 0 | return book | 2020-01-10\\n\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-01-10\")).generateSaveFileEntry());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"D | 1 | return book | 2020-10-01\\n\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-10-01\"), true).generateSaveFileEntry());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    void toString_validDeadline_returnsString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[D] [X] return book (by: Jan 10 2020)\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-01-10\")).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[D] [V] return book (by: Oct 1 2020)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-10-01\"), true).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[D] [X] return book (by: Oct 1 2020)\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-10-01\"), false).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 28
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    void generateSaveFileEntry_validEvent_returnsEntry() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"E | 0 | project meeting | 2020-01-10\\n\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Event(\"project meeting\", LocalDate.parse(\"2020-01-10\")).generateSaveFileEntry());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"E | 1 | project meeting | 2020-10-01\\n\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Event(\"project meeting\", LocalDate.parse(\"2020-10-01\"), true).generateSaveFileEntry());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"E | 0 | project meeting | 2020-10-01\\n\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Event(\"project meeting\", LocalDate.parse(\"2020-10-01\"), false).generateSaveFileEntry());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    void toString_validEvent_returnsString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[E] [X] project meeting (at: Jan 10 2020)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Event(\"project meeting\", LocalDate.parse(\"2020-01-10\")).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[E] [V] project meeting (at: Jan 10 2020)\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Event(\"project meeting\", LocalDate.parse(\"2020-01-10\"), true).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[E] [X] project meeting (at: Jan 10 2020)\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "                new Event(\"project meeting\", LocalDate.parse(\"2020-01-10\"), false).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 30
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    void generateSaveFileEntry_validTodo_returnsEntry() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"T | 0 | read book\\n\", new Todo(\"read book\").generateSaveFileEntry());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"T | 1 | read book\\n\", new Todo(\"read book\", true).generateSaveFileEntry());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"T | 0 | read book\\n\", new Todo(\"read book\", false).generateSaveFileEntry());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    void toString_validTodo_returnsString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[T] [X] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[T] [V] read book\", new Todo(\"read book\", true).toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "        assertEquals(\"[T] [X] read book\", new Todo(\"read book\", false).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 22
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tGreetings! I\u0027m Duke!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tHow may I help you?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tGot it! I\u0027ve added the task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t\t[T] [X] read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t1. [T] [X] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tGot it! I\u0027ve added the task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t\t[D] [X] return book (by: Today)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t1. [T] [X] read book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t2. [D] [X] return book (by: Today)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t[D] [V] return book (by: Today)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\tBye! Hope you visit again soon!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "deadline return book /by Today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin\\main ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "java -classpath ..\\bin\\main Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinswk94"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kevinswk94": 21
    }
  }
]
