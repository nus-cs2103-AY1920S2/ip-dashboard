[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 20,
      "-": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     *  This method updates the action and time accordingly for Deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the action to be taken."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param time This is the time for which that action has to happen."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /*Override the toString method for Deadline*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[D]\" + super.toString() + \"| by: \" + time ;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method indicates that a new Deadline Task has been added to the ArrayList in Store."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void Output() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(super.line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\" [D]\" + super.toString() + \"| by: \" + time );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the time of this Deadline Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the time for the deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 37
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Store lib;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Scanner sn \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DukeException DE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    String[] CheckInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method uses filepath to locate the file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * If file exist, load the file. Otherwise create new file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param filepath the absolute location of the .txt file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Duke(String filepath){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        DE \u003d new DukeException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        File file \u003d new File(filepath); //create a file obj with the given filepath."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.lib \u003d new Store(file); //create store from absolute filepath"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            boolean result \u003d file.exists();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if(!result){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                boolean ans \u003d file.createNewFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    Scanner newSN \u003d new Scanner(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    while(newSN.hasNextLine()){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        String nxtLine \u003d newSN.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        lib.load(nxtLine);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    } //end while: for reading existing file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    System.out.print(ui.line());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    } //end Duke"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method takes input from scanner and redirect it to the respective action."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        while(sn.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String input \u003d sn.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                lib.bye();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                lib.list();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String[] splited \u003d input.split(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                int index \u003d Integer.parseInt(splited[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                lib.done(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String[] splited \u003d input.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                int index \u003d Integer.parseInt(splited[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                lib.delete(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                CheckInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                if (CheckInput.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    DE.IncorrectInputTodo();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    String NewInput \u003d input.substring(5);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    System.out.print(lib.todo(NewInput));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                CheckInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                if (CheckInput.length \u003c 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    DE.IncorrectInputDeadline();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    DE.DeadlineMissingDate();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    String NewInput \u003d input.substring(9);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    String[] ActionTime \u003d NewInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    lib.deadline(ActionTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                CheckInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                if (CheckInput.length \u003c 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    DE.IncorrectInputEvent();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    DE.EventMissingDate();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    String NewInput \u003d input.substring(6);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    String[] ActionTime \u003d NewInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    lib.event(ActionTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (input.contains(\"find\")){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                CheckInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                if (CheckInput.length \u003c 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    DE.InvalidInput();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    String NewInput \u003d input.substring(4).strip();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    lib.find(NewInput);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DE.InvalidInput();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } // end sn.hasNext()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This is the main method that uses DUke method."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        new Duke(\"D:/duke/data/d.txt\").run();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 107,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Incorrect Input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void IncorrectInputTodo(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ OOPS!!! The description of a todo cannot be empty.\\nPlease insert Action\\n\" + ui.line());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Incorrect Input for a Deadline Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void IncorrectInputDeadline(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ OOPS!!! The description of a Deadline cannot be empty.\\nPlease insert Action\\n\" + ui.line());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Incorrect Input for a Event Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void IncorrectInputEvent(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ OOPS!!! The description of a Event cannot be empty.\\nPlease insert Action\\n\" + ui.line());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Missing Date in Deadline Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void DeadlineMissingDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ OOPS!!! Deadline is missing a Date!\\nPlease input Date\\n\" + ui.line());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Missing Date in Event Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void EventMissingDate(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ OOPS!!! Event is missing a Date!\\nPlease input Date\\n\" + ui.line());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Invalid Input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void InvalidInput(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\\n\" + ui.line());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Invalid Number."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void ExceedList(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ Invalid Number. Please Enter a valid number.\\n\" + ui.line());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Invalid Date Format."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void InvalidDateFormat(){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ Invalid Date Format! Enter in /by yyyy-mm-dd\\n\" + ui.line());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the Error Message for Invalid Time Format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void InvalidTimeFormat(){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line() + \"☹ Invalid Date Format! Enter in hh:mm\\n\" + ui.line());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 71
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the action and time accordingly for Events."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the details for Event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param time This is the time for the Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Event (String description, String time){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /*Override the toString method for Event*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[E]\" + super.toString() + \"| at: \" + time ;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method indicates that a new Event Task has been added to the ArrayList in Store."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void Output(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(super.line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\" [E]\" + super.toString() + \"| at: \" + time );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the time of this Event Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the time for the Event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 37
    }
  },
  {
    "path": "src/main/java/Store.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Store {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Integer counter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private ArrayList\u003cTask\u003e Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DukeException DE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private LocalDate LD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private LocalTime LT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the existing variables."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param file This is the absolute file for storing the Task onto the hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Store(File file){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.counter \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.Storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.DE \u003d new DukeException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints out message for \"bye\" action."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        WritetoFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.byeMessgae());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.exit(1); //exits program"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the elements in the ArrayList\u003cTask\u003e."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        for(int i \u003d 0; i \u003c Storage.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String data \u003d String.format(\"%d.\",i+1) + Storage.get(i).toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            System.out.println(data);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the Task at the index to complete."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param index Indicates which item on the ArrayList Storage."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void done(int index){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if(index \u003e Storage.size() || index \u003c\u003d 0){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            DE.ExceedList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task UpdateCurrAction \u003d Storage.get(index - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            UpdateCurrAction.isDone \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String CurrAction \u003d UpdateCurrAction.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            System.out.print(ui.DoneMessgae(CurrAction));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        WritetoFile();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method add a new Task to the ArrayList\u003cTask\u003e."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param S The action to be done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This returns the number of task currently."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String todo(String S){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.cmd \u003d S;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Task T \u003d new Todo(cmd);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        T.Output();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Storage.add(T);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String s \u003d String.format(\"Now you have %d tasks in the list.\\n\", Storage.size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        WritetoFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return s + ui.line();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method add a new Deadline Task to the ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param ActionTime Contains the Action and the Date and/or Time."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void deadline(String[] ActionTime){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String Timing;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String details;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.cmd \u003d ActionTime[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if(ActionTime[1].length() \u003c\u003d1){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            DE.DeadlineMissingDate();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            details \u003d ActionTime[1].substring(3).strip();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] DateTime \u003d details.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                this.LD \u003d LocalDate.parse(DateTime[0]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String Date \u003d LD.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                if (DateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        this.LT \u003d LocalTime.parse(DateTime[1]); //accept time of 10:15 format"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        String Time \u003d LT.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        Timing \u003d Date + \" \" + Time;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    } catch (DateTimeException d){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        DE.InvalidTimeFormat();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    Timing \u003d Date;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Task T \u003d new Deadline(cmd, Timing);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Storage.add(T);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                T.Output();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                System.out.println(String.format(\"Now you have %d tasks in the list.\", counter));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                System.out.print(ui.line());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                WritetoFile();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } catch (DateTimeException d){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DE.InvalidDateFormat();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method add a new Event Task to the ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param ActionTime Contains the Action and Date and/or Time."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void event(String[] ActionTime){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String Timing;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String details;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String Date;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.cmd \u003d ActionTime[0];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if(ActionTime[1].length() \u003c\u003d1){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            DE.EventMissingDate();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            details \u003d ActionTime[1].substring(3).strip();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] DateTime \u003d details.split(\" \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                this.LD \u003d LocalDate.parse(DateTime[0]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Date \u003d LD.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                if (DateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        this.LT \u003d LocalTime.parse(DateTime[1]); //accept time of 10:15 format"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        String Time \u003d LT.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        Timing \u003d Date + \" \" + Time;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    } catch (DateTimeException d) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        DE.InvalidTimeFormat();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    Timing \u003d Date;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Task T \u003d new Event(cmd, Timing);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Storage.add(T);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                T.Output();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                System.out.println(String.format(\"Now you have %d tasks in the list.\", counter));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                System.out.print(ui.line());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                WritetoFile();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } catch (DateTimeException d) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DE.InvalidDateFormat();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method remove the Task at the index from the ArrayList."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param index Indicates which item on the ArrayList\u003cTask\u003e Storage."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void delete(int index){"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if(index \u003e Storage.size() || index \u003c\u003d 0){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            DE.ExceedList();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task UpdateCurrAction \u003d Storage.get(index - 1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String CurrAction \u003d UpdateCurrAction.toString();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            int amt \u003d Storage.size() - 1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Storage.remove(index - 1);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            System.out.print(ui.DeleteMessage(CurrAction, amt));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        WritetoFile();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method writes the ArrayList\u003cTask\u003e to the file on the hard disk."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void WritetoFile() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            for (int i \u003d 0; i \u003c Storage.size(); i++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String data \u003d String.format(\"%d.\", i + 1) + Storage.get(i).toString();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                fileWriter.write(data);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                fileWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method load existing file onto the ArrayList\u003cTask\u003e Storage."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param S This is the Task from the file to be loaded from."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void load(String S){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        boolean R \u003d CheckIfDone(S);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if(S.contains(\"[T]\")){"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String result \u003d S.substring(9);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task T \u003d new Todo(result);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            T.isDone \u003d R;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Storage.add(T);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            WritetoFile();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (S.contains(\"[D]\")){"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String NewInput \u003d S.substring(9);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] AT \u003d NewInput.split(\"\\\\|\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String time \u003d AT[1].strip().substring(3).strip();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task T \u003d new Deadline(AT[0], time);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            T.isDone \u003d R;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Storage.add(T);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            WritetoFile();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (S.contains(\"[E]\")){"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String result \u003d S.substring(9);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] AT \u003d result.split(\"\\\\|\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String time \u003d AT[1].strip().substring(3).strip();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task T \u003d new Event(AT[0], time);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            T.isDone \u003d R;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Storage.add(T);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            WritetoFile();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method checks if Tasks in the loaded file is completed."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param S This is the Task."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return boolean This return true if the task has been completed."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public boolean CheckIfDone(String S){"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return S.contains(\"✓\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method finds Task that contains the Action."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param Action This is the Action to be located in the ArrayList\u003cTask\u003e Storage."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void find(String Action){"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        ArrayList\u003cString\u003e Match \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        for (Task task : Storage) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String data \u003d task.toString();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (data.contains(Action)) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "             Match.add(String.format(\"%d.\", counter) + data);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if(Match.isEmpty()){"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            System.out.println(\"☹ What you are looking for does not exist.\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            for (String s : Match){"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                System.out.println(s);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(ui.line());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 263
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected String description; //action to be taken"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected boolean isDone; //status of the action"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected String line \u003d ui.line();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void Output(){}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This methods updates the Task action and indicate that it is incomplete."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the action for the Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This methods retrun the status icon."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This return the status icon."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String getStatusIcon() { return (isDone ? \"✓\" : \"✖\"); }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "//    public int getStatusIcon() { return (isDone ? 1 : 0); }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the action to be taken."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the action to be taken."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Todo (String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /*Override the toString method for To do*/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method indicates that a new Task has been added to the ArrayList in Store."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void Output(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(super.line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\" [T]\" + super.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method forms a divider line."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the line to be return."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String line(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the welcome message when user first run the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        System.out.print(line());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Bye Message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the bye message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String byeMessgae(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return line() + \"Bye. Hope to see you again soon!\\n\" + line();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method forms the Delete action message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param Action This is the Action to be deleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param amt This is the amount of element in the storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the Message for the Delete action."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String DeleteMessage(String Action, int amt){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String Output \u003d String.format(\"\\nNow you have %d tasks in the list\\n\", amt);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return line()+ \"Noted. I\u0027ve removed this task: \\n\" + Action + Output + line();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method forms the message for the Done action."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param Action This is the action that has been completed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return This is the message for the Done action."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String DoneMessgae(String Action){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return line() + \"Nice! I\u0027ve marked this task as done:\\n\" + Action + \"\\n\" + line();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 55
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void TaskTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Task T \u003d new Task(\"hi\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assertEquals(\"[✖] hi\",T.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void StoreTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        File file \u003d new File(\"D:/duke/data/d.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Store store \u003d new Store(file);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assertEquals(\"Now you have 1 tasks in the list.\\n____________________________________________________________\\n\", store.todo(\"hw\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " [T][✖] read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 21
    }
  }
]
