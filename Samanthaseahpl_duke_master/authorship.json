[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "test {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 40,
      "-": 21
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "# Personal Scheduler User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "## Introduction "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Personal Scheduler is created to help keep tracks of activities going.  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "There are the scheduler are able to keep track of 3 main task which are `todo`, `deadline` and `event`."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### `todo` - Add a todo task. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "This adds a todo task to the scheduler to keep track of."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`todo [buy bread]`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[T][X] buy bread "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### `deadline` - Add a deadline task. "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "This adds a deadline task with its date to the scheduler. Time is optional in the input. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`deadline [assignment] /by [25/02/2020 2359]`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[D][X] assignment | by: Feb 25 2020 11:59pm "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### `event` - Add an event task. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "This adds a even task and the date to the scheduler. Time is optional in the input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`event [project meeting] /at [24/02/2020 1400]`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[E][X] project meeting | at: Feb 24 2020 02:00 PM"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "## Other functions"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### `list` - List all task in the scheduler. "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "This lists all the task available in the scheduler."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "``` "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[T][X] buy bread"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[D][X] assignment | by: Feb 25 2020 11:59pm "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[E][X] project meeting | at: Feb 24 2020 02:00 PM"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### `done` - Mark a task as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "This function marks one task as completed. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`done [1]`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " ```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[T][✓] buy bread"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### `find` - Find tasks that matches the search."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "This function find all the tasks that matches the user input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`find [bread]`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "1. [T][✓] buy bread"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### `delete` - Delete a task. "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "This function remove one task from the scheduler."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[D][X] assignment | by: feb 25 2020 11:59 PM"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "now you have 2 task in the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "## Extra features"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "### Detecting Anomalies"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "The scheduler has been program to detect any clashes of task on the same day and at the exact time. "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "`deadline 2103 indivual project /by 24/02/2020 1400`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Outcome: "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Clashes with:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "[E][X] project meeting | at: Feb 24 2020 02:00 PM"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 116,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected String[] dateTimes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     *  This method updates the action and time accordingly for Deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the action to be taken."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param time This is the time for which that action has to happen."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Deadline(String description, String time, String[] dateTimes) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert description !\u003d null : \"description cannot be null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert time !\u003d null : \"date cannot be null\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[D]\" + super.toString() + \"| by: \" + time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method indicates that a new Deadline Task has been added to the ArrayList in Store."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String of the completed respoonse."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + \" [D]\" + super.toString() + \"| by: \" + time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the time of this Deadline Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return STring This is time for the deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String getStrTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return dateTimes[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 42
    }
  },
  {
    "path": "src/main/java/DetectAnomalies.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class DetectAnomalies {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public DetectAnomalies() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method is to check for clashes on the same day same time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * The commented part are to filter for the same day only."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param taskLists List for all the tasks in storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param dateTimes string[] that store the date and time of the current task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String result of the check if there is clashes or no clashes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String checkForClash(ArrayList\u003cTask\u003e taskLists, String[] dateTimes) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //uncomment the codes to filter for same day task as well."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String sameTiming \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String sameDay \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        boolean hasTime \u003d !dateTimes[1].equals(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        for (Task task : taskLists) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String item \u003d task.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            boolean hasSameDate \u003d item.contains(dateTimes[0]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            boolean hasSameTime \u003d item.contains(dateTimes[1]) \u0026\u0026 hasTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (hasSameDate \u0026\u0026 hasSameTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                sameTiming \u003d sameTiming + item + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            //else if (hasSameDate) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            //    sameDay \u003d sameDay + item + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            //}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (!sameTiming.equals(\"\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            output \u003d \"Clashes with: \\n\" + sameTiming;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //} else if (!sameDay.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //    output \u003d \"May clash with these event on the same day: \\n\" + sameDay;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            output \u003d \"No Clashes.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 43
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DialogBox(String text, Image img, String backgroundColor) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        dialog.setStyle(backgroundColor);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Setting for the user dialog boc display."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param text String to be displayed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param img Image of the user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return Dislogbox of the user output."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return new DialogBox(text, img, \"-fx-background-color: #ffffcc\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Setting for the duke dialog box display."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param text String to be displayed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param img Image of the duke"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return Dialogbox of the duke output."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"-fx-background-color: #ffff00\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 72
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama2.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama1.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Store lib;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Scanner sn \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DukeException de;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    String[] checkInputs;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method create a new Duke object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * If file exist, load the file. Otherwise create new file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String filepath \u003d \"out.txt\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        de \u003d new DukeException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        File file \u003d new File(filepath); //create a file obj with the given filepath."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.lib \u003d new Store(file); //create store from absolute filepath"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            boolean hasFile \u003d file.exists();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (!hasFile) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Scanner newSN \u003d new Scanner(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                while (newSN.hasNextLine()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    String nxtLine \u003d newSN.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    lib.load(nxtLine);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } //end while: for reading existing file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    } //end Duke"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        userInput \u003d new TextField();                //create a textfield"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        sendButton \u003d new Button(\"Enter\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();   //the background"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method generate a response to user input."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String of the the response of user input."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String getResponse(String cmd) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return lib.bye();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return lib.list();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.contains(\"done\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] splits \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (splits.length \u003c 2) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return de.missingDoneIndex();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                int index \u003d Integer.parseInt(splits[1]);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return lib.done(index);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.contains(\"delete\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] splits \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            int index \u003d Integer.parseInt(splits[1]);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return lib.delete(index);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.contains(\"todo\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            checkInputs \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (checkInputs.length \u003c 2) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return de.incorrectInputTodo();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String newInput \u003d cmd.substring(5);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return lib.todo(newInput);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            checkInputs \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (checkInputs.length \u003c 2) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return de.incorrectInputDeadline();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (!cmd.contains(\"/\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return de.deadlineMissingDate();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String newInput \u003d cmd.substring(9);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String[] actionTime \u003d newInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return lib.deadline(actionTime);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.contains(\"event\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            checkInputs \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (checkInputs.length \u003c 2) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return de.incorrectInputEvent();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else if (!cmd.contains(\"/\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return de.eventMissingDate();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String newInput \u003d cmd.substring(6);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String[] actionTime \u003d newInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return lib.event(actionTime);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.contains(\"find\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            checkInputs \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (checkInputs.length \u003c 2) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return de.invalidInput();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String newInput \u003d cmd.substring(4).strip();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return lib.find(newInput);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return de.invalidInput();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 205,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Incorrect Input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String incorrectInputTodo() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"OOPS!!! The description of a todo cannot be empty.\\nPlease insert Action\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Incorrect Input for a Deadline Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String incorrectInputDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"OOPS!!! The description of a Deadline cannot be empty.\\nPlease insert Action\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Incorrect Input for a Event Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String incorrectInputEvent() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"OOPS!!! The description of a Event cannot be empty.\\nPlease insert Action\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Missing Date in Deadline Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String deadlineMissingDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"OOPS!!! Deadline is missing a Date!\\nPlease input Date\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Missing Date in Event Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String eventMissingDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"OOPS!!! Event is missing a Date!\\nPlease input Date\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Invalid Input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String invalidInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Invalid Number."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String exceedList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Invalid Number. Please Enter a valid number.\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Invalid Date Format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String invalidDateFormat() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Invalid Date Format! Enter in /by dd/mm/yyyy\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Invalid Time Format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String invalidTimeFormat() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Invalid Date Format! Enter in hhmm\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return Error Message for No Matched Found."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String noMatchesFound() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"What you are looking for does not exist.\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Error Message for Missing Done Index."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String missingDoneIndex() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"OOPS you\u0027re missing an Index.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 95
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected String[] dateTimes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the action and time accordingly for Events."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the details for Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param time This is the time for the Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Event(String description, String time, String[] dateTimes) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert description !\u003d null : \"Description cannot bve empty\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert time !\u003d null : \"Time cannot be empty\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[E]\" + super.toString() + \"| at: \" + time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method indicates that a new Event Task has been added to the ArrayList in Store."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + \" [E]\" + super.toString() + \"| at: \" + time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the time of this Event Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the time for the Event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String getStrTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return dateTimes[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 40
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Run Main."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param args the loaded file if applicable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 17
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    //private Duke duke \u003d new Duke(\"D:/duke/data/d.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            stage.setTitle(\"Personal Scheduler\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama2.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama1.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image dukeTroubled \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama-troubled.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image dukeDone \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama-done.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image dukeBye \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama-bye.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image dukeFind \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama-find.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Image dukeTask \u003d new Image(this.getClass().getResourceAsStream(\"/images/gudetama-meh.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Initialize the dialogbox with the welcome message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            DialogBox.getDukeDialog(ui.welcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String cmd \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String response \u003d duke.getResponse(cmd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        boolean isTodo \u003d cmd.contains(\"todo\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        boolean isEvent \u003d cmd.contains(\"event\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        boolean isdeadline \u003d cmd.contains(\"deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (cmd.contains(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getUserDialog(cmd, userImage),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeBye)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            System.exit(0); //exits program"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (response.contains(\"OOPS\") || response.contains(\"Invalid\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getUserDialog(cmd, userImage),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeTroubled)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (cmd.contains(\"done\") || cmd.contains(\"delete\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getUserDialog(cmd, userImage),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeDone)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (response.contains(\"matching\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getUserDialog(cmd, userImage),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeFind)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (isTodo || isEvent || isdeadline) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getUserDialog(cmd, userImage),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeTask)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getUserDialog(cmd, userImage),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 102
    }
  },
  {
    "path": "src/main/java/Store.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Store {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Integer counter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private ArrayList\u003cTask\u003e storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DukeException de;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DateFormat inputDate \u003d new SimpleDateFormat(\"dd/MM/yyyy\");  //input date format of dd/mm/yyyy"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DateFormat inputTime \u003d new SimpleDateFormat(\"HHmm\");        //input time in hhmm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DateFormat outputDate \u003d new SimpleDateFormat(\"MMM dd yyyy\");//output in MMM dd yyyy"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DateFormat outputTime \u003d new SimpleDateFormat(\"hh:mm a\");    //output in hh:mm PM/AM"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private String[] dateTimes \u003d new String[2];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private DetectAnomalies detectA \u003d new DetectAnomalies();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the existing variables."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param file This is the absolute file for storing the Task onto the hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Store(File file) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.counter \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.de \u003d new DukeException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints out message for \"bye\" action."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return the String of the byeMessage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        writeToFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return ui.byeMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method prints the elements in the {@link ArrayList} of {@link Task}."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String list of the elements in the Arraylist."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        for (int i \u003d 0; i \u003c storage.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (storage.get(i).toString().contains(\"[1]\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                storage.get(i).getStatusIcon();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String data \u003d String.format(\"%d.\",i + 1) + storage.get(i).toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            output \u003d String.format(\"%s%s\\n\", output, data);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the Task at the index to complete."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param index Indicates which item on the ArrayList Storage."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String of done task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String done(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert index \u003c storage.size() : \"Index cannot be greater than list\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert index \u003e 0 : \"Index cannot be 0 or negative\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (index \u003e storage.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return de.exceedList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task updateCurrAction \u003d storage.get(index - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            updateCurrAction.isDone \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            updateCurrAction.getStatusIcon();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String currAction \u003d updateCurrAction.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return ui.doneMessage(currAction);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method add a new Task to the {@link ArrayList} of {@link Task}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param cmd The action to be done."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This returns the number of task currently."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String todo(String cmd) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert cmd !\u003d null : \"input string cannot be null\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Task task \u003d new Todo(cmd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        storage.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String output \u003d task.output()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        + String.format(\"\\nNow you have %d tasks in the list.\\n\", storage.size());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        writeToFile();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method add a new Deadline Task to the {@link ArrayList} of {@link Task}."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param actionTime Contains the Action and the Date and/or Time."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return the String of the new deadline task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String deadline(String[] actionTime) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert actionTime.length \u003e 0 : \"Deadline details cannot be empty\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String timing;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String detail;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.cmd \u003d actionTime[0];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (actionTime[1].length() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return de.deadlineMissingDate();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            detail \u003d actionTime[1].substring(3).strip();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            timing \u003d formatDateTime(detail);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String output \u003d detectA.checkForClash(storage, dateTimes);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (output.contains(\"No\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Task task \u003d new Deadline(cmd, timing, dateTimes);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                storage.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                output \u003d task.output()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        + String.format(\"\\nNow you have %d tasks in the list.\\n\", storage.size());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                writeToFile();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method add a new Event Task to the {@link ArrayList} of {@link Task}."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param actionTime Contains the Action and Date and/or Time."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String of the event created."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String event(String[] actionTime) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String timing;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String detail;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.cmd \u003d actionTime[0];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert actionTime.length \u003e 1 : \"Event missing date\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (actionTime[1].length() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return de.eventMissingDate();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            detail \u003d actionTime[1].substring(3).strip();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            timing \u003d formatDateTime(detail);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String output \u003d detectA.checkForClash(storage, dateTimes);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (output.contains(\"No\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                Task task \u003d new Event(cmd, timing, dateTimes);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                storage.add(task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                output \u003d task.output() + String.format(\"\\nNow you have %d tasks in the list.\", storage.size());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                writeToFile();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method remove the Task at the index from the ArrayList."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param index Indicates which item on the {@link ArrayList} of {@link Task} Storage."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return the String of the task deleted."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String delete(int index) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert index \u003c storage.size() : \"index value greater than list\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert index \u003e 0 : \"index cannot be 0 or negative.\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (index \u003e storage.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return de.exceedList();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task updateCurrAction \u003d storage.get(index - 1);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String currAction \u003d updateCurrAction.toString();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            int amt \u003d storage.size() - 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            storage.remove(index - 1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return ui.deleteMessage(currAction, amt);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method writes the {@link ArrayList} of {@link Task} to the file on the hard disk."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void writeToFile() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            for (int i \u003d 0; i \u003c storage.size(); i++) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                if (storage.get(i).isDone) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    storage.get(i).setStatusIcon();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                String data \u003d String.format(\"%d.\", i + 1) + storage.get(i).toString();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                fileWriter.write(data);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                fileWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method load existing file onto the {@link ArrayList} of {@link Task} Storage."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param str This is the Task from the file to be loaded from."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void load(String str) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        boolean alreadyDone \u003d checkIfDone(str);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (str.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] results \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task task \u003d new Todo(results[1]);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            task.isDone \u003d alreadyDone;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (alreadyDone) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                task.getStatusIcon();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            storage.add(task);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (str.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] results \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] actionTime \u003d results[1].split(\"\\\\|\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String time \u003d actionTime[1].strip().substring(3).strip();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            formatDateTimeForLoad(time);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task task \u003d new Deadline(actionTime[0], time, dateTimes);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            task.isDone \u003d alreadyDone;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (alreadyDone) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                task.getStatusIcon();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            storage.add(task);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else if (str.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] results \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String[] actionTime \u003d results[1].split(\"\\\\|\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String time \u003d actionTime[1].strip().substring(3).strip();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            formatDateTimeForLoad(time);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Task task \u003d new Event(actionTime[0], time, dateTimes);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            task.isDone \u003d alreadyDone;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (alreadyDone) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                task.getStatusIcon();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            storage.add(task);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method checks if Tasks in the loaded file is completed."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param str This is the Task."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return boolean This return true if the task has been completed."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public boolean checkIfDone(String str) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return str.contains(\"[1]\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method finds Task that contains the Action."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param action This is the Action to be located in the {@link ArrayList} of {@link Task} Storage."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return the String of all the items in the list that match."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String find(String action) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        ArrayList\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        for (Task task : storage) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            task.getStatusIcon();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            String data \u003d task.toString();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (data.contains(action)) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                matches.add(String.format(\"%d.\", counter) + data);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (matches.isEmpty()) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            output \u003d de.noMatchesFound();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            output \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            for (String item : matches) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                output \u003d String.format(\"%s%s\\n\", output, item);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method format the input detail to date and time."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param detail This is the string to be formatted."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return the string of correct format."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String formatDateTime(String detail) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String timing;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String[] details \u003d detail.split(\" \");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Date date \u003d inputDate.parse(details[0]);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dateTimes[0] \u003d outputDate.format(date);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dateTimes[1] \u003d \" \";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (details.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    Date time \u003d inputTime.parse(details[1]);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    dateTimes[1] \u003d outputTime.format(time);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } catch (DateTimeException | ParseException d) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    d.printStackTrace();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    return de.invalidTimeFormat();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            timing \u003d dateTimes[0] + \" \" + dateTimes[1];"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return timing;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (DateTimeException | ParseException d) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            d.printStackTrace();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            return de.invalidDateFormat();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method format the date and time from the loaded file."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param detail String read from the file."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void formatDateTimeForLoad(String detail) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        SimpleDateFormat loadInputDate \u003d new SimpleDateFormat(\"MMM dd yyyy\");  //input date format of MMM dd yyyy"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        SimpleDateFormat loadInputTime \u003d new SimpleDateFormat(\"hh:mm a\");        //input time in hh:mm AM/PM"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String[] details \u003d detail.split(\" \");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            Date date \u003d loadInputDate.parse(details[0]);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dateTimes[0] \u003d outputDate.format(date);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            dateTimes[1] \u003d \" \";"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            if (details.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    Date time \u003d loadInputTime.parse(details[1]);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    dateTimes[1] \u003d outputTime.format(time);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                } catch (DateTimeException d) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                    d.printStackTrace();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } catch (DateTimeException | ParseException d) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            d.printStackTrace();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 333
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected String description; //action to be taken"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected boolean isDone; //status of the action"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected String statusIcon;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    protected Date[] dateTimes \u003d new Date[2];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This methods updates the Task action and indicate that it is incomplete."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the action for the Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        //this.statusIcon \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.statusIcon \u003d \"✗\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This methods changes the status icon."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            this.statusIcon \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            //this.statusIcon \u003d \"✓\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            this.statusIcon \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            //this.statusIcon \u003d \"✗\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method set the status icon to 1 for easier storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void setStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        this.statusIcon \u003d  \"1\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Date getTime() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return dateTimes[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String getStrTime() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[\" + statusIcon + \"] \" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 61
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method updates the action to be taken."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param description This is the action to be taken."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assert description !\u003d null : \"Description cannot be empty\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method indicates that a new Task has been added to the ArrayList in Store."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + \" [T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the welcome message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the welcome message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String welcomeMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Hi, welcome to your very own Personal Schedule! \\nHow can I help you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method return the Bye Message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the bye message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String byeMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method forms the Delete action message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param action This is the action to be deleted."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param amt This is the amount of element in the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return String This is the Message for the Delete action."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String deleteMessage(String action, int amt) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        String output \u003d String.format(\"\\nNow you have %d tasks in the list.\\n\", amt);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n\" + action + output;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * This method forms the message for the Done action."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @param action This is the action that has been completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     * @return This is the message for the Done action."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public String doneMessage(String action) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + action;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 41
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background: #ffffff\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" promptText\u003d\"Enter commands\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" style\u003d\"-fx-base: #ff0000\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Task task \u003d new Todo(\"hi\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assertEquals(\"[T][✗] hi\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    public void storeTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        File file \u003d new File(\"D:/duke/data/d.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        Store store \u003d new Store(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "        assertEquals(\"Now you have 1 tasks in the list.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                        + \"____________________________________________________________\\n\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "                store.todo(\"hw\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 23
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": " [T][✖] read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samanthaseahpl"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Samanthaseahpl": 21
    }
  }
]
