[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "[![Build Status](https://travis-ci.com/kevinputera/duke.svg?branch\u003dmaster)](https://travis-ci.com/kevinputera/duke)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "kevinputera": 2,
      "-": 39
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    id \"java\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    id \"application\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    id \"checkstyle\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"5.1.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    id \"org.openjfx.javafxplugin\" version \"0.0.8\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "group \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "version \"1.0.1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    testImplementation \"org.junit.jupiter:junit-jupiter:5.5.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        showStandardStreams \u003d true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    toolVersion \u003d \"8.23\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    archiveVersion \u003d \"1.0.1\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    classifier \u003d \"\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    modules \u003d ["
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        \"javafx.controls\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        \"javafx.fxml\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 41,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "![Duke Screenshot](./Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "**Duke** is a personal task manager. Useful features include, but not limited to:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "* Maintain a todo list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "* Maintain an event happening list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "* Maintain a deadline list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "* Quickly search through the list using keywords"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Adding a todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Adds a todo to **Duke**\u0027s list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `todo \u003ctitle\u003e`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Example: `todo buy halloween costume`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Adding an event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Adds an event (plus the time it\u0027s happening) to **Duke**\u0027s list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `event \u003ctitle\u003e /at \u003cyyyy-mm-dd\u003e`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Example: `event open house /at 2020-05-20`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Adding an deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Adds an deadline (plus the time it\u0027s due) to **Duke**\u0027s list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `deadline \u003ctitle\u003e /by \u003cyyyy-mm-dd\u003e`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Example: `deadline cs2103t post lecture quiz /by 2020-05-20`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Marking a todo/event/deadline as done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Marks a todo/event/deadline as done, thus removing it from **Duke**\u0027s list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `done \u003citem-index\u003e`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Example: `done 1` will mark the first item in the list as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Finding by keyword"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Finds a todo/event/deadline using a specified keyword from **Duke**\u0027s list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Example: `find cs3230` will find all the items containing the keyword `cs3230`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Deleting a todo/event/deadline"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Deletes a todo/event/deadline from **Duke**\u0027s list by its index."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `delete \u003citem-index\u003e`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Example: `delete 1` will remove the first item from the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Listing all todos/events/deadlines"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Lists all todos/events/deadlines stored in **Duke**\u0027s list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `list`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "### Displaying help message"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Displays **Duke**\u0027s available commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "Command: `help`"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 53,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.component.AppComponent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.model.TaskModel;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * A personal note-taking assistant."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        primaryStage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        TaskModel taskModel \u003d new TaskModel(Paths.get(System.getProperty(\"user.dir\"), \"data.txt\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        AppComponent app \u003d new AppComponent(taskModel);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Scene scene \u003d new Scene(app);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 26
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 7
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 9
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * Represents an add command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final Task addTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Creates an add command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param addTask New task to be added"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public AddCommand(Task addTask) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert addTask !\u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.addTask \u003d addTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public ExecuteResult execute(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        newTasks.add(addTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new ExecuteResult("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                newTasks,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"  \" + addTask + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\", tasks.size() + 1),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 38
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public static class ExecuteResult {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        private final String message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        private final boolean hasNextCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "         * Instantiates an data structure containing the results of calling"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "         * the {@link #execute(List, String, boolean) execute} method."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "         * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "         * @param tasks Updated tasks after executing the command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "         * @param message Message given as a response to executing the command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "         * @param hasNextCommand Whether or not the current command is terminal"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "         */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        public ExecuteResult(List\u003cTask\u003e tasks, String message, boolean hasNextCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            assert tasks !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            assert message !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            this.message \u003d message;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            this.hasNextCommand \u003d hasNextCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        public String getMessage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return hasNextCommand;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public abstract ExecuteResult execute(List\u003cTask\u003e tasks) throws DukeException; "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final int deleteIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public DeleteCommand(int deleteIndex) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public ExecuteResult execute(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, delete index is out of bounds\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        newTasks.remove(deleteIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new ExecuteResult("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                newTasks,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"  \" + tasks.get(deleteIndex) + \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list\", tasks.size() - 1),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final int doneIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public DoneCommand(int doneIndex) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.doneIndex \u003d doneIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public ExecuteResult execute(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (doneIndex \u003c 0 || doneIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, done index is out of bounds\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Task doneTask \u003d tasks.get(doneIndex).setDone(true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        newTasks.set(doneIndex, doneTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new ExecuteResult("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                newTasks,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"  \" + doneTask,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public ExecuteResult execute(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new ExecuteResult(tasks, \"Bye. Hope to see you again soon!\", false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 13
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * Represents a \u0027find\u0027 command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Creates a \u0027find\u0027 command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param keyword Keyword to be found"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert keyword !\u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public ExecuteResult execute(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new ExecuteResult("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                tasks,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + tasks.stream()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                        .map(Object::toString)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                        .filter(taskString -\u003e taskString.matches(\".*\" + keyword + \".*\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                        .collect(Collectors.joining(\"\\n\")),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 38
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public ExecuteResult execute(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new ExecuteResult("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                tasks,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Usage: [command] \u003cargs...\u003e\\n\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"Command includes:\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    1. todo \u003ctitle\u003e : Adds a new todo to the list of tasks.\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    2. deadline \u003ctitle\u003e /by \u003cYYYY-MM-DD\u003e : Adds a new\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"              deadline to the list of tasks.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    3. event \u003ctitle\u003e /at \u003cYYYY-MM-DD\u003e : Adds a new event\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"              to the list of tasks.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    4. done \u003cindex\u003e : Marks the task at the specified index\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"              as done.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    5. find \u003ckeyword\u003e : Finds tasks containing the specified\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"              keyword.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    6. delete \u003cindex\u003e : Removes the task at the specified\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"              index.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    7. list : Lists out all the tasks available.\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"    8. help : Prints help.\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public ExecuteResult execute(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new ExecuteResult("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                tasks,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"You don\u0027t have any tasks for the moment!\\n\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            );"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new ExecuteResult("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                tasks,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + IntStream.range(0, tasks.size())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                        .boxed()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                        .map(index -\u003e String.format(\"%d.%s\", index + 1, tasks.get(index)))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                        .collect(Collectors.joining(\"\\n\")),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 31
    }
  },
  {
    "path": "src/main/java/duke/component/AppComponent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.model.TaskModel;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * Duke\u0027s root application component."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class AppComponent extends VBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private ScrollPane messageListContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private VBox messageList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private TextField messageInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final TaskModel taskModel;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Create Duke\u0027s root application component."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public AppComponent(TaskModel taskModel) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.taskModel \u003d taskModel;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/AppComponent.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new RuntimeException(exception);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        getStylesheets().add(\"/style/App.css\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private void askQuery(ActionEvent event) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        String query \u003d messageInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        messageInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        // Display user query in messageList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        messageList.getChildren().add(new UserMessageComponent(query));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        // Process input and display result in messageList"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Command command \u003d Parser.parse(query);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Command.ExecuteResult result \u003d command.execute(taskModel.getTasks());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            messageList.getChildren().add(new DukeMessageComponent(result.getMessage()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            taskModel.updateTasks(result.getTasks());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            // Check whether or not app window should be closed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            if (!result.hasNextCommand()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            messageList.getChildren().add(new DukeMessageComponent(exception.getMessage() + \"!\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            messageList.getChildren().add(new DukeMessageComponent(\"Failed to persist data!\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private void initialize() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        // Auto-scroll messageListContainer to its bottom"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        messageListContainer.vvalueProperty().bind(messageList.heightProperty());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        // Display startup message"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        messageList.getChildren().add("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                new DukeMessageComponent(\"Hello, I\u0027m Duke. What can I help you with?\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 85
    }
  },
  {
    "path": "src/main/java/duke/component/DukeMessageComponent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * Represents a message sent by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class DukeMessageComponent extends MessageComponent {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Constructs a message sent by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param messageString Message string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public DukeMessageComponent(String messageString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        super(messageString, \"/image/DaDuke.png\", Alignment.LEFT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 15
    }
  },
  {
    "path": "src/main/java/duke/component/MessageComponent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.geometry.NodeOrientation;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * Represents a message component."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class MessageComponent extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public static enum Alignment {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        LEFT, RIGHT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private Circle profilePhoto;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private Label message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final String messageString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final String profilePhotoUrl;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final Alignment alignment;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Constructs a message component."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param messageString Message string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param profilePhotoUrl URL to the profile photo of the user who sent the message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param alignment Message alignment"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public MessageComponent(String messageString, String profilePhotoUrl, Alignment alignment) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.messageString \u003d messageString;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.profilePhotoUrl \u003d profilePhotoUrl;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.alignment \u003d alignment;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MessageComponent.fxml\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new RuntimeException(exception);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private void initialize() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        message.setText(messageString);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        profilePhoto.setFill(new ImagePattern(new Image(profilePhotoUrl)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        switch (alignment) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        case RIGHT:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        case LEFT:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            setNodeOrientation(NodeOrientation.LEFT_TO_RIGHT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 66
    }
  },
  {
    "path": "src/main/java/duke/component/UserMessageComponent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * Represents a message sent by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class UserMessageComponent extends MessageComponent {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Constructs a message sent the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param messageString Message string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public UserMessageComponent(String messageString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        super(messageString, \"/image/DaUser.png\", Alignment.RIGHT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 15
    }
  },
  {
    "path": "src/main/java/duke/model/TaskModel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " * Represents a task model that is backed with a flat-file database."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class TaskModel {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private final Path storagePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private List\u003cTask\u003e tasks; "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Creates a task model."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param storagePath Path to the flat-file database"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public TaskModel(Path storagePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.storagePath \u003d storagePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            tasks \u003d load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Update tasks with the new list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param tasks The new list of tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @throws IOException Throws when there is some problem with the writing process"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public void updateTasks(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (this.tasks \u003d\u003d tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Saves the tasks provided to the disk as a flat file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @throws IOException Throws when there is some problem with the writing process"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public void save() throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Files.write("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            storagePath,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            tasks.stream()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    .map(this::serializeTask)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    .collect(Collectors.toUnmodifiableList()),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            StandardCharsets.UTF_8"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private String serializeTask(Task task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Todo todo \u003d (Todo) task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return String.format(\"T,%s,%b\", todo.getTitle(), todo.isDone());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    \"E,%s,%b,%s\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    event.getTitle(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    event.isDone(),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    event.getDateAt().format(DateTimeFormatter.ISO_DATE)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    \"D,%s,%b,%s\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    deadline.getTitle(),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    deadline.isDone(),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                    deadline.getDateBy().format(DateTimeFormatter.ISO_DATE)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            );"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new RuntimeException(\"Unknown task type\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Loads tasks from the disk (from a flat-file database)."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @return Tasks loaded from the disk"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @throws IOException Throws when there is some problem with the reading process"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return Files.readAllLines(storagePath).stream()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                .map(this::deserializeTask)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                .collect(Collectors.toUnmodifiableList());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    } "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private Task deserializeTask(String serialized) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        String[] tokens \u003d serialized.split(\",\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(tokens[2]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (tokens[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new Todo(tokens[1], isDone);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (tokens[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            LocalDate dateAt \u003d LocalDate.parse(tokens[3]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new Event(tokens[1], isDone, dateAt);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (tokens[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            LocalDate dateBy \u003d LocalDate.parse(tokens[3]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new Deadline(tokens[1], isDone, dateBy);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new RuntimeException(\"Unknown serialized task type\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 123
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private LocalDate dateBy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Deadline(String title, boolean isDone, LocalDate dateBy) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.dateBy \u003d dateBy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Deadline(String title, LocalDate dateBy) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this(title, false, dateBy);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public LocalDate getDateBy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return dateBy;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Deadline setDone(boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new Deadline(getTitle(), isDone, dateBy);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                isDone() ? \"\\u2713\" : \"\\u2717\", // \\u2713 \u003d tick, \\u2717 \u003d cross"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                getTitle(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                dateBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (!(obj instanceof Deadline)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Deadline other \u003d (Deadline) obj;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return dateBy.equals(other.getDateBy()) \u0026\u0026 super.equals(obj);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private LocalDate dateAt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Event(String title, boolean isDone, LocalDate dateAt) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.dateAt \u003d dateAt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Event(String title, LocalDate dateAt) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this(title, false, dateAt);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public LocalDate getDateAt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return dateAt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Event setDone(boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new Event(getTitle(), isDone, dateAt);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                isDone() ? \"\\u2713\" : \"\\u2717\", // \\u2713 \u003d tick, \\u2717 \u003d cross"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                getTitle(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                dateAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (!(obj instanceof Event)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Event other \u003d (Event) obj;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return dateAt.equals(other.getDateAt()) \u0026\u0026 super.equals(obj);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Task(String title, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public abstract Task setDone(boolean isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (!(obj instanceof Task)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Task other \u003d (Task) obj;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return isDone \u003d\u003d other.isDone \u0026\u0026 Objects.equals(title, other.title);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Todo(String title, boolean isDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Todo(String title) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        this(title, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public Todo setDone(boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return new Todo(getTitle(), isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"[T][%s] %s\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                isDone() ? \"\\u2713\" : \"\\u2717\", // \\u2713 \u003d tick, \\u2717 \u003d cross"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                getTitle()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (!(obj instanceof Todo)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        return super.equals(obj);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 33
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.util; "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * Parses a string input and return the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * (one of the subclasses of {@link duke.command.Command}) the input represents."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @param input String input to be parsed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @return A command the string input represents"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     * @throws DukeException Throws if invalid input string is received"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return parseDoneInput(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return parseDeleteInput(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return parseFindInput(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return parseTodoInput(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return parseEventInput(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return parseDeadlineInput(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"help\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(String.format(\"Oops, \u0027%s\u0027 is an invalid input\", input));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private static Command parseDoneInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Pattern donePattern \u003d Pattern.compile(\"^done\\\\s+(\\\\d+)$\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Matcher doneMatcher \u003d donePattern.matcher(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (doneMatcher.matches()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(doneMatcher.group(1)) - 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, invalid done command\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private static Command parseDeleteInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Pattern deletePattern \u003d Pattern.compile(\"^delete\\\\s+(\\\\d+)$\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Matcher deleteMatcher \u003d deletePattern.matcher(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (deleteMatcher.matches()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(deleteMatcher.group(1)) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, invalid delete command\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    } "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private static Command parseFindInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Pattern findPattern \u003d Pattern.compile(\"^find\\\\s+(.+)$\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Matcher findMatcher \u003d findPattern.matcher(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (findMatcher.matches()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new FindCommand(findMatcher.group(1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, invalid find command\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private static Command parseTodoInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Pattern todoPattern \u003d Pattern.compile(\"^todo\\\\s+(.+)$\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Matcher todoMatcher \u003d todoPattern.matcher(input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (todoMatcher.matches()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Todo newTodo \u003d new Todo(todoMatcher.group(1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new AddCommand(newTodo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, invalid todo command\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private static Command parseEventInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Pattern eventPattern \u003d Pattern.compile(\"^event\\\\s+(.+)\\\\s+/at\\\\s+(\\\\d{4}-\\\\d{2}-\\\\d{2})$\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Matcher eventMatcher \u003d eventPattern.matcher(input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (eventMatcher.matches()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            LocalDate dateAt \u003d LocalDate.parse(eventMatcher.group(2));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Event newEvent \u003d new Event(eventMatcher.group(1), dateAt);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new AddCommand(newEvent);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, invalid event command\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    private static Command parseDeadlineInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Pattern deadlinePattern \u003d Pattern.compile(\"^deadline\\\\s+(.+)\\\\s+/by\\\\s+(\\\\d{4}-\\\\d{2}-\\\\d{2})$\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        Matcher deadlineMatcher \u003d deadlinePattern.matcher(input);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        if (deadlineMatcher.matches()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            LocalDate dateBy \u003d LocalDate.parse(deadlineMatcher.group(2));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(deadlineMatcher.group(1), dateBy);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            return new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "            throw new DukeException(\"Oops, invalid deadline command\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 118
    }
  },
  {
    "path": "src/main/resources/view/AppComponent.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.layout.Border?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003cfx:root type\u003d\"javafx.scene.layout.VBox\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  \u003cScrollPane"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    fx:id\u003d\"messageListContainer\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    VBox.vgrow\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    prefHeight\u003d\"500\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    fitToWidth\u003d\"true\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  \u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    \u003cVBox fx:id\u003d\"messageList\" spacing\u003d\"12\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        \u003cInsets top\u003d\"12\" left\u003d\"12\" bottom\u003d\"24\" right\u003d\"12\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  \u003cHBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    \u003cTextField"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "      fx:id\u003d\"messageInput\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "      HBox.hgrow\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "      prefWidth\u003d\"500\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "      promptText\u003d\"Ask Duke anything!\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "      onAction\u003d\"#askQuery\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    \u003cButton text\u003d\"Ask\" onAction\u003d\"#askQuery\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  \u003c/HBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 34
    }
  },
  {
    "path": "src/main/resources/view/MessageComponent.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  alignment\u003d\"CENTER_LEFT\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  spacing\u003d\"8\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  xmlns:fx\u003d\"http://javafx.com/fxml\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  \u003cCircle fx:id\u003d\"profilePhoto\" radius\u003d\"32\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "  \u003cLabel fx:id\u003d\"message\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 14
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.Command.ExecuteResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public void execute_emptyTaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final String TODO_TITLE \u003d \"Complete Level 9\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final Todo TODO \u003d new Todo(TODO_TITLE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final List\u003cTask\u003e EMPTY_TASK_LIST \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final List\u003cTask\u003e EXPECTED_TASK_LIST \u003d List.of(TODO);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final String EXPECTED_MESSAGE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"  [T][\\u2717] \" + TODO_TITLE + \"\\n\" // \\u2717 \u003d cross"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(TODO);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        ExecuteResult result \u003d addCommand.execute(EMPTY_TASK_LIST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assertEquals(EXPECTED_TASK_LIST, result.getTasks());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assertEquals(EXPECTED_MESSAGE, result.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 30
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.command.Command.ExecuteResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public void execute_indexOutOfBounds_exceptionThrown() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final int DONE_INDEX \u003d 500;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final List\u003cTask\u003e EMPTY_TASK_LIST \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        DoneCommand doneCommand \u003d new DoneCommand(DONE_INDEX);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e doneCommand.execute(EMPTY_TASK_LIST));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    public void execute_normal_workCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final int DONE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final String TODO_TITLE \u003d \"Complete Level 9\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final Todo TODO \u003d new Todo(TODO_TITLE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final List\u003cTask\u003e TASK_LIST \u003d List.of(TODO);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final List\u003cTask\u003e EXPECTED_TASK_LIST \u003d List.of(TODO.setDone(true));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        final String EXPECTED_MESSAGE \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "                + \"  [T][\\u2713] \" + TODO_TITLE; // \\u2713 \u003d tick"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        DoneCommand doneCommand \u003d new DoneCommand(DONE_INDEX);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        ExecuteResult result \u003d doneCommand.execute(TASK_LIST);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevinputera"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assertEquals(EXPECTED_TASK_LIST, result.getTasks());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "        assertEquals(EXPECTED_MESSAGE, result.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevinputera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevinputera": 42
    }
  }
]
