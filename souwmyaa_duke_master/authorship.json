[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 20,
      "-": 21
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "T|1|jonge"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "D|0|this|2030-06-11 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "D|0|this|2030-06-10 1900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "D|0|this|2030-06-11 1901"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "T|0|this"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "T|1|lecture 1"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 6
    }
  },
  {
    "path": "src/main/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "T|1|hey"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "T|0|yo"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2
    }
  },
  {
    "path": "src/main/java/Add.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Add extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Task ob;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    int saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Add(Task ob, int saved) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.ob \u003d ob;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.saved \u003d saved;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This function executes the add command for tasks of all types."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * It initially calls a function from DetectDuplicates class to detect and remove an duplicates in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return Returns affirmation that add has been done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DetectDuplicates detect;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (ob.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            detect \u003d new DetectDuplicates(ob.getTaskName(), ob.getType());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (ob.getType().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                detect \u003d new DetectDuplicates(ob.getTaskName(), ob.getType(), ((Deadline)ob).getTime());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                detect \u003d new DetectDuplicates(ob.getTaskName(), ob.getType(), ((Event)ob).getTime());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        detect.removeDuplicates(tasks, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.getList().add(ob);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String k \u003d ob.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (saved \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            + k + \"\\nNow you have \" + tasks.getList().size()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            + \" tasks in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 40
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Command(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    abstract String execute(TaskList task, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 12
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Deadline(String taskName, LocalDateTime by, int done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(\"deadline\", done, taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    LocalDateTime getTime() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String formatDateTime \u003d by.format(format);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return by; //return the localDateTime"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String formatDateTime \u003d by.format(format);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 24
    }
  },
  {
    "path": "src/main/java/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Delete extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    int num;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Delete(int num) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * It executes the delete command by removing the specified task from the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param tasks Object of type TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param storage Object of type Storage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return Returns affirmation that delete has been done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assert num \u003c\u003d tasks.getList().size() \u0026\u0026 num \u003e\u003d 0 : \"This task number does not exist in the list. \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please try again!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String s \u003d tasks.getList().get(num - 1).toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.getList().remove(num - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + s"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"\\nNow you have \" + (tasks.getList().size()) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 24
    }
  },
  {
    "path": "src/main/java/DetectDuplicates.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DetectDuplicates {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DetectDuplicates(String str, String type, LocalDateTime time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DetectDuplicates(String str, String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes all duplicate tasks from the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param storage Storage object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void removeDuplicates(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (tasks.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (tasks.getList().get(i).getTaskName().equalsIgnoreCase(str)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u0026\u0026 tasks.getList().get(i).getType().equalsIgnoreCase(type)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    Task ob \u003d tasks.getList().get(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    if (ob.getType() \u003d\u003d \"todo\") {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        Delete d \u003d new Delete(i + 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        d.execute(tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        LocalDateTime object;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        if (ob.getType() \u003d\u003d \"deadline\") {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            object \u003d ((Deadline)ob).getTime();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            object \u003d ((Event) ob).getTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        if (this.time.isEqual(object)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            Delete d \u003d new Delete(i + 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            d.execute(tasks, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 51
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.OverrunStyle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialog.setFont(Font.font(\"Verdana\", 14));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialog.setTextFill(Color.WHITE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialog.setTextOverrun(OverrunStyle.CLIP);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialog.setMinSize(200, Label.USE_PREF_SIZE + 50);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns a dialogbox object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param text Text to be displayed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param img Image to be displayed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return DialogBox object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 71
    }
  },
  {
    "path": "src/main/java/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Done extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    String num;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Done(String num) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes the done command by marking the respective task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param tasks Task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return Returns the affirmation that task has been marked as completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int number \u003d Integer.valueOf(num);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task ob \u003d tasks.getList().get(number - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String k \u003d ob.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ob.setDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + k;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String filePath \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int ind \u003d filePath.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assert ind \u003d\u003d -1 : \"File path is incorrect\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String path \u003d filePath.substring(0, ind + 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filePath \u003d path.concat(\"duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            //if file is empty"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parses user input and executes the same."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return String to be displayed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException Throws IOException."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getResponse(String fullCommand) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Command c \u003d Parser.parse(0,fullCommand,0, tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return c.execute(tasks, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 40,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Duke Exception constructor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Event(int done, String taskName, LocalDateTime at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(\"event\",done, taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    LocalDateTime getTime() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String formatDateTime \u003d at.format(format);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String formatDateTime \u003d at.format(format);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formatDateTime + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 24
    }
  },
  {
    "path": "src/main/java/Exit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Exit extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Exit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes exit command. Initially stores list items in text file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param tasks Task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return Affirmation that exit will be done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException Throws IOException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 25
    }
  },
  {
    "path": "src/main/java/Find.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Find extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    String str;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Find(String str) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * It executes the find command by searching for every task that contains that keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param tasks Object of type TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param storage Object of type Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return Returns the list of tasks that contain user input keyword"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StringBuilder s \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (tasks.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (tasks.getList().get(i).getTaskName().contains(str)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    s \u003d s.append((i + 1) + \".\" + tasks.getList().get(i) + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                s \u003d s.append(\"Nothing Available with : \" + str + \"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            s \u003d s.append(\"NoTasks available\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return s.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 36
    }
  },
  {
    "path": "src/main/java/Help.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Help extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Help(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (this.index) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"This function can be used to add a task to the list.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"The task you add can be of type todo, event or deadline\\n\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for todo is \\\"todo task_name\\\"\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for event is \\\"event task_name /at yyyy-MM-dd HHmm\\\"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for deadline is \\\"deadline task_name /by yyyy-MM-dd HHmm\\\"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"This function can be used to delete a task.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for delete is \\\"delete task_number\\\"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"This function can be used to find a task in the list.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"It will display all tasks that contain the keyword specified.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for find is \\\"find key_word\\\"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"This function marks a task in your list as complete by changing [N] to [Y].\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for done \\\"done task_number\\\"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"This functions displays a list of all the tasks in your list.\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"It uses T for todo, D for deadline and E for event.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for list is \\\"list\\\"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"This function will let you exit Duke\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Format for exit is \\\"bye\\\"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return \"This is not a valid function! Please try again.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 37
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 9
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ListCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes list command by displaying the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param tasks Task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here is the list of tasks:\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            output.append((i + 1) + \". \" + tasks.getList().get(i));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (i !\u003d tasks.getList().size() - 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String s \u003d output.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 25
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Initializes the main window of the application."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Background bg \u003d new Background(new BackgroundFill("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Color.web(\"#212121\"), CornerRadii.EMPTY, new Insets(0, 0, 0, 0)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //inside offsets-\u003e0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialogContainer.setBackground(bg); //set background color to black"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void greet() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StringBuilder logo \u003d new StringBuilder(\"Hello! I am DUKE.\\n\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"These are the functions I provide:\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"1. Add a task- task may be of type todo, deadline or event\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"2. Delete a task\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"3. Find a task\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"4. Mark a task as completed/done\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"5. List all tasks\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"6. Exit the application\\n\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please enter the respective number of a function for more information on usage!\\n\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"NOTE: The application automatically deletes duplicated tasks\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DialogBox.getDukeDialog(logo.toString(), dukeImage)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        );"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (response.equalsIgnoreCase(EXIT_MESSAGE)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Stage stage \u003d Stage.class.cast(VBox.class.cast(dialogContainer).getScene().getWindow());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                PauseTransition pauseTransition \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                pauseTransition.setOnFinished(event -\u003e stage.close());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                pauseTransition.play();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 97
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Formats the deadline and event type commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param sentence Input line."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param locOfSpace Location of space."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param type Type of entry."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param done Done status."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return Task object of type deadline/event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static Task formatter(String sentence, int locOfSpace, String type, int done) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int locOfSlash \u003d sentence.indexOf(\"/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (locOfSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DukeException ex \u003d new DukeException(\":( OOPS!!! \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Incorrect format!\\n The correct format for deadline is task_name /by yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw ex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DukeException ex \u003d new DukeException(\":( OOPS!!! \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Incorrect format!\\n The correct format for event is task_name /at yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw ex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if ((locOfSpace + 1) \u003e\u003d (locOfSlash)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            DukeException ex \u003d new DukeException(\":( OOPS!!! \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Missing description!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String description \u003d sentence.substring(locOfSpace + 1, locOfSlash - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String time \u003d sentence.substring(locOfSlash + 4);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(time, format);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task obj;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            obj \u003d new Deadline(description, dateTime, done);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            obj \u003d new Event(done, description, dateTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return obj;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parses the input and returns the respective command object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param saved Saved status."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param sentence Input line."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param done Done status."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException Throws IOException."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws DukeException Throws DukeException."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static Command parse(int saved, String sentence, int done, TaskList tasks) throws IOException, DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int locOfSpace \u003d sentence.indexOf(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String firstWord \u003d (locOfSpace \u003d\u003d -1) ? sentence : sentence.substring(0, locOfSpace);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (firstWord.equals(sentence) \u0026\u0026 firstWord.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            char ch \u003d firstWord.charAt(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            boolean isDigit \u003d Character.isDigit(ch);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (isDigit) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Help h \u003d new Help(Integer.valueOf(firstWord));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return h;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DukeException ex \u003d new DukeException(\":( OOPS!!! \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"I do not know what you mean\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw ex;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int num \u003d Integer.valueOf(sentence.substring(locOfSpace + 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (num \u003e\u003d 0 \u0026\u0026 num \u003c\u003d tasks.getList().size()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new Delete(num);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DukeException ex \u003d new DukeException(\":( OOPS!!! \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"This task number does not exist in the list\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw ex;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new Done(sentence.substring(locOfSpace + 1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new Exit();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new Find(sentence.substring(locOfSpace + 1));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (sentence.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DukeException ex \u003d new DukeException(\":( OOPS!!! \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw ex;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new Add(formatter(sentence, locOfSpace, \"deadline\",done),saved);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (sentence.equals(\"todo\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DukeException ex \u003d new DukeException(\":( OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw ex;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Todo todoObj \u003d new Todo(done,sentence.substring(locOfSpace + 1));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new Add(todoObj,saved);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (sentence.equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DukeException ex \u003d new DukeException(\":( OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw ex;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new Add(formatter(sentence, locOfSpace, \"event\",done),saved);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            DukeException ex \u003d new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 120
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    String path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.path \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //if duke.txt is empty-\u003e raise exception, else create list and return it"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try (FileReader fr \u003d new FileReader(path)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Scanner sc \u003d new Scanner(fr);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new DukeException(\"List is currently empty\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Task ob \u003d eval(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                list.add(ob);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Task eval(String line)throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int i \u003d line.indexOf(\"|\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assert i !\u003d -1 : \"Error in text file\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String type \u003d line.substring(0, i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type \u003d \"todo\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type \u003d \"event\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type \u003d \"deadline\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String sentence;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int j \u003d line.indexOf(\"|\",i + 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String done \u003d line.substring(i + 1, j);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int d \u003d Integer.valueOf(done);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        i \u003d j;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (!type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            j \u003d line.indexOf(\"|\",i + 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            task \u003d line.substring(i + 1, j);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            time \u003d line.substring(j + 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(time, format);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (type.equals((\"deadline\"))) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new Deadline(task, dateTime, d);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                sentence \u003d type + \" \" + task + \" /at \" + time;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new Event(d, task, dateTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            task \u003d line.substring(j + 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sentence \u003d type + \" \" + task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new Todo(d, task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void save(TaskList tasks)throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(path,false)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Task ob \u003d tasks.getList().get(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                switch (ob.getType()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    s \u003d s + \"D|\" + ob.getDone() + \"|\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            + ob.getTaskName() + \"|\" + ((Deadline)ob).getTime().format(format) + \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    s \u003d s + \"T|\" + ob.getDone()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            + \"|\" + ob.getTaskName() + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    s \u003d s + \"E|\" + ob.getDone()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            + \"|\" + ob.getTaskName() + \"|\" + ((Event)ob).getTime().format(format) + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            fw.write(s);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 112
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int done; //done variable"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Task() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Task(String taskName) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Task(String type, int done, String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        done \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setTaskName(String s) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        taskName \u003d s;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    int getDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    String getTaskName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String yesOrNo \u003d (this.done \u003d\u003d 0) ? \"[N]\" : \"[Y]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return yesOrNo + \" \" + this.taskName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 17
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Todo(int done, String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(\"todo\", done, taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 11
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"200.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/\" xmlns:fx\u003d\"http://javafx.com/fxml/\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cInsets bottom\u003d\"0\" left\u003d\"0\" right\u003d\"0\" top\u003d\"0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #212121;\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #212121; -fx-border-color: white; -fx-border-width: 3; -fx-border-radius: 5; -fx-background-radius: 5; -fx-text-inner-color: white;\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #212121; -fx-border-color: white; -fx-border-width: 3; -fx-background-radius: 5; -fx-border-radius: 5;\" text\u003d\"Send\" textFill\u003d\"WHITE\" AnchorPane.bottomAnchor\u003d\"0.6666666666666643\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #212121;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 9
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task task \u003d new Task(\"todo\",0, \"read book\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(task.getType(), \"todo\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 12
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Todo todo \u003d new Todo(1, \"test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(todo.toString(), \"[T][Y] test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 13
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "  [T][N] read book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "  [D][N] return book (by: June 6th)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "  [E][N] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "  [T][N] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "  [T][N] borrow book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. [T][N] read book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "2. [D][N] return book (by: June 6th)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "3. [E][N] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "4. [T][N] join sports club"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "5. [T][N] borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[D][Y] return book (by: June 6th)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. [T][N] read book"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "2. [D][Y] return book (by: June 6th)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "3. [E][N] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "4. [T][N] join sports club"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "5. [T][N] borrow book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[D][Y] return book (by: June 6th)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. [T][N] read book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "2. [E][N] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "3. [T][N] join sports club"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "4. [T][N] borrow book"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 67
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "yo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 34
    }
  }
]
