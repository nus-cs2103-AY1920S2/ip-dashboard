[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 34,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "Todo~0~watching TV"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "Todo~0~group meeting"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "Event~1~presentation~2020-02-23"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "Event~0~e-learning~2020-10-29"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "Deadline~1~play guitar~2020-04-05"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 5
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        Circle circle \u003d new Circle(48, 33, 25);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        displayPicture.setClip(circle);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 62
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.security.InvalidKeyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * Represents a Duke bot. This is also the main class of duke project."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public static String taskData \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            Duke duke \u003d new Duke(taskData);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            return duke.processRequest(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        } catch (InvalidKeyException | IllegalArgumentException | EmptyDescriptionException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                | IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * constructs a Duke bot instance."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param filePath the file path where the bot stores its data collected from the user in."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * processes different requests which is decided by the first token of the message user entered."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param str the first token of the message user entered."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws InvalidKeyException if the first token entered is not a valid command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws IllegalArgumentException if the tokens entered after the first token are not correctly formatted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws EmptyDescriptionException if the user only entered the first token."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String processRequest(String str)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            throws InvalidKeyException, IllegalArgumentException, EmptyDescriptionException, IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        assert !str.isBlank() : \"Your request is missing!!!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        //assert false : \"testing\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (str.equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            throw new InvalidKeyException(\"Try to say something to me.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(str);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String first \u003d st.nextToken(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        switch (parser.getMessage(first)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.parser.checkDescriptionWhetherExit(str, \"done\".length());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            int requestNumber \u003d parser.extractRequestNumber(st.nextToken());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            assert requestNumber \u003c\u003d taskList.size() : \"The number entered is invalid.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.taskList.markDone(requestNumber);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d this.ui.doneMessage(requestNumber, taskList.getTasks());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.storage.rewriteFile(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.parser.checkDescriptionWhetherExit(str, \"delete\".length());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            int requestNumber2 \u003d parser.extractRequestNumber(st.nextToken());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            assert requestNumber2 \u003c\u003d taskList.size() : \"The number entered is invalid.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            Task taskDeleted \u003d this.taskList.delete(requestNumber2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d this.ui.deleteMessage(requestNumber2, taskDeleted, this.taskList.size());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.storage.rewriteFile(taskList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            parser.checkDescriptionWhetherExit(str, \"find\".length());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d ui.printMatchingTasks(taskList.find(st.nextToken()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            parser.checkDescriptionWhetherExit(str, \"todo\".length());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            Todo td \u003d new Todo(st.nextToken(\"\").substring(1));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            taskList.addTask(td);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d this.ui.addMessage(td, this.taskList.size());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.storage.rewriteFile(taskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            parser.checkDescriptionWhetherExit(str, \"deadline\".length());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            String[] strings \u003d parser.stringSplitting(st);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            Deadline ddl \u003d new Deadline(strings[0], parser.getLocalDate(strings[1]));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            taskList.addTask(ddl);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d this.ui.addMessage(ddl, this.taskList.size());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.storage.rewriteFile(taskList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            parser.checkDescriptionWhetherExit(str, \"event\".length());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            String[] strings2 \u003d parser.stringSplitting(st);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            Event ev \u003d new Event(strings2[0], parser.getLocalDate(strings2[1]));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            taskList.addTask(ev);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d this.ui.addMessage(ev, this.taskList.size());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            this.storage.rewriteFile(taskList);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d this.ui.printCurrentList(taskList);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        case HEY:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            output +\u003d this.ui.greet(taskList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            throw new InvalidKeyException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 135,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/thumb-350-1017001.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/thumb-350-1017002.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (input.trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 55
    }
  },
  {
    "path": "src/main/java/duke/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * duke.EmptyDescriptionException extends from Exception class and handle error if the user input is lack of description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 10
    }
  },
  {
    "path": "src/main/java/duke/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public enum Message {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    HEY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 12
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.security.InvalidKeyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * contains methods which deal with making sense of the user command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public static HashMap\u003cString, Message\u003e availableMessage \u003d new HashMap\u003c\u003e() {{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"done\", Message.DONE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"delete\", Message.DELETE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"find\", Message.FIND);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"todo\", Message.TODO);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"deadline\", Message.DEADLINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"event\", Message.EVENT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"list\", Message.LIST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        put(\"hey\", Message.HEY);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * splits the string given in a specific way. (exclusive for deadline and event\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param st the string being split"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @return an array of Stings, containing parts the original String is split into."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String[] stringSplitting(StringTokenizer st) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String temp \u003d st.nextToken(\"/\").substring(1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String description \u003d temp.substring(0, temp.length() - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String byOrAt \u003d st.nextToken(\"/\").substring(3);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return new String[]{description, byOrAt};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * checks whether the input for description is empty or not."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param str the input from user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param length the length of the command being checked."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws EmptyDescriptionException if the description is empty."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void checkDescriptionWhetherExit(String str, int length) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (str.length() \u003c\u003d length + 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            throw new EmptyDescriptionException(\"OOPS!!! The description of a duke.task cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * gets the corresponding duke.Message indicated from the user input String."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param str the first token gotten from the user input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @return a duke.Message from the user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws InvalidKeyException if the input does not give a valid message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Message getMessage(String str) throws InvalidKeyException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        assert Parser.availableMessage.get(str) !\u003d null : \"The request message entered is not valid.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        //Lambda usage here"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return Optional.ofNullable(Parser.availableMessage.get(str))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                .orElseThrow(() -\u003e new InvalidKeyException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public LocalDate getLocalDate(String str) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return LocalDate.parse(str);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * decode the String gotten from the data file into a Task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param data a String gotten from the data file"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @return the Task after decoding the String."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Task parseFromDataFile(String data) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(data);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String className \u003d st.nextToken(\"~\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String status \u003d st.nextToken(\"~\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String description \u003d st.nextToken(\"~\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            String extra \u003d st.nextToken(\"~\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            if (className.equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                Deadline ddl \u003d  new Deadline(description, getLocalDate(extra));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                    ddl.markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                return ddl;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                Event ev \u003d  new Event(description, getLocalDate(extra));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                    ev.markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                return ev;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        Todo td \u003d new Todo(description);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            td.markAsDone();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return td;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public int extractRequestNumber(String str) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return Integer.parseInt(str);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 107
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " *  contains methods which deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * constructs a duke.Storage to save and load Tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param filePath a String indicates where the tasks are going to be saved."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        assert (new File(filePath)).exists() : \"Given file path cannot be found\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * updates the data file when any changes are made to the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param taskList the duke.TaskList being updated."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws IOException if the file path cannot be found."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void rewriteFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        StringBuilder textToWrite \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        for (Task t: taskList.getTasks()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            List\u003cString\u003e details \u003d new ArrayList\u003c\u003e() {{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                    add(t.getClass().getSimpleName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                    add(t.getStatus());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                    add(getSpecificDescription(t));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                }};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            textToWrite.append(String.join(\"~\", details)).append(\"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        fw.write(textToWrite.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * gets an extra piece of information if the Task is a Deadline or Event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param t the Task we are dealing with."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @return the description of the Task and extra information if applicable."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private String getSpecificDescription(Task t) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            description +\u003d \"~\" + ((Deadline) t).getDueDate();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            description +\u003d \"~\" + ((Event) t).getScheduledDate();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * loads the list of tasks stored in hard disk."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @return a list of Tasks gotten from the hard disk."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws IOException if the file path cannot be found."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        List\u003cString\u003e data \u003d Files.readAllLines(Paths.get(this.filePath));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        for (String s: data) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            tasks.add(parser.parseFromDataFile(s));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 79
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " *  A duke.TaskList contains the duke.task list e.g., it has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * construct a duke.TaskList by the list of Tasks given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param tasks a list of Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * checks whether the number input is valid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param num the number given by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param index the size of the duke.TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @return true if num is within the correct range."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public boolean inRange(int num, int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return num \u003c\u003d 0 || num \u003e index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * marks a specific Task in the list as done by parsing the string given as an integer."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param requestNumber a string which tells us which Task we will be dealing with."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws IllegalArgumentException if the string is parsed into a number which is out of the range."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void markDone(int requestNumber) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (inRange(requestNumber, this.tasks.size())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            throw new IllegalArgumentException(\"OOPS!!! The number you checked for may not be valid.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.tasks.get(requestNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * adds a Task to the duke.TaskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param t the Task being added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * deletes a Task in the duke.TaskList by parsing the String given as an Integer."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param requestNumber the String being parsed into an integer"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @throws IllegalArgumentException if the string is parsed into a number which is out of the range."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Task delete(int requestNumber) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        if (inRange(requestNumber, this.tasks.size())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            throw new IllegalArgumentException(\"OOPS!!! The number you checked for may not be valid.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return tasks.remove(requestNumber - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * finds the tasks which contain the keyword given by the user and construct a duke.TaskList by the resulting tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param keyWord a String represents the input of the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public TaskList find(String keyWord) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            if (t.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                matchingTasks.add(t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return new TaskList(matchingTasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 84
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * duke.Ui class has specific methods that deal with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * sets a horizontal line."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public StringBuilder horizontalLine \u003d new StringBuilder(\"   \").append(\"˜\".repeat(70)).append(\"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * adds horizontal line around the message and print it out."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param s the message intended to wrap up."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String typeSetting(String s) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return (horizontalLine + s + \"\\n\" + horizontalLine);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * shows greeting messages to the user and reminds the user what tasks are there in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param taskList the list of Task that stores in the hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String greet(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        //welcome message and showing the list to the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        String s \u003d typeSetting(\"    Hello, I\u0027m Bob. 👶 👶 👶\\n    \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                \"What can I do for you? 😃\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return s + printCurrentList(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * shows exiting message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return typeSetting(\"    Are you sure you want to leave me alone? 🥺 (y/n)\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * shows a specific message when a Task in the list has been marked as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param num the index of the Task which has been marked."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param list the list of Tasks which we are dealing with."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String doneMessage(int num, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return typeSetting(\"    👍 Nice! I\u0027ve marked this duke.task as done: \" + num"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                + \"\\n\" + \"      \" + list.get(num - 1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * shows a specific message when a Task in the list has been deleted from the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param num the index of the Task being deleted."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param t the Task being deleted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param index the number of tasks in the list after deleting."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String deleteMessage(int num, Task t, int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return typeSetting(\"    👌 Noted. I\u0027ve removed this duke.task: \" + num"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                + \"\\n\" + \"      \" + t + \"\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                \"    Now you have \" + index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * shows a specific message when a Task is newly added into the duke.TaskList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param t the Task being added."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param index the number of Tasks in the list after adding."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String addMessage(Task t, int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return typeSetting(\"    🟢 Got it. I\u0027ve added this duke.task: \\n      \" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                t + \"\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                \"    Now you have \" + index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * gets a list which listing all the tasks recorded."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param taskList the duke.TaskList which contains all the Tasks recorded."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String printCurrentList(TaskList taskList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        List\u003cTask\u003e list \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        int index \u003d list.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        StringBuilder li \u003d new StringBuilder(\"    📜 Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            li.append(\"         \").append(i + 1).append(\": \").append(list.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return typeSetting(li.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * an slightly altered version of gettingList. (exclusively used in findTask method in duke.TaskList class)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param taskList the duke.TaskList we are dealing with."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String printMatchingTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        List\u003cTask\u003e list \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        int index \u003d list.size();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        StringBuilder li \u003d new StringBuilder(\"    📜 Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            li.append(\"         \").append(i + 1).append(\": \").append(list.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return typeSetting(li.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 103
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * Deadline class extends from Task class and has an extra property."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private LocalDate dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * construct a Deadline instance by specify its due date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param description the description of the Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param dueDate the due date of the Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Deadline(String description, LocalDate dueDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return this.dueDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * Event class extends from Task class and has an extra property."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    private LocalDate scheduledDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * construct a Event instance by specify its timing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param description the description of the Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param scheduledDate the timing of the Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Event(String description, LocalDate scheduledDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.scheduledDate \u003d scheduledDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public LocalDate getScheduledDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return this.scheduledDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + scheduledDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * defines Task class with basic properties and is set to be not done initally."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * constructs a Task instance by its description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @param description a string represents the Task\u0027s description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * marks the Task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * gets the integer which represents the status of the Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     * @return \"1\" if the Task is done or \"0\" otherwise."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " * Todo class extends from Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 16
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.Cursor?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.paint.LinearGradient?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.paint.Stop?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"840.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #120310;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"10.0\" text\u003d\"labellabellabelllabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabellabelabellabellabellabellabellabellabellabellabellabellabellabellabel\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cFont name\u003d\"PT Mono Bold\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cInsets left\u003d\"11.0\" right\u003d\"11.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003ctextFill\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cLinearGradient cycleMethod\u003d\"REFLECT\" endX\u003d\"0.9448441247002397\" endY\u003d\"0.39328537170263794\" startX\u003d\"0.14388489208633087\" startY\u003d\"0.7553956834532374\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "               \u003cstops\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                  \u003cStop color\u003d\"#00fdff\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                  \u003cStop color\u003d\"#00ff61\" offset\u003d\"0.9962335216572504\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                  \u003cStop color\u003d\"#00ff61\" offset\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "               \u003c/stops\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003c/LinearGradient\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/textFill\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cImage url\u003d\"@../images/thumb-350-1017001.jpg\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/image\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003ccursor\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cCursor fx:constant\u003d\"HAND\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/cursor\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   \u003ceffect\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "      \u003cInnerShadow choke\u003d\"0.43\" color\u003d\"#07d7a6\" height\u003d\"90.79\" radius\u003d\"47.0625\" width\u003d\"99.46\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   \u003c/effect\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 52
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.effect.Glow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"790.0\" prefWidth\u003d\"861.0\" style\u003d\"-fx-background-color: #808080;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"737.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"745.0\" style\u003d\"-fx-background-color: #808080;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cGlow /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cFont name\u003d\"Avenir Book\" size\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"745.0\" layoutY\u003d\"748.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"117.0\" text\u003d\"Send\" textFill\u003d\"#2681c3\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003cFont name\u003d\"Chalkduster\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"753.0\" prefWidth\u003d\"861.0\" style\u003d\"-fx-background-color: #808080;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" style\u003d\"-fx-background-color: #808080;\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 34
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    void getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        Assertions.assertEquals(LocalDate.parse(\"2020-03-19\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                new Deadline(\"read book\", \"2020-03-19\").getBy());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "        assertEquals(\"[D][✘] finish homework (by: Feb 10 2020)\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "                new Deadline(\"finish homework\", \"2020-02-10\").toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 22
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    Hello, I\u0027m Bob."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    What can I do for you? 😃"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    Are you sure you want to leave me alone?🥺 (y/n)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    Bye. Hope to see you again soon!😞"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "   ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "bye"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "y"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kangwkk"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Kangwkk": 34
    }
  }
]
