[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "core.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for core.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    archiveVersion \u003d \"0.1.6\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 41,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. [Introduction](#introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. [Features](#features)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * 3.1. [Adding task](#adding-task) `todo` `deadline` `event` `recurring` "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * 3.2. [Deleting task](#deleting-task) `delete`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * 3.3. [Marking task as done](#marking-task-as-done) `done`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * 3.4. [Finding task](#finding-task) `find`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * 3.5. [Checking the list of tasks](#checking-the-list-of-tasks) `list`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * 3.6. [Resetting the program](#resetting-the-program) `reset`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * 3.7. [Exiting the program](#exiting-the-program) `bye`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "## \u003ca name\u003d\"introduction\"\u003e\u003c/a\u003e Introduction"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "This product is a Personal Assistant Chatbot that helps a person keep track of various tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "## \u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e Quick Start"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. Download the latest [duke.jar](https://github.com/FangShaoHua94/duke/releases/tag/v0.3) here."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder for your Address Book."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "1. Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "## \u003ca name\u003d\"features\"\u003e\u003c/a\u003e Features"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "**Sample**  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003cimg src\u003d\"Ui.png\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "### \u003ca name\u003d\"adding task\"\u003e\u003c/a\u003e Adding task `todo` `deadline` `event` `recurring`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Add a task into the duke.  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Format:  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`todo description`  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`deadline description /by yyyy-MM-dd`  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`event description /at yyyy-MM-dd`  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`recurring description /at yyyy-MM-dd`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`todo read book`    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`deadline homework /by 2020-04-01`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`event lecture /at 2020-05-01`  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`recurring jogging /at 2020-04-01`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Note: recurring task recurs every week."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "### \u003ca name\u003d\"deleting-task\"\u003e\u003c/a\u003e Deleting task `delete`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Delete the indexed task from the duke. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Format:  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`detele index`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "### \u003ca name\u003d\"marking-task-as-done\"\u003e\u003c/a\u003e Marking task as done `done`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Mark the indexed task as done.  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Format:  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`delete index`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`done 4`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Note: if the indexed task is recurring task, it will recur."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "### \u003ca name\u003d\"finding-task\"\u003e\u003c/a\u003e Finding task `find`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Find the tasks with the specified keyword.  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Format:  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`find keyword`  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`find read`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "### \u003ca name\u003d\"checking-the-list-of-tasks\"\u003e\u003c/a\u003e Checking the list of tasks `list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Check all the tasks in the program.  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Format:  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`list`  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "### \u003ca name\u003d\"resetting-the-program\"\u003e\u003c/a\u003eResetting the program `reset`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Clear all the tasks store in the program."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Format:  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`reset`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "### \u003ca name\u003d\"exiting-the-program\"\u003e\u003c/a\u003e Exiting the program `bye`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Exit the program."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "Format:  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "## \u003ca name\u003d\"command-summary\"\u003e\u003c/a\u003e Command Summary"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "* Add   "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`todo description`  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`deadline description /by yyyy-MM-dd`  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`event description /at yyyy-MM-dd`  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "`recurring description /at yyyy-MM-dd`  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "  * Example:  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    `todo read book`    "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    `deadline homework /by 2020-04-01`  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    `event lecture /at 2020-05-01`  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    `recurring jogging /at 2020-04-01`  "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "* Delete `detele index`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * Example: `delete 3`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "* Done `delete index`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * Example:`done 4`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "* Find `find keyword`  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    * Example:`find read`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "* List `list`  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "* Reset `reset`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "* Exit `bye` "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 108,
      "-": 16
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Creates dialog box for duke to respond."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param text response text"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param img  image of duke"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return dialog box to be displayed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 66
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * A GUI for Core.Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private static Stage stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private static final String filepath \u003d System.getProperty(\"user.dir\") + \"\\\\duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Duke duke \u003d new Duke(filepath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            this.stage \u003d stage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public static void close() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        stage.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 42
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.UiMessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private static final String TERMINATE \u003d \"bye\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"A long time ago in a galaxy far, far away...\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            + \"Hello! I\u0027m Luke\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            + \"How may i serve you.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private static final long delayDuration \u003d 2000;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/stormtrooper.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/luke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Initializes the duke with welcome message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        startUp();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (input.equals(TERMINATE)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Displays the welcome message during the start up."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private void startUp() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                DialogBox.getDukeDialog(WELCOME_MESSAGE, dukeImage)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Delays the exit and give time to display the exit message."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }, delayDuration);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 90
    }
  },
  {
    "path": "src/main/java/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of command that add deadline task to the storage."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for command that add a deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description contains the description of the deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param time        contains the deadline of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public AddDeadlineCommand(String description, LocalDate time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(new Deadline(description, time));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 22
    }
  },
  {
    "path": "src/main/java/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of command that add event task to the storage."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for command that add a event task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description contains the description of the event task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param time        contains the event time of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public AddEventCommand(String description, LocalDate time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(new Event(description, time));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 21
    }
  },
  {
    "path": "src/main/java/command/AddRecurringCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.RecurringTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of command that add recurring task to the storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class AddRecurringCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for command that add a event task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description contains the description of the event task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param time        contains the event time of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public AddRecurringCommand(String description, LocalDate time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(new RecurringTask(description, time));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 21
    }
  },
  {
    "path": "src/main/java/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Generic command to add a new task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public abstract class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor to create a new task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param task to be added to the storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public AddTaskCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Executes to add the new task to the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to add task to the data storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the response text of adding task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when adding of the new task is unsuccessful."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui.display(common.addTask(task));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 35
    }
  },
  {
    "path": "src/main/java/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of command that add to do task to the storage."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class AddToDoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for command that add a to do task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description contains the description of the to do task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public AddToDoCommand(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(new ToDo(description));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 19
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * A abstract command to be inherited by specific commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Contains the generic method to be polymorphic."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Executes the specific command to modify the system and"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * output the response to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to modify the data storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the response text of the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when any subsequent process triggers general exception"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Indicates the non-termination of the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return boolean that indicates non-termination of the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 33
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific command to delete a task based on index."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for command to delete the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param index indicates the specific task to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Executes to delete the specific index task from storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to delete task from the data storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the response text of deleting task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when deleting task is unsuccessful."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui.display(common.deleteTask(index));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 35
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific command to mark the task as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for command that mark the task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param index indicates the specific task to be marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Executes to mark the specific index task from storage as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to modify the data storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the response text of marking the task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the marking of the task is unsuccessful."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui.display(common.markAsDone(index));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 34
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific command to exit the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Executes to exit the programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to save the data before exiting programme."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the exit response text."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the saving of data is unsuccessful."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        common.saveData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui.endLog();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Indicates the ermination of the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return boolean that indicates termination of the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 34
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific command to find task that has the keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Displays the list of task that has the keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to check the task in the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the response text of the matching tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the task list is empty or there is no matching task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui.display(common.findTask(keyword));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 29
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific command that display the list of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Executes to display the list of task in the storage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to retrieve the data from storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the list of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the list is empty."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui.display(common.printList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 23
    }
  },
  {
    "path": "src/main/java/command/ResetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Common;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.UiMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific command that reset the storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class ResetCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Executes to reset the temporal and permanent data storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param common to clear the data storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param ui     to display the response text of successful reset."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the reading and saving of the data is unsuccessful."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void execute(Common common, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        common.reset();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui.display(UiMessage.RESET.getMsg());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 25
    }
  },
  {
    "path": "src/main/java/core/Common.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Interact with model and storage to execute the command,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * construct response text to be display."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Common {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor to initialize the storage and external storage, load the external data if there is."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when there is error loading data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Common(String filepath) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        loadData();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Adds new task to the model, update the state."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param task new task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the response text to the ui."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String[] addTask(Task task) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskManager.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        saveData();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return responseFormat(\"Got it. I\u0027ve added this task: \","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                \"\" + task,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                \"Now you have \" + taskManager.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Prints the list of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return list of task in string array."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when task list is empty."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String[] printList() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.EMPTY_LIST.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        s.add(0, \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            s.add((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return s.toArray(new String[0]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Marks the specific task as done, update the state."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param index indicates the specific task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the response text of marking the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the index is invalid."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String[] markAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        boolean isRecurring \u003d taskManager.markDone(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        saveData();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (isRecurring) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return responseFormat(\"This task has recurs: \","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                    \"\" + taskManager.getTask(index));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return responseFormat(\"Nice! I\u0027ve marked this task as done: \","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                    \"\" + taskManager.getTask(index));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Deletes the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param index indicates the specific task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the response text of deleting the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the index is invalid."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String[] deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        Task task \u003d taskManager.getTask(index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskManager.deleteTask(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        saveData();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return responseFormat(\"Noted. I\u0027ve removed this task: \","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                \"\" + task,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                \"Now you have \" + taskManager.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Finds all the task that contain certain keyword."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param keyword specified by the user."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the display message"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when there is no matching task or task list is empty."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String[] findTask(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d taskManager.findTask(keyword);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        s.add(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        for (Task task : matchingTasks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            s.add(task.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return s.toArray(new String[0]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Resets the current data and the external data."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException clear data is unsuccessful."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void reset() throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskManager.clearData();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        storage.clearData();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Saves the current state holder to external file."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when saving data is unsuccessful."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void saveData() throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        storage.save(taskManager.getTaskList());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Loads the saved state to the system."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when loading is unsuccessful."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private void loadData() throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskManager.load(storage.load());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Formats the Varargs into array."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param text text to be displayed."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return text in string array."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private String[] responseFormat(String... text) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ArrayList\u003cString\u003e outputText \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        outputText.addAll(Arrays.asList(text));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return outputText.toArray(new String[0]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 156
    }
  },
  {
    "path": "src/main/java/core/DataParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonDeserializationContext;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonDeserializer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonElement;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonPrimitive;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonSerializationContext;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import com.google.gson.JsonSerializer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.RecurringTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Parses between task and string of standard data format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class DataParser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Gson gson;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Initiates the parser with capabilities to parse local date and task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public DataParser() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        gson \u003d new GsonBuilder()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                .registerTypeAdapter(LocalDate.class, new LocalDateAdapter())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                .registerTypeAdapter(Task.class, new TaskAdapter())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                .create();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Parses task from task to string of standard data format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param task task to be saved."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return string of standard data format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String parseToString(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return gson.toJson(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Parses string of standard data format to task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param data string from the storage file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return task object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Task parseToTask(String data) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return gson.fromJson(data, Task.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Enables the parser to serialize and deserialize LocalDate."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    //Solution below adapted from https://stackoverflow.com/questions/39192945/serialize-java-8-localdate-as-yyyy-mm-dd-with-gson"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private static class LocalDateAdapter implements JsonSerializer\u003cLocalDate\u003e, JsonDeserializer\u003cLocalDate\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        public JsonElement serialize(LocalDate date, Type typeOfSrc, JsonSerializationContext context) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return new JsonPrimitive(date.format(DateTimeFormatter.ISO_LOCAL_DATE)); // \"yyyy-mm-dd\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        public LocalDate deserialize(JsonElement json, Type type,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                                     JsonDeserializationContext context) throws JsonParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return LocalDate.parse(json.getAsJsonPrimitive().getAsString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Enables the parser to serialize and deserialize Task and its sub-class."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    //Solution below adapted from https://stackoverflow.com/questions/5800433/polymorphism-with-gson with modification"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private static class TaskAdapter implements JsonSerializer\u003cTask\u003e, JsonDeserializer\u003cTask\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        private static Map\u003cString, Class\u003e map \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            map.put(\"T\", ToDo.class);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            map.put(\"D\", Deadline.class);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            map.put(\"E\", Event.class);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            map.put(\"R\", RecurringTask.class);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        public JsonElement serialize(Task src, Type typeOfSrc,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                                     JsonSerializationContext context) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            Class c \u003d map.get(src.getTypeIcon().charAt(1));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                throw new RuntimeException(\"Unknown class: \" + src.getTypeIcon().charAt(1));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return context.serialize(src, c);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        public Task deserialize(JsonElement json, Type typeOfT,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                                JsonDeserializationContext context) throws JsonParseException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            JsonObject jsonObject \u003d json.getAsJsonObject();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            String type \u003d jsonObject.get(\"typeIcon\").getAsString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            Class c \u003d map.get(type);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                throw new RuntimeException(\"Unknown class: \" + type);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return context.deserialize(json, c);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 117
    }
  },
  {
    "path": "src/main/java/core/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Stores all the different format for the date input and output."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public enum DateUtil {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FORMAT_1(\"yyyy-MM-dd\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FORMAT_2(\"yyyy/MM/dd\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FORMAT_3(\"yyyy/MMM/dd\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FORMAT_4(\"yyyy\\\\MM\\\\dd\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FORMAT_5(\"yyyyMMdd\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FORMAT_6(\"MMM-dd-yyyy\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FORMAT_7(\"yy-MM-dd\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    String string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    DateUtil(String string) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.string \u003d string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Converts the date to standard format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param time date"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the standard format of date in string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public static String standardFormat(LocalDate time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return time.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 39
    }
  },
  {
    "path": "src/main/java/core/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * The main driver of the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Common common;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor to initialize essential components of the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            common \u003d new Common(filepath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            ui.errorLog(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * runs the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            String userInput \u003d ui.getInput();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                Command command \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                command.execute(common, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                ui.errorLog(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            command.execute(common, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return ui.getResponse();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 63
    }
  },
  {
    "path": "src/main/java/core/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Stores all the essential error text to be display by Ui."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public enum ErrorMessage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    INDEX_OUT_OF_BOUND(\"Index out of bound\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    LACK_DESCRIPTION(\"The description cannot be empty.\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    LACK_INPUT(\"The input must contain\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    LACK_TIME(\"The time cannot be empty.\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    LACK_NUMBER(\"The input must contain a number\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    UNKNOWN_INPUT(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    EMPTY_LIST(\"Task list is empty.\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    UNRECOGNISED_DATE_FORMAT(\"Unrecognised date format.\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    DONE_TASK(\"The task is already done.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    String msg;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    ErrorMessage(String msg) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.msg \u003d \"It\u0027s a trap! \" + msg;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 29
    }
  },
  {
    "path": "src/main/java/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.AddEventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.AddRecurringCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.AddToDoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import command.ResetCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Parser the input from user to Command that can execute."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Parses the user input to recognisable command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param userInput input from user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return command to be executed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException user input is incomplete or invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (userInput.contains(\" \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            String keyword \u003d userInput.substring(0, userInput.indexOf(\" \"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            String information \u003d userInput.substring(userInput.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            switch (keyword) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseDone(information);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseDelete(information);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseTodo(information);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseDeadline(information);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseEvent(information);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"recurring\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseRecurring(information);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseFind(information);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                throw new DukeException(ErrorMessage.UNKNOWN_INPUT.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            switch (userInput) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseBye();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"reset\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return parseReset();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                throw new DukeException(ErrorMessage.LACK_DESCRIPTION.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                throw new DukeException(ErrorMessage.UNKNOWN_INPUT.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseBye() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseReset() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ResetCommand resetCommand \u003d new ResetCommand();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return resetCommand;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseDone(String information) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            int index \u003d Integer.parseInt(information) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_NUMBER.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseDelete(String information) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            int index \u003d Integer.parseInt(information) - 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_NUMBER.toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseFind(String information) throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (information.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_DESCRIPTION.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new FindCommand(information);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseTodo(String information) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (information.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_DESCRIPTION.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new AddToDoCommand(information);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseDeadline(String information) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        final String BY \u003d \" /by \";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (!information.contains(BY)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_INPUT.toString() + BY);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String description \u003d information.substring(0, information.indexOf(BY));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (description.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_DESCRIPTION.toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String time \u003d information.substring(information.indexOf(BY) + 5);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (time.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_TIME.toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new AddDeadlineCommand(description, parseDate(time));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseEvent(String information) throws DukeException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        final String AT \u003d \" /at \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (!information.contains(AT)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_INPUT.toString() + AT);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String description \u003d information.substring(0, information.indexOf(AT));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (description.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_DESCRIPTION.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String time \u003d information.substring(information.indexOf(AT) + 5);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (time.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_TIME.toString());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new AddEventCommand(description, parseDate(time));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Command parseRecurring(String information) throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        final String AT \u003d \" /at \";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (!information.contains(AT)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_INPUT.toString() + AT);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String description \u003d information.substring(0, information.indexOf(AT));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (description.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_DESCRIPTION.toString());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String time \u003d information.substring(information.indexOf(AT) + 5);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (time.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.LACK_TIME.toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return new AddRecurringCommand(description, parseDate(time));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private LocalDate parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        for (DateUtil format : DateUtil.values()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                return LocalDate.parse(date, DateTimeFormatter.ofPattern(format.toString()));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            } catch (DateTimeParseException ignored) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                // nothing to catch"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        throw new DukeException(ErrorMessage.UNRECOGNISED_DATE_FORMAT.toString());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 191
    }
  },
  {
    "path": "src/main/java/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.StorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.EOFException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private DataParser dataParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor to initialize the path of the external storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Storage(String filepath) throws StorageException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            file \u003d new File(filepath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new StorageException(\"Error in locate/creating the file.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        dataParser \u003d new DataParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Saves the states of the system to external file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param tasks is the states of the system."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when writing to file is unsuccessful."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        writeTo(file, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Loads the states from the external file to the system."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the states of the system."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when reading from the file is unsuccessful."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return readFrom(file);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Clears all the data in the external file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when reading from the file is unsuccessful."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void clearData() throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(file)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(\"Encounter error in resetting data\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Obtains the task lsit from the external file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param thisFile indicates the file to be read from."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when reading from the file is unsuccessful."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private ArrayList\u003cTask\u003e readFrom(File thisFile) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try (FileReader fr \u003d new FileReader(thisFile)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                Task task \u003d dataParser.parseToTask(line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new StorageException(\"The stated file is not found.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (EOFException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            //empty file"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new StorageException(\"Encountered error in reading from the file.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Saves the readable tasks to the external file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param thisFile indicates the file to be written to."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param tasks    the tasks to be written to the file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the writing to the file is unsuccessful."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private void writeTo(File thisFile, ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(thisFile)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                String formattedTask \u003d dataParser.parseToString(task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                bw.write(formattedTask + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(\"Encountered error in writing into the file\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 119
    }
  },
  {
    "path": "src/main/java/core/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.RecurringTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * To handle operation on current task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Adds new task to the model."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param task new task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Marks the task to be done, or recurs the task if the task is recursive."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param index index of the task in task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return if the task has recurs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException if the index is out of bound or task list is empty."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public boolean markDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (task instanceof RecurringTask) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            ((RecurringTask) task).recurs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Deletes the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param index indicate the specific task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when index is invalid."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskList.remove(getTask(index));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Finds the task that contains the specified keyword."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param keyword to be matched by the description of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the list of matching tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when the task list is empty"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *                       or there is no matching task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.EMPTY_LIST.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskList.stream()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                .filter(t -\u003e t.hasKeyword(keyword))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                .forEach(x -\u003e matchingTasks.add(x));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(\"The matching list is empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Obtains the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param index indicate the specific task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the specific task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @throws DukeException when task list is empty or index is invalid."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.EMPTY_LIST.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.INDEX_OUT_OF_BOUND.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Obtains the size of the task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return size of task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void load(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Clears all the task in the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void clearData() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 119
    }
  },
  {
    "path": "src/main/java/core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Platform to interact with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private String response \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor to initialize the scanner."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Gets the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the user input in string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Displays the welcome message to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void preLog() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        display(UiMessage.GREETING.getMsg());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Displays the exiting message to the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void endLog() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        display(UiMessage.FAREWELL.getMsg());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Displays the error message to the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param error is the error message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void errorLog(String error) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        display(error);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Displays text to the user under the standard format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param msg is the text to be displayed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void display(String... msg) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        response \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        for (String str : msg) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            response +\u003d str + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        assert !response.isEmpty();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 68
    }
  },
  {
    "path": "src/main/java/core/UiMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Stores all the essential normal text to be display by Ui."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public enum UiMessage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    GREETING(\"A long time ago in a galaxy far, far away...\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            \"Hello! I\u0027m Luke\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            \"How may i serve you.\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    FAREWELL(\"Bye. Someday I will be the most powerful Jedi ever.\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    RESET(\"Train yourself to let go of everything you fear to lose.\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            \"The system has been reset.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    String[] msg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    UiMessage(String... msg) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Gets the message of the operation."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the message of the operation in string array."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String[] getMsg() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 29
    }
  },
  {
    "path": "src/main/java/dukexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package dukexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Custom exception to handle general exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 10
    }
  },
  {
    "path": "src/main/java/dukexception/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package dukexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Custom exception to handle exceptions related"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * to data storage."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class StorageException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public StorageException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 12
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of task that contains description and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * deadline of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for the deadline task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description is the detail of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param deadline    is the deadline of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Deadline(String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(description, \"D\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Gets the detail of the standard task and the deadline of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return string contains the standard format of the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return super.toString() + \" (by: \" + DateUtil.standardFormat(deadline) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 35
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of task that contains description and event time of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private LocalDate eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for the event task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description is the detail of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param eventTime   is the event time of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Event(String description, LocalDate eventTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(description, \"E\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Gets the detail of the standard task and the duration of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return string contains the standard format of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return super.toString() + \" (at: \" + DateUtil.standardFormat(eventTime) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 36
    }
  },
  {
    "path": "src/main/java/task/RecurringTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of task that contains description and recurs weekly."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class RecurringTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private final int daysInAWeek \u003d 7;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for the event task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description is the detail of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param date        is the event time of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public RecurringTask(String description, LocalDate date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(description, \"R\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void recurs() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        date \u003d date.plusDays(daysInAWeek);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Gets the detail of the standard task and the duration of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return string contains the standard format of the event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return super.toString() + \" (at: \" + DateUtil.standardFormat(date) + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 41
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.ErrorMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import dukexception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * A abstract task to be inherited by specific tasks such as"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * to do, deadline or event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Contains the description and the status of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private String typeIcon;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description specifies the detail of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public Task(String description, String typeIcon) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        this.typeIcon \u003d typeIcon;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Gets the status of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return status of the task in string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Abstract method to get the specific type of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the specific type of the task in string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return this.typeIcon;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void setDone() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            throw new DukeException(ErrorMessage.DONE_TASK.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Determines whether the description of the task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * contain a certain keyword."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param keyword given keyword to be checked."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return the boolean that indicate whether the description of the task contain a certain keyword."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Gets the detail of the task which includes the type of task,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * the status of the task and the description of the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @return string contains the standard format of the task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        return \"[\" + getTypeIcon() + \"] [\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 85
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " * Specific type of task that contains description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * Constructor for the to do task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     * @param description is the detail of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 18
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.6666666666666643\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void getTypeIcon_deadlineTask_hasCorrectTypeIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        String expected \u003d \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"read book\", LocalDate.of(2020, 1, 1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        assertEquals(expected, deadline.getTypeIcon());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 18
    }
  },
  {
    "path": "src/test/java/TaskManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import core.TaskManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "public class TaskManagerTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    public void testGetSize_emptyModel_isZero() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        taskManager.load(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "        assertEquals(0, taskManager.getSize());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\t________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\tHello! I\u0027m core.Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\t________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\t________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\tBye."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "\t________________________________________________________________________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\core\\Duke.java ..\\src\\main\\java\\core\\*.java ..\\src\\main\\java\\command\\*.java ..\\src\\main\\java\\dukexception\\*.java ..\\src\\main\\java\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "java -classpath ..\\bin core.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FangShaoHua94"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "FangShaoHua94": 21
    }
  }
]
