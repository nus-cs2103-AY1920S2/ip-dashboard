[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "main.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for main.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    mainClassName \u003d \"main.Main\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "test {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 45,
      "-": 16
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.IoAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The Bye command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs an new instance of Bye command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param storage  the storage object to save the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList the task list to be saved."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public ByeCommand(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() throws IoAelitaException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new Response(Message.GOODBYE, null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 37
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.AelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InsufficientArgumentAelitaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The abstract class Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the response from executing the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws AelitaException if the command failed to execute."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    abstract public Response execute() throws AelitaException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Checks the array of tokens to ensure that there are at least 2 tokens within it."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param tokens  the array of tokens for checking."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param context the command which called this method."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InsufficientArgumentAelitaException if there are less than 2 strings in the token array."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected void checkSufficientTokens(String[] tokens, String context) throws InsufficientArgumentAelitaException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new InsufficientArgumentAelitaException(context);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Reconstructs the description into a string from an array of words."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param descriptionTokens An array of words of the description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return The string form of the description."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected String reconstructDescription(String[] descriptionTokens) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(descriptionTokens[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        for (int i \u003d 2; i \u003c descriptionTokens.length; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            builder.append(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            builder.append(descriptionTokens[i]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 51
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The Deadline command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of Deadline command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param descriptionTokens the tokenized description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param date              the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList          the task list to store the new deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public DeadlineCommand(String[] descriptionTokens, String date, TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        description \u003d reconstructDescription(descriptionTokens);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task deadLine \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        taskList.add(deadLine);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new Response(Message.ADD_TASK, deadLine);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 42
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InsufficientArgumentAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidArgumentAelitaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidListItemAelitaException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The Delete command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String[] commandTokens;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of Delete command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param commandTokens the tokenized command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList      the task list to delete from."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public DeleteCommand(String[] commandTokens, TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.commandTokens \u003d commandTokens;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() throws InsufficientArgumentAelitaException, InvalidArgumentAelitaException,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            InvalidListItemAelitaException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        checkSufficientTokens(commandTokens, \"delete\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        int index \u003d Integer.parseInt(commandTokens[1]) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new Response(Message.DELETE, taskList.remove(index));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 40
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.DuplicateMarkAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InsufficientArgumentAelitaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidListItemAelitaException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The Done command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String[] commandTokens;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Instantiates a new Done command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param commandTokens the tokenized command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList      the task list which the task of interest is in."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public DoneCommand(String[] commandTokens, TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.commandTokens \u003d commandTokens;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() throws InsufficientArgumentAelitaException, DuplicateMarkAelitaException,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            InvalidListItemAelitaException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        checkSufficientTokens(commandTokens, \"done\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        int index \u003d Integer.parseInt(commandTokens[1]) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        taskList.complete(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new Response(Message.DONE, index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 41
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InsufficientArgumentAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The Event command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of Event command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param descriptionTokens the tokenized description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param at                the dead and time of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList          the task list to store the new Event task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public EventCommand(String[] descriptionTokens, String at, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.description \u003d reconstructDescription(descriptionTokens);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() throws InsufficientArgumentAelitaException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String[] dateTime \u003d extractDateTime(at);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task event \u003d new Event(description, eventDate, dateTime[1], dateTime[2]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new Response(Message.ADD_TASK, \"event\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Extracts the date and time from a string comprising of the date and time."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param dateTime The string containing the date and time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return An array of size 3 containing the date, start time and end time respectively."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InsufficientArgumentAelitaException if the date or time is missing or incomplete."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String[] extractDateTime(String dateTime) throws InsufficientArgumentAelitaException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        //A local placeholder for date and time of task.Event {date, start time, end time}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String[] tmp \u003d new String[3];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        //Get the date"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String[] dateTimeTokens \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        tmp[0] \u003d dateTimeTokens[1]; //Date"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (dateTimeTokens.length \u003c 3) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            //One of the date-time components is missing"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new InsufficientArgumentAelitaException(\"date-time\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        //Separate start time and end time"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String[] timeTokens \u003d dateTimeTokens[2].split(\"-\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (timeTokens.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new InsufficientArgumentAelitaException(\"end time\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        tmp[1] \u003d timeTokens[0]; //Start time"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        tmp[2] \u003d timeTokens[1]; //End time"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return tmp;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 78
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InsufficientArgumentAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The Find command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String[] commandTokens;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of Find command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param commandTokens the tokenized command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList      the task list to search in."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public FindCommand(String[] commandTokens, TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.commandTokens \u003d commandTokens;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() throws InsufficientArgumentAelitaException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        checkSufficientTokens(commandTokens, \"find\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String keyword \u003d commandTokens[1].toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        //Gets the list of task containing the keyword"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        TaskList results \u003d taskList.list(keyword);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return checkResult(results);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Checks the resulting task list for any tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param results the task list in question."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return task not found if task list is empty and task found if otherwise."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Response checkResult(TaskList results) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (results.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.TASK_FOUND, results);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.TASK_NOT_FOUND, null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 56
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The List command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String[] commandTokens;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of List command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param commandTokens the tokenized command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList      the task list to list from."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public ListCommand(String[] commandTokens, TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.commandTokens \u003d commandTokens;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (taskList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            //There are tasks in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            if (commandTokens.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                //The date is provided in the command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return listWithDate(taskList, LocalDate.parse(commandTokens[1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return listAll(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.NO_TASK, null);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Response listAll(TaskList taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new Response(Message.LIST, taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * List out the tasks that are related to the given date."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList the task list to search in."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param date     the date of interest"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return task found if there are tasks related to the date and task not found if otherwise."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Response listWithDate(TaskList taskList, LocalDate date) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        TaskList result \u003d taskList.list(date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (result.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.TASK_FOUND, result);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.NO_TASK_ON_DATE, null);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 70
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InsufficientArgumentAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The Todo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private String[] descriptionTokens;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of Todo command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param descriptionTokens the tokenized description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList          the task list to add the new todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public TodoCommand(String[] descriptionTokens, TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.descriptionTokens \u003d descriptionTokens;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response execute() throws InsufficientArgumentAelitaException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        checkSufficientTokens(descriptionTokens, \"todo\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task task \u003d new Task(reconstructDescription(descriptionTokens));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new Response(Message.ADD_TASK, task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 40
    }
  },
  {
    "path": "src/main/java/exception/AelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The base exception used by the project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class AelitaException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new exception.AelitaException with null as message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public AelitaException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new exception.AelitaException with specified message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param msg the specified message details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public AelitaException(String msg) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 26
    }
  },
  {
    "path": "src/main/java/exception/DuplicateMarkAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that a task has already been marked as done. \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This exception is thrown when a task that has been marked as done is marked again."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class DuplicateMarkAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of exception.DuplicateMarkAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public DuplicateMarkAelitaException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 17
    }
  },
  {
    "path": "src/main/java/exception/EmptyInputAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that there is no command inout by the user. \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This exception is thrown when an empty string is input by the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class EmptyInputAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of exception.EmptyInputAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public EmptyInputAelitaException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 17
    }
  },
  {
    "path": "src/main/java/exception/EmptyListAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that there is no Tasks in TasksList. \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This exception is thrown when attempting to list an empty list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class EmptyListAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new exception.EmptyListAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public EmptyListAelitaException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 17
    }
  },
  {
    "path": "src/main/java/exception/InsufficientArgumentAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that there is not enough necessary words in the command. \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This exception is thrown when no description, index for done or delete, or missing date or time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class InsufficientArgumentAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of exception.InsufficientArgumentAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param context the context that threw the exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public InsufficientArgumentAelitaException(String context) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super(context);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 19
    }
  },
  {
    "path": "src/main/java/exception/InvalidArgumentAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that the argument in invalid. \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Thrown when a negative number is used as argument for setTotalTaskCount()."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class InvalidArgumentAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of exception.InvalidArgumentAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public InvalidArgumentAelitaException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 17
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that the command entered is invalid. \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This exception is thrown when the command entered does not match any of the preset commands."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class InvalidCommandAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of exception.InvalidCommandAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public InvalidCommandAelitaException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 17
    }
  },
  {
    "path": "src/main/java/exception/InvalidListItemAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that an invalid item is requested from main.TaskList. \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This exception is thrown when attempting to use an out of bound index to access a main.TaskList instance."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class InvalidListItemAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of exception.InvalidListItemAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public InvalidListItemAelitaException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 17
    }
  },
  {
    "path": "src/main/java/exception/IoAelitaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Signals that there is an error while doing IO."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This exception is thrown when saveTasks fails to create a FileWriter instance."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class IoAelitaException extends AelitaException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of exception.IoAelitaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public IoAelitaException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 17
    }
  },
  {
    "path": "src/main/java/javafx/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Launcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Launcher.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Creates a new dialog box for the user side with the specified text and image."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param text the text of the dialog box."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param img  the image associated with the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return a new user dialog box with the specified text and image."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Creates a new dialog box for main.Duke\u0027s side with the specified text and image."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param text the text of the dialog box."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param img  the image associated with main.Duke."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return a new main.Duke dialog box with the specified text and image."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 83
    }
  },
  {
    "path": "src/main/java/javafx/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The UI of the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Ui extends AnchorPane {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Initializes the scroll pane to bind to the dialog container. Also prints out the welcome message on the chat."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Initializes duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param d the duke"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Obtains the input command from the text field and creates a user dialog box containing the command. Clears the"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * text field after creating the dialog box. The command is passed to main.Duke and processed to get the appropriate"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * response, which is used to create another dialog box and appended to the dialog container."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String command \u003d userInput.getText();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(command, userImage));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        printResponse(duke.executeCommand(command));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Prints the welcoming message in the chat."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String greeting \u003d \"Hi! I\u0027m main.Duke.\\nHow can I help you?\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(greeting, dukeImage));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Creates a dialog box containing the relevant response and append it onto the dialog container."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Will call for exit if bye is received."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param response the response."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private void printResponse(Response response) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        switch (response.getMessage()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case ADD_TASK:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"I\u0027ve got your back. Adding the new task:\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message +\u003d \"    \" + response.getArgument().toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case COMMAND_NOT_RECOGNIZED:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"I don\u0027t understand your request.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case DATE_NOT_RECOGNIZED:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Sorry. I only recognize date in the format YYYY-MM-DD\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"The task has been removed.\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message +\u003d \"    \" + response.getArgument().toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Another task off the list. Good job!\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message +\u003d \"    \" + duke.getTaskList().get((int) response.getArgument());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case EMPTY_COMMAND:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Aren\u0027t you a quiet type.\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case GOODBYE:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case IO_ERROR:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Opps. Something went wrong when saving your tasks.\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case INDEX_NAN:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"The index is not a number.\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case INVALID_ARGUMENT:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"You cannot set task count to less than zero.\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case ITEM_NOT_FOUND:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"That item is not on your list.\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            TaskList list \u003d (TaskList) response.getArgument();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Here\u0027s your list:\\n\" + list.toString();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_DATE:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"The date is missing.\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_DATE_TIME:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Either the date or time is missing.\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_DEADLINE:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"When is the deadline?\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_DELETE_INDEX:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Which task do you want to delete?\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"What is the task about?\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_DONE_INDEX:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"Which task have you completed?\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_END_TIME:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"When does the event end?\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case MISSING_FIND_INDEX:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"You need a keyword to search.\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case NO_TASK:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"You have nothing to do today.\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case NO_TASK_ON_DATE:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"You have nothing to do on that day.\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case TASK_COMPLETED:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"You have already done that task.\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case TASK_COUNT:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            if (Task.getTotalTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                message \u003d \"You have no more task today.\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                message \u003d \"Now you\u0027ve \" + Task.getTotalTaskCount() + \" task(s) in your list\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case TASK_FOUND:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            TaskList results \u003d (TaskList) response.getArgument();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"These are the tasks you are looking for:\\n\" + results.toString();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        case TASK_NOT_FOUND:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            message \u003d \"There is no task matching your keyword\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            //Do nothing"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(message, dukeImage));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 219
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.DuplicateMarkAelitaException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.EmptyInputAelitaException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InsufficientArgumentAelitaException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidArgumentAelitaException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidCommandAelitaException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidListItemAelitaException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.IoAelitaException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The main class of the project."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of main.Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList the task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Duke(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        storage \u003d new Storage(Paths.get(System.getProperty(\"user.home\"), \"data\", \"duke.txt\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        storage.loadTasks(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets main.Duke\u0027s task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return main.Duke\u0027s task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param command the string command supplied by the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the relevant response after processing the command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response executeCommand(String command) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            //Split the command tokens into description and time portions"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            String[] commandTokens \u003d Parser.parse(command, \"/\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            //Further split description into words for command checking"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            String[] descriptionTokens \u003d Parser.parse(commandTokens[0], \" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            if (commandTokens.length \u003c 2) { //Regular commands and todo"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                switch (descriptionTokens[0].toLowerCase()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new ByeCommand(storage, taskList).execute();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new DeleteCommand(descriptionTokens, taskList).execute();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new DoneCommand(descriptionTokens, taskList).execute();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new FindCommand(descriptionTokens, taskList).execute();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new ListCommand(descriptionTokens, taskList).execute();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new TodoCommand(descriptionTokens, taskList).execute();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    //Fallthrough"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    //Check if description is present. Throws exception if description missing."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    checkSufficientTokens(descriptionTokens, \"deadline\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    //Date portion is missing as size commandToken array is 1."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    throw new InsufficientArgumentAelitaException(\"date\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    //No command matches input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    throw new InvalidCommandAelitaException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                //Check if there are descriptions. Throws exception if there isn\u0027t."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                checkSufficientTokens(descriptionTokens, \"deadline\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                switch (descriptionTokens[0].toLowerCase()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new DeadlineCommand(descriptionTokens, commandTokens[1].substring(3), taskList).execute();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    return new EventCommand(descriptionTokens, commandTokens[1], taskList).execute();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    //No command matches input."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    throw new InvalidCommandAelitaException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (EmptyInputAelitaException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.EMPTY_COMMAND, null);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (IoAelitaException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.IO_ERROR, null);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InsufficientArgumentAelitaException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            switch (e.getMessage()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return new Response(Message.MISSING_DATE, null);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"date-time\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return new Response(Message.MISSING_DATE_TIME, null);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return new Response(Message.MISSING_DESCRIPTION, null);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return new Response(Message.MISSING_DELETE_INDEX, null);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return new Response(Message.MISSING_DONE_INDEX, null);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"end time\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return new Response(Message.MISSING_END_TIME, null);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return new Response(Message.MISSING_FIND_INDEX, null);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                //Will not reach here"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidListItemAelitaException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.ITEM_NOT_FOUND, null);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (DuplicateMarkAelitaException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.TASK_COMPLETED, null);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidCommandAelitaException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.COMMAND_NOT_RECOGNIZED, null);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.INVALID_ARGUMENT, null);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.DATE_NOT_RECOGNIZED, null);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return new Response(Message.INDEX_NAN, null);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Checks the array of tokens to ensure that there are at least 2 strings within it."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param tokens  the array to check."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param context the command that called this method."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InsufficientArgumentAelitaException if there are less than 2 strings in the token array."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private void checkSufficientTokens(String[] tokens, String context) throws InsufficientArgumentAelitaException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new InsufficientArgumentAelitaException(context);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 201
    }
  },
  {
    "path": "src/main/java/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The application launcher class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Launcher extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Duke duke \u003d new Duke(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Launcher.launch(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Sets up the stage upon start of application."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param stage the stage of the application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Launcher.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            fxmlLoader.\u003cUi\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 48
    }
  },
  {
    "path": "src/main/java/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Launcher.main(args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 10
    }
  },
  {
    "path": "src/main/java/main/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * An enumeration of possible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public enum Message {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    ADD_TASK,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    COMMAND_NOT_RECOGNIZED,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    DATE_NOT_RECOGNIZED,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    EMPTY_COMMAND,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    GOODBYE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    INDEX_NAN,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    INVALID_ARGUMENT,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    IO_ERROR,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    ITEM_NOT_FOUND,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_DATE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_DATE_TIME,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_DEADLINE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_DELETE_INDEX,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_DESCRIPTION,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_DONE_INDEX,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_END_TIME,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    MISSING_FIND_INDEX,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    NO_TASK,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    NO_TASK_ON_DATE,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    TASK_COMPLETED,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    TASK_COUNT,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    TASK_FOUND,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    TASK_NOT_FOUND"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 34
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.EmptyInputAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * Tokenizer to break a command into tokens given a regular expression."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Parses a given string command into tokens with a string regular expression."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param command the string command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param regex   the regular expression."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return a string array of tokens."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws EmptyInputAelitaException if command is an empty string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public static String[] parse(String command, String regex) throws EmptyInputAelitaException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String[] tokens \u003d command.split(regex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (tokens[0].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new EmptyInputAelitaException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            return tokens;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 29
    }
  },
  {
    "path": "src/main/java/main/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The type main.Response."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Message message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Object argument;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Instantiates a new main.Response."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param message  the message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param argument the argument"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Response(Message message, Object argument) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the message"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Message getMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets argument."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the argument"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Object getArgument() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return argument;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 43
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.DuplicateMarkAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.IoAelitaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * A module to store and load tasks to and from a file given a path name."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of main.Storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param path the file path string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Storage(Path path) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Loads tasks from the associated file and populate the supplied main.TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList the task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void loadTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            File file \u003d new File(path.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                String[] task \u003d sc.nextLine().split(\"/\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                switch (task[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    taskList.add(new Todo(task[2]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    taskList.add(new Deadline(task[2], LocalDate.parse(task[3])));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    taskList.add(new Event(task[2], LocalDate.parse(task[3]), task[4], task[5]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    //Do nothing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                if (task[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                        taskList.get(taskList.getSize() - 1).markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    } catch (DuplicateMarkAelitaException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                        //Not possible. Do nothing"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            //Do nothing"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            System.out.println(\"Cannot parse date\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Save tasks on the supplied main.TaskList into the associated file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param taskList the supplied main.TaskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws IoAelitaException if FileWriter cannot be created."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void saveTasks(TaskList taskList) throws IoAelitaException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Files.createDirectories(path.getParent());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Files.createFile(path);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path.toString(), false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                if (taskList.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    writer.write(\"T/\" + taskList.get(i).isDone() + \"/\" + taskList.get(i).getDescription() +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                            \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                } else if (taskList.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    writer.write(\"D/\" + taskList.get(i).isDone() + \"/\" + taskList.get(i).getDescription() + \"/\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                            + ((Deadline) taskList.get(i)).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                } else if (taskList.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    writer.write(\"E/\" + taskList.get(i).isDone() + \"/\" + taskList.get(i).getDescription() + \"/\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                            + ((Event) taskList.get(i)).getDate() + \"/\" + ((Event) taskList.get(i)).getStartTime()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                            + \"/\" + ((Event) taskList.get(i)).getEndTime() + \"\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new IoAelitaException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 124
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.DuplicateMarkAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.EmptyInputAelitaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidArgumentAelitaException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidListItemAelitaException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * A list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Adds a task into the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param task the new task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Complete a task at the specified index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param index the index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InvalidListItemAelitaException if index is out of bound."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws DuplicateMarkAelitaException   if the task has already been completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void complete(int index) throws InvalidListItemAelitaException, DuplicateMarkAelitaException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (index \u003e\u003d taskList.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new InvalidListItemAelitaException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets a task at the specified index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param index the index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the requested task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Remove a specified task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param task the task to be removed from the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return if the tasks has been successfully removed."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InvalidArgumentAelitaException if task list is empty."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public boolean remove(Task task) throws InvalidArgumentAelitaException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        boolean done \u003d taskList.remove(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Task.setTotalTaskCount(Task.getTotalTaskCount() - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Remove task at the specified index."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param index the index."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the task removed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InvalidListItemAelitaException if index is out of bound."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InvalidArgumentAelitaException if task list is empty."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Task remove(int index) throws InvalidListItemAelitaException, InvalidArgumentAelitaException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (index \u003e\u003d taskList.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new InvalidListItemAelitaException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task.setTotalTaskCount(Task.getTotalTaskCount() - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets the size of the main.TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the size."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * List all task associated with the supplied date."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param date the date of interest."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the task list containing all the task associated with the date."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public TaskList list(LocalDate date) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        TaskList tmp \u003d new TaskList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            if (task instanceof Deadline \u0026\u0026 ((Deadline) task).getDate().equals(date)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                tmp.add(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } else if (task instanceof Event \u0026\u0026 ((Event) task).getDate().equals(date)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                tmp.add(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return tmp;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * List task list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param keyword the keyword to search for."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the task list containing tasks associated with the keyword"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public TaskList list(String keyword) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        TaskList tmp \u003d new TaskList();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                String[] words \u003d Parser.parse(task.getDescription(), \" \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                for (String word : words) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    if (word.toLowerCase().equals(keyword)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                        tmp.add(task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } catch (EmptyInputAelitaException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                e.getStackTrace();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return tmp;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            builder.append(\"    \");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            builder.append((i + 1));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            builder.append(\".\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            builder.append(taskList.get(i));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            builder.append(\"\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 175
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * A more detailed implementation of the task.Task class with specified deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * The deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of task.Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param date        the deadline of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 39
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * A more detailed implementation of the task.Task class with specified date, start time and end time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * The Date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * The Start time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected String startTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * The End time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected String endTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of task.Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param date        the date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param startTime   the start time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param endTime     the end time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Event(String description, LocalDate date, String startTime, String endTime) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets the date of this event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the date of this event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String getStartTime() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String getEndTime() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                + startTime + \"-\" + endTime + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 67
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.DuplicateMarkAelitaException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidArgumentAelitaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The representation of task in the project."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * The total count of existing tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected static int totalTaskCount \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * The description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * The completion of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of task.Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        totalTaskCount++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets the total existing task count."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the total task count."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public static int getTotalTaskCount() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return totalTaskCount;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Sets the total task count."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param totalTaskCount the new total task count."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws InvalidArgumentAelitaException if totalTaskCount \u0026lt; 0."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public static void setTotalTaskCount(int totalTaskCount) throws InvalidArgumentAelitaException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (totalTaskCount \u003c 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new InvalidArgumentAelitaException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task.totalTaskCount \u003d totalTaskCount;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the description."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Gets the status icon."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @return the status icon."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @throws DuplicateMarkAelitaException if task has already been marked as done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public void markAsDone() throws DuplicateMarkAelitaException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            throw new DuplicateMarkAelitaException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 106
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " * The simple implementation of task.Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * Constructs a new instance of task.Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 24
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"BASELINE_LEFT\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                \u003cInsets/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            fx:controller\u003d\"javafx.Ui\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 24
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.AelitaException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.EmptyInputAelitaException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import main.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void parseTest1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String testCase \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Parser.parse(testCase, \" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (AelitaException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertTrue(e instanceof EmptyInputAelitaException);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void parseTest2() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String testCase \u003d \"todo individual project\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            String[] output \u003d Parser.parse(testCase, \" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"todo\", output[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"individual\", output[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"project\", output[2]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (EmptyInputAelitaException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void parseTest3() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String testCase \u003d \"deadline individual project /by 2020-01-01\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            String[] output \u003d Parser.parse(testCase, \"/\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"deadline individual project \", output[0]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"by 2020-01-01\", output[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (EmptyInputAelitaException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void parseTest4() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        String testCase \u003d \"2-4pm\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            String[] output \u003d Parser.parse(testCase, \"-\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"2\", output[0]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"4pm\", output[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (EmptyInputAelitaException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 67
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.DuplicateMarkAelitaException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import exception.InvalidArgumentAelitaException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    //Class variables does not reset after a test ends"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void getTotalTaskCount() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task task1 \u003d new Task(\"test1\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task task2 \u003d new Task(\"test2\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(2, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Task.setTotalTaskCount(0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(\"test\", task.getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Task.setTotalTaskCount(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void getStatusIcon_notDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(0, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(\"✘\", task.getStatusIcon());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Task.setTotalTaskCount(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(0, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(\"✓\", task.getStatusIcon());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (DuplicateMarkAelitaException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Task.setTotalTaskCount(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Assertions.fail();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void setTotalTaskCount() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(0, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Task.setTotalTaskCount(2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(2, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Task.setTotalTaskCount(0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Assertions.fail();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void setTotalTaskCount_negativeArgument_exceptionThrown() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(0, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Task.setTotalTaskCount(-2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            assertEquals(0, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Task.setTotalTaskCount(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "                Assertions.fail();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(0, Task.getTotalTaskCount());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        Task test \u003d new Task(\"Test 1\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        assertEquals(\"[✘] Test 1\", test.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Task.setTotalTaskCount(0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        } catch (InvalidArgumentAelitaException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 120
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "     __             _   _     _"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    /  \\           | | / \\   | |"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "   / /\\ \\     ___  | | \\_/ __| |__   ___ _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  / /__\\ \\   / _ \\ | |  _ |__   __| / _ | |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": " / ______ \\ |  __/ | | | |   | |   | |_|  |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "/_/      \\_\\ \\___\\ |_| |_|   |_|    \\___/\\_\\"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e Hi! I\u0027m Aelita, guardian of Lyoko."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  How can I help you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e I\u0027ve got your back. Adding the new task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  Now you\u0027ve 1 task(s) in your list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e I\u0027ve got your back. Adding the new task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [D][✘] return book (by: Jun 6 2020)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  Now you\u0027ve 2 task(s) in your list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e Another task off the list. Good job!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [T][✓] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e I\u0027ve got your back. Adding the new task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [E][✘] project meeting (at: Aug 6 2020 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  Now you\u0027ve 3 task(s) in your list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e I\u0027ve got your back. Adding the new task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [T][✘] join sports club"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  Now you\u0027ve 4 task(s) in your list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e Another task off the list. Good job!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [T][✓] join sports club"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e I\u0027ve got your back. Adding the new task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  Now you\u0027ve 5 task(s) in your list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e Here\u0027s your list:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  1.[T][✓] read book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  2.[D][✘] return book (by: Jun 6 2020)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  3.[E][✘] project meeting (at: Aug 6 2020 2-4pm)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  4.[T][✓] join sports club"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  5.[T][✘] borrow book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e I\u0027ve got your back. Adding the new task:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [D][✘] return book (by: Jan 26 2020)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  Now you\u0027ve 6 task(s) in your list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e I\u0027ve got your back. Adding the new task:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  [E][✘] project meeting (at: Jan 27 2020 2-4pm)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "  Now you\u0027ve 7 task(s) in your list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "\u003e It\u0027s nice talking to you. See you soon! ;)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "--------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 64
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "deadline return book /by 2020-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "event project meeting /at 2020-08-06 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "deadline return book /by 2020-01-26"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "event project meeting /at 2020-01-27 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xCelestialPhoenix"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xCelestialPhoenix": 21
    }
  }
]
