{
  "authorDailyContributionsMap": {
    "CornCobs": [
      {
        "insertions": 185,
        "deletions": 23,
        "date": "2020-01-20",
        "commitResults": [
          {
            "hash": "e92224f86c79df98ac9e46e61f4211d5cedcb82d",
            "messageTitle": "Rename main class to Dude",
            "messageBody": "Implement Level-1\n",
            "insertions": 30,
            "deletions": 11
          },
          {
            "hash": "f5456663df8077c6be54489925de4dbf5c18ed74",
            "messageTitle": "Implement Level-2",
            "messageBody": "Create Task class\n\nRefactor Dude class so main serves a Dude instance\n",
            "insertions": 105,
            "deletions": 8
          },
          {
            "hash": "d897bbbab9bdd26c5c0c6ecc5df687ef14b8c7a6",
            "messageTitle": "Implement Level-3",
            "messageBody": "Add error message support\n",
            "insertions": 50,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 623,
        "deletions": 111,
        "date": "2020-01-21",
        "commitResults": [
          {
            "hash": "a9bf576158a28104f6a4f60802f271f1149f8075",
            "messageTitle": "Implement Level-4",
            "messageBody": "Add error handling for incorrect user inputs (ParsingException)\n\nAdd classes Todo, Deadline, Event\n",
            "insertions": 149,
            "deletions": 17
          },
          {
            "hash": "89c389c33f7668248ed13f776d07defc4ac34ef6",
            "messageTitle": "Implement A-TextUITesting",
            "messageBody": "",
            "insertions": 271,
            "deletions": 0
          },
          {
            "hash": "1b2b24afb6cd1111e3b88d9b4ea3e9b5dc38d138",
            "messageTitle": "Implement Level-5",
            "messageBody": "Rename ParsingException to MessageInterpretationException\n\nMake parsing more robust to extra whitespace and detecting empty input\n",
            "insertions": 20,
            "deletions": 15
          },
          {
            "hash": "71f62b609c55a9df66313752dd255a5b644df0f1",
            "messageTitle": "Implement Level-6",
            "messageBody": "Abstract common patterns into generic functions\n- addTask abstracts over parser used (Todo::parseTodo etc.)\n- taskListOperation abstracts over commands that operate on a single\n  index in the task list (done and delete)\n\nCreate ThrowingFunction functional interface to allow abstracting\nparsing functions (which throw checked exceptions)\n\nClean up interface of Dude commands - instead of some throwing\nexceptions and some handling errors with respondError, now all handle\ntheir own errors so Dude.serve has no error handling\n",
            "insertions": 99,
            "deletions": 56
          },
          {
            "hash": "79f961ca2f43c8fbe3218aa600f4fb395e0249c6",
            "messageTitle": "Update test case",
            "messageBody": "",
            "insertions": 84,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 246,
        "deletions": 100,
        "date": "2020-01-24",
        "commitResults": [
          {
            "hash": "8e22e6f410f257b67b33dd8fd41330e6ad4d32c4",
            "messageTitle": "Create package dude and move all classes to dude package",
            "messageBody": "",
            "insertions": 24,
            "deletions": 29
          },
          {
            "hash": "dc9a0fd2cb2d86a6d0db9e884b15d23e5a022d4e",
            "messageTitle": "Implement Level-7",
            "messageBody": "Abstract Dude internal task storage to IDudeTaskStore interface\n\nCreate DudeTaskStore class to handle file IO and maintain task list\nwhile running\n",
            "insertions": 182,
            "deletions": 44
          },
          {
            "hash": "5a163343ae44e9c4e16ac3c9b702611a54b66322",
            "messageTitle": "Implement Level-8",
            "messageBody": "Change date information in Deadline and Event to be proper Date type\nLocalDate\n\nChange message parser to only accept /by and /at in format yyyy-mm-dd\n",
            "insertions": 40,
            "deletions": 27
          }
        ]
      },
      {
        "insertions": 182,
        "deletions": 59,
        "date": "2020-01-25",
        "commitResults": [
          {
            "hash": "a6e6256c6c9f09280168cb9d98150f0547b77121",
            "messageTitle": "Implement Level-8",
            "messageBody": "Correct Event to include 2 dates (start and end) with a new message\nformat (event details /from yyyy-mm-dd /to yyyy-mm-dd)\n\nConvert Task into abstract class with abstract method occursOn which\nchecks if a deadline or event is on a given date, while todos always\nreturn false\n\nAdd 2 new commands check yyyy-mm-dd and today. check date shows all\ndeadlines and events that occur on the given date while today is a\nconvenience for check (today\u0027s date)\n\nUpdate test case\n",
            "insertions": 182,
            "deletions": 59
          }
        ]
      },
      {
        "insertions": 308,
        "deletions": 217,
        "date": "2020-01-26",
        "commitResults": [
          {
            "hash": "540a52e2d7b882100cee177eb6e248a651ed4450",
            "messageTitle": "Abstract UserInterface into interface separate from Dude",
            "messageBody": "Create subpackage dude.component for chatbot related interfaces and\nimplementing classes UI and TaskStore\n",
            "insertions": 113,
            "deletions": 67
          },
          {
            "hash": "23c5c56668aeb6f2cd85a1b54d0d480f4a5e3057",
            "messageTitle": "Separate IDudeTaskStore into TaskList and IStorage",
            "messageBody": "Change storage format to simpler (but less safe) format -\n\"type|isDone|details|(deadline or event dates)\"\nwhich can be easily parsed by String.split(\"\\\\|\") but fails to parse\nevents with the \"|\" character\n\nAdd storeFormat method to Task classes\n",
            "insertions": 195,
            "deletions": 150
          }
        ]
      },
      {
        "insertions": 471,
        "deletions": 425,
        "date": "2020-01-27",
        "commitResults": [
          {
            "hash": "72da82d3695f0ab3040577a0eaf6a312065a1042",
            "messageTitle": "Create Command class and move all command execution code into its respective subclasses",
            "messageBody": "Create CommandExecutionException class for exceptions that occur when\nexecuting tasks (To distinguish parsing errors from commands that are\nsyntactically correct but invalid (eg. trying to delete task that does\nnot exist, or mark a task that is already done as done)\n\nAdd Parser class which handles parsing work, reducing role of Task\nsubclasses to dumb constructors while Parser handles parsing messages\nto Commands\n",
            "insertions": 267,
            "deletions": 168
          },
          {
            "hash": "05ab77b866c2f3e20dc5b15ec7eb22c04d49c8b4",
            "messageTitle": "Implement A-MoreOOP",
            "messageBody": "Replace previous implementations of parsing and command execution\n(scattered between Task classes and Dude methods) with Parser class\nand Command classes created in previous commit\n\nMove ParsingException to dude.component as it is a unique exception of\nthe Parser class\n\nRemove ThrowingFunction functional interface which is a relic of\nthe previous implementation\n",
            "insertions": 32,
            "deletions": 225
          },
          {
            "hash": "393818901ba005169bf8844990b428841e9a6aad",
            "messageTitle": "Implement A-Packages (mostly implemented already)",
            "messageBody": "Move Task and subclasses into dude.task package so dude.Dude is only\ntop-level class (i.e. only class in dude package)\n",
            "insertions": 18,
            "deletions": 19
          },
          {
            "hash": "c1eb0cbe8ad4cace781cf0a2abd5ed001e1c17d6",
            "messageTitle": "Implement A-JUnit, create unit tests for Parser class to test behavior on various inputs and simple property testing of TaskList",
            "messageBody": "",
            "insertions": 135,
            "deletions": 9
          },
          {
            "hash": "7d28f369d845614c21865653bd891c19fcfdc1a0",
            "messageTitle": "Modify TextStorage to attempt to create the /data/ directory if it does not exist so it can save /data/dude.txt files and retrieve them no matter where the packaged jar is run from.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 544,
        "deletions": 85,
        "date": "2020-01-28",
        "commitResults": [
          {
            "hash": "8fb6eba4256f2af9a7592408dc28b5b6f8c68564",
            "messageTitle": "Implement A-JavaDoc to comment on all public methods",
            "messageBody": "",
            "insertions": 347,
            "deletions": 12
          },
          {
            "hash": "7c4578a6ac63378cd8e45554f3d4dcb57ea545d4",
            "messageTitle": "Edit JavaDoc comments to have more consistent style, proper formatting (such as escaping \u003c and \u003e, and correct formatting for @see tags)",
            "messageBody": "",
            "insertions": 25,
            "deletions": 15
          },
          {
            "hash": "8d2daf084c7a9768f1d3babd51b8ce77d499c433",
            "messageTitle": "Implement A-CodingStandard",
            "messageBody": "Use checkstyle to enforce coding style according to the Google Java\nStyle Guide, but ignore errors from missing JavaDoc comments since\nJavaDoc is added in other branch (branch-A-JavaDoc)\n",
            "insertions": 43,
            "deletions": 34
          },
          {
            "hash": "ba533dd579b9282de550df2e9ff7a62bbe023cef",
            "messageTitle": "Implement Level-9",
            "messageBody": "Add FindCommand class, which, on execute, filters and prints all tasks\nwhose descriptions match the exact string given\n\nAdd \"find\" case to Parser.parse which spawns FindCommand\n\nAdd \"find\" command to Parser.usages\n",
            "insertions": 35,
            "deletions": 5
          },
          {
            "hash": "036cce599a9a23de77635b282221879649b58db9",
            "messageTitle": "Fully Implement A-CodingStandard to abide by JavaDoc standards",
            "messageBody": "Dude now passes all checkstyle tests\n",
            "insertions": 94,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 501,
        "deletions": 292,
        "date": "2020-02-01",
        "commitResults": [
          {
            "hash": "d7f79de4fd2d0ca30fa3746b5d7d93ac3c07cf86",
            "messageTitle": "Create a working GUI for Duke with stub logic (Duke only replies \"hey\")",
            "messageBody": "Rename Main class to Duke as per iP requirements\n",
            "insertions": 234,
            "deletions": 4
          },
          {
            "hash": "667eae71e243af548994507b80600671374dd7d9",
            "messageTitle": "Implement Level-10 with a fully functioning Duke GUI that responds identically to the TextUI",
            "messageBody": "Replace UI class with GUI class that implements the same IUserInterface\ninterface so no changes to other classes are needed. GUI class contains\nreference to MainWindow controller to call the input/output methods it\nexposes\n\nRename unused UI class to TextUI, soon to be deprecated\n\nRework Duke#serve from the event loop that blocks on user input to an\nevent-driven architecture as required by javafx\n",
            "insertions": 204,
            "deletions": 88
          },
          {
            "hash": "ea1cbb0d267bf5a0aa793dcffdd8471451df7355",
            "messageTitle": "Update Command class so execute no longer takes IStorage, since saving is performed outside ByeCommand to allow saving even when no command is given (like when exiting by closing the window)",
            "messageBody": "Miscellaneous updates to JavaDoc and naming standards (renamed GUI to Gui)\n\nRemove TextUI class as it is no longer used\n\nImprove IUserInterface by providing the variant respond methods with\ndefault implementations. This makes it clear that speak and\nrespond(Runnable r) are the only primitives and the rest are convenience\nmethods\n",
            "insertions": 63,
            "deletions": 200
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "CornCobs": 1755
  },
  "authorFileTypeContributionMap": {
    "CornCobs": {
      "classpath": 12,
      "gitignore": 6,
      "project": 23,
      "prefs": 2,
      "gradle": 35,
      "properties": 3,
      "java": 9,
      "java": 49,
      "java": 34,
      "java": 29,
      "java": 38,
      "java": 26,
      "java": 18,
      "java": 38,
      "java": 41,
      "java": 36,
      "java": 29,
      "java": 76,
      "java": 51,
      "java": 65,
      "java": 22,
      "java": 61,
      "java": 69,
      "java": 131,
      "java": 34,
      "java": 91,
      "java": 108,
      "java": 53,
      "java": 58,
      "java": 78,
      "java": 47,
      "fxml": 23,
      "fxml": 16,
      "java": 68,
      "java": 41,
      "TXT": 191,
      "txt": 26,
      "bat": 18
    }
  },
  "authorContributionVariance": {
    "CornCobs": 75987.28
  },
  "authorDisplayNameMap": {
    "CornCobs": "CS2103-W15- 2 CHIN..OASH"
  }
}
