{
  "authorDailyContributionsMap": {
    "CornCobs": [
      {
        "insertions": 148,
        "deletions": 23,
        "date": "2020-01-20",
        "commitResults": [
          {
            "hash": "e92224f86c79df98ac9e46e61f4211d5cedcb82d",
            "messageTitle": "Rename main class to Dude",
            "messageBody": "Implement Level-1\n",
            "tags": [
              "Level-1"
            ],
            "insertions": 30,
            "deletions": 11
          },
          {
            "hash": "f5456663df8077c6be54489925de4dbf5c18ed74",
            "messageTitle": "Implement Level-2",
            "messageBody": "Create Task class\n\nRefactor Dude class so main serves a Dude instance\n",
            "tags": [
              "Level-2"
            ],
            "insertions": 68,
            "deletions": 8
          },
          {
            "hash": "d897bbbab9bdd26c5c0c6ecc5df687ef14b8c7a6",
            "messageTitle": "Implement Level-3",
            "messageBody": "Add error message support\n",
            "tags": [
              "Level-3"
            ],
            "insertions": 50,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 303,
        "deletions": 89,
        "date": "2020-01-21",
        "commitResults": [
          {
            "hash": "a9bf576158a28104f6a4f60802f271f1149f8075",
            "messageTitle": "Implement Level-4",
            "messageBody": "Add error handling for incorrect user inputs (ParsingException)\n\nAdd classes Todo, Deadline, Event\n",
            "tags": [
              "Level-4"
            ],
            "insertions": 149,
            "deletions": 17
          },
          {
            "hash": "89c389c33f7668248ed13f776d07defc4ac34ef6",
            "messageTitle": "Implement A-TextUITesting",
            "messageBody": "",
            "tags": [
              "A-TextUITesting"
            ],
            "insertions": 31,
            "deletions": 0
          },
          {
            "hash": "1b2b24afb6cd1111e3b88d9b4ea3e9b5dc38d138",
            "messageTitle": "Implement Level-5",
            "messageBody": "Rename ParsingException to MessageInterpretationException\n\nMake parsing more robust to extra whitespace and detecting empty input\n",
            "insertions": 20,
            "deletions": 15
          },
          {
            "hash": "71f62b609c55a9df66313752dd255a5b644df0f1",
            "messageTitle": "Implement Level-6",
            "messageBody": "Abstract common patterns into generic functions\n- addTask abstracts over parser used (Todo::parseTodo etc.)\n- taskListOperation abstracts over commands that operate on a single\n  index in the task list (done and delete)\n\nCreate ThrowingFunction functional interface to allow abstracting\nparsing functions (which throw checked exceptions)\n\nClean up interface of Dude commands - instead of some throwing\nexceptions and some handling errors with respondError, now all handle\ntheir own errors so Dude.serve has no error handling\n",
            "insertions": 99,
            "deletions": 56
          },
          {
            "hash": "79f961ca2f43c8fbe3218aa600f4fb395e0249c6",
            "messageTitle": "Update test case",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 243,
        "deletions": 100,
        "date": "2020-01-24",
        "commitResults": [
          {
            "hash": "8e22e6f410f257b67b33dd8fd41330e6ad4d32c4",
            "messageTitle": "Create package dude and move all classes to dude package",
            "messageBody": "",
            "insertions": 24,
            "deletions": 29
          },
          {
            "hash": "dc9a0fd2cb2d86a6d0db9e884b15d23e5a022d4e",
            "messageTitle": "Implement Level-7",
            "messageBody": "Abstract Dude internal task storage to IDudeTaskStore interface\n\nCreate DudeTaskStore class to handle file IO and maintain task list\nwhile running\n",
            "insertions": 179,
            "deletions": 44
          },
          {
            "hash": "5a163343ae44e9c4e16ac3c9b702611a54b66322",
            "messageTitle": "Implement Level-8",
            "messageBody": "Change date information in Deadline and Event to be proper Date type\nLocalDate\n\nChange message parser to only accept /by and /at in format yyyy-mm-dd\n",
            "insertions": 40,
            "deletions": 27
          }
        ]
      },
      {
        "insertions": 109,
        "deletions": 25,
        "date": "2020-01-25",
        "commitResults": [
          {
            "hash": "a6e6256c6c9f09280168cb9d98150f0547b77121",
            "messageTitle": "Implement Level-8",
            "messageBody": "Correct Event to include 2 dates (start and end) with a new message\nformat (event details /from yyyy-mm-dd /to yyyy-mm-dd)\n\nConvert Task into abstract class with abstract method occursOn which\nchecks if a deadline or event is on a given date, while todos always\nreturn false\n\nAdd 2 new commands check yyyy-mm-dd and today. check date shows all\ndeadlines and events that occur on the given date while today is a\nconvenience for check (today\u0027s date)\n\nUpdate test case\n",
            "tags": [
              "Level-8"
            ],
            "insertions": 109,
            "deletions": 25
          }
        ]
      },
      {
        "insertions": 299,
        "deletions": 211,
        "date": "2020-01-26",
        "commitResults": [
          {
            "hash": "540a52e2d7b882100cee177eb6e248a651ed4450",
            "messageTitle": "Abstract UserInterface into interface separate from Dude",
            "messageBody": "Create subpackage dude.component for chatbot related interfaces and\nimplementing classes UI and TaskStore\n",
            "insertions": 107,
            "deletions": 61
          },
          {
            "hash": "23c5c56668aeb6f2cd85a1b54d0d480f4a5e3057",
            "messageTitle": "Separate IDudeTaskStore into TaskList and IStorage",
            "messageBody": "Change storage format to simpler (but less safe) format -\n\"type|isDone|details|(deadline or event dates)\"\nwhich can be easily parsed by String.split(\"\\\\|\") but fails to parse\nevents with the \"|\" character\n\nAdd storeFormat method to Task classes\n",
            "insertions": 192,
            "deletions": 150
          }
        ]
      },
      {
        "insertions": 465,
        "deletions": 274,
        "date": "2020-01-27",
        "commitResults": [
          {
            "hash": "72da82d3695f0ab3040577a0eaf6a312065a1042",
            "messageTitle": "Create Command class and move all command execution code into its respective subclasses",
            "messageBody": "Create CommandExecutionException class for exceptions that occur when\nexecuting tasks (To distinguish parsing errors from commands that are\nsyntactically correct but invalid (eg. trying to delete task that does\nnot exist, or mark a task that is already done as done)\n\nAdd Parser class which handles parsing work, reducing role of Task\nsubclasses to dumb constructors while Parser handles parsing messages\nto Commands\n",
            "insertions": 267,
            "deletions": 19
          },
          {
            "hash": "05ab77b866c2f3e20dc5b15ec7eb22c04d49c8b4",
            "messageTitle": "Implement A-MoreOOP",
            "messageBody": "Replace previous implementations of parsing and command execution\n(scattered between Task classes and Dude methods) with Parser class\nand Command classes created in previous commit\n\nMove ParsingException to dude.component as it is a unique exception of\nthe Parser class\n\nRemove ThrowingFunction functional interface which is a relic of\nthe previous implementation\n",
            "tags": [
              "A-MoreOOP"
            ],
            "insertions": 29,
            "deletions": 225
          },
          {
            "hash": "393818901ba005169bf8844990b428841e9a6aad",
            "messageTitle": "Implement A-Packages (mostly implemented already)",
            "messageBody": "Move Task and subclasses into dude.task package so dude.Dude is only\ntop-level class (i.e. only class in dude package)\n",
            "tags": [
              "A-Packages"
            ],
            "insertions": 18,
            "deletions": 19
          },
          {
            "hash": "c1eb0cbe8ad4cace781cf0a2abd5ed001e1c17d6",
            "messageTitle": "Implement A-JUnit, create unit tests for Parser class to test behavior on various inputs and simple property testing of TaskList",
            "messageBody": "",
            "tags": [
              "A-JUnit"
            ],
            "insertions": 132,
            "deletions": 7
          },
          {
            "hash": "7d28f369d845614c21865653bd891c19fcfdc1a0",
            "messageTitle": "Modify TextStorage to attempt to create the /data/ directory if it does not exist so it can save /data/dude.txt files and retrieve them no matter where the packaged jar is run from.",
            "messageBody": "",
            "tags": [
              "v0.1"
            ],
            "insertions": 19,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 544,
        "deletions": 85,
        "date": "2020-01-28",
        "commitResults": [
          {
            "hash": "8fb6eba4256f2af9a7592408dc28b5b6f8c68564",
            "messageTitle": "Implement A-JavaDoc to comment on all public methods",
            "messageBody": "",
            "insertions": 347,
            "deletions": 12
          },
          {
            "hash": "7c4578a6ac63378cd8e45554f3d4dcb57ea545d4",
            "messageTitle": "Edit JavaDoc comments to have more consistent style, proper formatting (such as escaping \u003c and \u003e, and correct formatting for @see tags)",
            "messageBody": "",
            "insertions": 25,
            "deletions": 15
          },
          {
            "hash": "8d2daf084c7a9768f1d3babd51b8ce77d499c433",
            "messageTitle": "Implement A-CodingStandard",
            "messageBody": "Use checkstyle to enforce coding style according to the Google Java\nStyle Guide, but ignore errors from missing JavaDoc comments since\nJavaDoc is added in other branch (branch-A-JavaDoc)\n",
            "insertions": 43,
            "deletions": 34
          },
          {
            "hash": "ba533dd579b9282de550df2e9ff7a62bbe023cef",
            "messageTitle": "Implement Level-9",
            "messageBody": "Add FindCommand class, which, on execute, filters and prints all tasks\nwhose descriptions match the exact string given\n\nAdd \"find\" case to Parser.parse which spawns FindCommand\n\nAdd \"find\" command to Parser.usages\n",
            "insertions": 35,
            "deletions": 5
          },
          {
            "hash": "036cce599a9a23de77635b282221879649b58db9",
            "messageTitle": "Fully Implement A-CodingStandard to abide by JavaDoc standards",
            "messageBody": "Dude now passes all checkstyle tests\n",
            "tags": [
              "A-CodingStandard"
            ],
            "insertions": 94,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 501,
        "deletions": 292,
        "date": "2020-02-01",
        "commitResults": [
          {
            "hash": "d7f79de4fd2d0ca30fa3746b5d7d93ac3c07cf86",
            "messageTitle": "Create a working GUI for Duke with stub logic (Duke only replies \"hey\")",
            "messageBody": "Rename Main class to Duke as per iP requirements\n",
            "insertions": 234,
            "deletions": 4
          },
          {
            "hash": "667eae71e243af548994507b80600671374dd7d9",
            "messageTitle": "Implement Level-10 with a fully functioning Duke GUI that responds identically to the TextUI",
            "messageBody": "Replace UI class with GUI class that implements the same IUserInterface\ninterface so no changes to other classes are needed. GUI class contains\nreference to MainWindow controller to call the input/output methods it\nexposes\n\nRename unused UI class to TextUI, soon to be deprecated\n\nRework Duke#serve from the event loop that blocks on user input to an\nevent-driven architecture as required by javafx\n",
            "insertions": 204,
            "deletions": 88
          },
          {
            "hash": "ea1cbb0d267bf5a0aa793dcffdd8471451df7355",
            "messageTitle": "Update Command class so execute no longer takes IStorage, since saving is performed outside ByeCommand to allow saving even when no command is given (like when exiting by closing the window)",
            "messageBody": "Miscellaneous updates to JavaDoc and naming standards (renamed GUI to Gui)\n\nRemove TextUI class as it is no longer used\n\nImprove IUserInterface by providing the variant respond methods with\ndefault implementations. This makes it clear that speak and\nrespond(Runnable r) are the only primitives and the rest are convenience\nmethods\n",
            "insertions": 63,
            "deletions": 200
          }
        ]
      },
      {
        "insertions": 101,
        "deletions": 53,
        "date": "2020-02-07",
        "commitResults": [
          {
            "hash": "345d8453da5e107adb6feb0f69124c20e3b40be9",
            "messageTitle": "Refactor Parser to split parse method into smaller methods",
            "messageBody": "Parser.parse now calls Parser.parseSingleWordCommand and\nParser.parseCommandWithArguments, applying them sequentially\nand checking if each returned null before trying the next\n\nUpdate Test for Parser so empty String should result in error\nmessage about incomplete command instead of not understanding the\ncommand\n",
            "insertions": 101,
            "deletions": 53
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 98,
        "date": "2020-02-08",
        "commitResults": [
          {
            "hash": "0783d8291334dac7f76566f2218a94c2d34cd4c7",
            "messageTitle": "Refactor all TaskList enumerating methods and calls to consistently use Stream API",
            "messageBody": "Previously, getAllTasks returned a List\u003cTask\u003e while showAllTasks returned a String[].\nFurthermore each calling method implemented their own filtering/formatting and basically\nconsumed the collection immediately. Using the Stream API, the new formatFilteredTasks\nand its derivative showFilteredTasks take care of filtering and formatting, while\nreturning an unconsumed Stream\u003cString\u003e, bypassing intermediate data structures\n\nUpdate build to v0.2\n\nUpdate TaskListTest to reflect changes to TaskList\n",
            "insertions": 41,
            "deletions": 62
          },
          {
            "hash": "ee38ad551e4e31c53b45e30694201979f671c518",
            "messageTitle": "Minor refactor of Parser.parseCommandWithArguments to extract Deadline parsing and Event parsing into their own methods",
            "messageBody": "",
            "insertions": 18,
            "deletions": 8
          },
          {
            "hash": "03fb93e14c0c79d5868a371d932ad7c82a0a5448",
            "messageTitle": "Fix bug in Parser.parse",
            "messageBody": "Previously invalid single word commands or empty strings result in a null usage message\nin the error message. Now correct error messages with relevant usage info is given\n\nImprove DialogBox in GUI\n\nFont size increase and change from Label to Text allows DialogBox to expand to show\nentire message without truncating text with ellipsis\n",
            "insertions": 16,
            "deletions": 28
          }
        ]
      },
      {
        "insertions": 536,
        "deletions": 78,
        "date": "2020-02-09",
        "commitResults": [
          {
            "hash": "04ca96592ed25161bef10d9a17a6faef6caf7c5f",
            "messageTitle": "Refactor Duke class for looser coupling with dependencies",
            "messageBody": "Remove implementation-specific details from Duke, key of which were:\n- Platform.exit() to exit javafx application\n- Concrete classes Gui and TextStorage\nDuke now only depends on Interfaces, relegates specifying of dependencies to DukeFactory\nwhich has benefits of easier stubbing for unit testing\n\nCreate DukeTest unit testing class to test simple serve() behavior\n",
            "insertions": 170,
            "deletions": 13
          },
          {
            "hash": "5b8a1d96de451b2a875e294d325597f9a2d2c3a4",
            "messageTitle": "Setup Travis-CI",
            "messageBody": "Remove configuration files that were accidentally included in the project\n",
            "tags": [
              "A-Travis"
            ],
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "531f4ba4e953e1f5ac68534311cff63ff20d15f8",
            "messageTitle": "Add assertions to Gui and Parser",
            "messageBody": "Most of the methods already check their assumptions and catch exceptional cases, thus\nvery few assertions are added\n",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "55f4f137813b82fb31ca1d3a13fa7fa956045d15",
            "messageTitle": "Add new command, help, with HelpCommand class",
            "messageBody": "Refactor parsing error messages\n\nOnly 1 usage message is provided. For the unmatched case, user is simply referred to\nthe help command where all the usage messages are shown\n",
            "insertions": 191,
            "deletions": 44
          },
          {
            "hash": "66807cda07de651d1d80a60ac2add031b51034c5",
            "messageTitle": "Add feature of flexible date formats",
            "messageBody": "Since Date parsing is so complex, it is separated into its own DateParser class that\nparses 4 different date formats, 2 absolute (yyyy-mm-dd and d MMM yyyy) and 2 relative\nto the current date (offset-based, eg. 10 days, 1 week, and day of week-based, eg.\nMonday +4 means 4 mondays from now)\n\nAdd testing for DateParser\n",
            "insertions": 170,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 10,
        "date": "2020-02-11",
        "commitResults": [
          {
            "hash": "903269b16e81eceda065516244288103cfe9902d",
            "messageTitle": "Improve UI and coding standards",
            "messageBody": "",
            "tags": [
              "v0.2.1",
              "C-NaturalDates",
              "C-Help"
            ],
            "insertions": 12,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 674,
        "deletions": 270,
        "date": "2020-02-18",
        "commitResults": [
          {
            "hash": "735b29b0359d5b2a6ccf3504360bdfd6550ec504",
            "messageTitle": "Add acknowledgements for reused code from tutorials directory",
            "messageBody": "Modify UI slightly - add title, resize image\n",
            "insertions": 27,
            "deletions": 7
          },
          {
            "hash": "1a2c37b6f96decf034f7636cc39e9e5cd53c3a36",
            "messageTitle": "Refactor DateParser into separate Parser classes implementing IDateParser",
            "messageBody": "This refactor allows each parser to hold state, which allows format, examples and\nexplanations to be placed in said classes instead of being hard-coded into HelpCommand\n",
            "insertions": 399,
            "deletions": 203
          },
          {
            "hash": "dfb6df2964b4e1a09e8ef675a42ce36b609390e2",
            "messageTitle": "Update README and add Ui screenshot",
            "messageBody": "",
            "tags": [
              "A-Release"
            ],
            "insertions": 44,
            "deletions": 3
          },
          {
            "hash": "d8cff653ba6028982722541989b3550806249696",
            "messageTitle": "Update README and add some images",
            "messageBody": "",
            "insertions": 56,
            "deletions": 10
          },
          {
            "hash": "96acd664b1fb5ca748954747599c84661b2e011f",
            "messageTitle": "Create user guide for Dude",
            "messageBody": "",
            "tags": [
              "A-UserGuide"
            ],
            "insertions": 148,
            "deletions": 47
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 31,
        "date": "2020-03-02",
        "commitResults": [
          {
            "hash": "33588e0fecc4afe0937218810554f84e551494e2",
            "messageTitle": "Fix Storage only saving upon exit instead of upon every task list change",
            "messageBody": "",
            "tags": [
              "v0.2.3"
            ],
            "insertions": 32,
            "deletions": 31
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "CornCobs": 2417
  },
  "authorFileTypeContributionMap": {
    "CornCobs": {
      "java": 2104,
      "md": 191,
      "fxml": 43,
      "sh": 0,
      "bat": 18,
      "gradle": 35,
      "txt": 26
    }
  },
  "authorContributionVariance": {
    "CornCobs": 56599.516
  },
  "authorDisplayNameMap": {
    "CornCobs": "CS2103-W15- 2 CHIN..OASH"
  }
}
