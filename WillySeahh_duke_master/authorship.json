[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "dukeclasses.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for dukeclasses.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    //implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    mainClassName \u003d \"dukeclasses.Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 33,
      "-": 21
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "dukeClasses.ToDo|1|borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "dukeClasses.ToDo|1|fwwefwef"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "dukeClasses.Deadline|1| fewfew |2020-08-13"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 3
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 1
    }
  },
  {
    "path": "src/main/java/dukeclasses/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * dukeClasses.Deadline class is a child class of dukeClasses.Task that has a by,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * variable which tells the user when the deadline is."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * returns a String containing description of object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return returns a String containing the description of the object, used to print out"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                + \" \" + by.getDayOfWeek().toString()  + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * returns the dynamic state of the dukeClasses.Deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return the state of dukeClasses.Deadline, to be saved in data.txt"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String isItDone \u003d this.isDone ? \"1\" : \"0\"; //1 is done, 0 is not done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"dukeClasses.Deadline\" + \"|\" + isItDone + \"|\" + this.description + \"|\" + this.by;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 39
    }
  },
  {
    "path": "src/main/java/dukeclasses/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * This gets the text of what is Duke going to say."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param text input text"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param img image of duke"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return returns a Dialog box"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 68
    }
  },
  {
    "path": "src/main/java/dukeclasses/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * Contains a product name dukeClasses.Duke, a personal assistant chat bot that keeps track of various tasks that needs,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * to be done. It classifies tasks into deadline, todo and event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * It can add, delete, list all the tasks, find task with a keyword and mark them as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * The main method to start Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param args args to pass in."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        FastReader fr \u003d new FastReader();//Handles input by the user"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        TaskManager manager \u003d new TaskManager();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Ui ui \u003d new Ui(manager);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        ui.introduction();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        manager.loadExistingData();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String textEntered \u003d fr.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        while (!ui.hasEnded) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            ui.handleInputs(textEntered);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            if (textEntered.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            textEntered \u003d fr.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //This line is needed after I add javaFX. I need to force the System.exit"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    PrintStream helper;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        helper \u003d System.out;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //FastReader fr \u003d new FastReader();//Handles input by the user"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        TaskManager manager \u003d new TaskManager();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Ui ui \u003d new Ui(manager);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //ui.introduction();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        manager.loadExistingData();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (input.contains(\"bye\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            ui.handleInputs(input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.setOut(helper);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"Duke heard: \" + baos.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 237,
      "-": 1
    }
  },
  {
    "path": "src/main/java/dukeclasses/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * This class handles the Duke Exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 12
    }
  },
  {
    "path": "src/main/java/dukeclasses/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * dukeClasses.Event class is a child class of dukeClasses.Task that has a at variable which tells the user,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * where is the event at."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * returns a String contaning description of object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return returns a String containing the description of the object, used to print out"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * returns the dynamic state of the dukeClasses.Event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return the state of dukeClasses.Event, to be saved in data.txt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String isItDone \u003d this.isDone ? \"1\" : \"0\"; //1 is done, 0 is not done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"dukeClasses.Event\" + \"|\" + isItDone + \"|\" + this.description + \"|\" + this.at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 36
    }
  },
  {
    "path": "src/main/java/dukeclasses/FastReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * This class handles reading in the input faster."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * It is slightly faster than Scanner."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class FastReader {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    BufferedReader br;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    StringTokenizer st;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public FastReader() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        br \u003d new BufferedReader("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    String next() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        while (st \u003d\u003d null || !st.hasMoreElements()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                st \u003d new StringTokenizer(br.readLine());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return st.nextToken();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    int nextInt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return Integer.parseInt(next());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    double nextDouble() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return Double.parseDouble(next());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    long nextLong() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return Long.parseLong(next());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    String nextLine() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            str \u003d br.readLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 61
    }
  },
  {
    "path": "src/main/java/dukeclasses/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Runs the main method."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param args runs method"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //Can have 2 public static void main in a project. Just choose which psvm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //to run from by selecting the top right."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 24
    }
  },
  {
    "path": "src/main/java/dukeclasses/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 32
    }
  },
  {
    "path": "src/main/java/dukeclasses/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 55
    }
  },
  {
    "path": "src/main/java/dukeclasses/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * This class handles the parsing of strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Handles the \"done ...\" inputs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param textEntered user\u0027s input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return indexOfTask done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public int handleDoneCommands(String textEntered) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String[] temporary \u003d textEntered.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        int indexOfTaskDone \u003d Integer.parseInt(temporary[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return indexOfTaskDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Handles \"delete ..\" inputs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param textEntered user\u0027s input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return index of task to be deleted"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public int handleDeleteCommands(String textEntered) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String[] temporary \u003d textEntered.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        int indexOfTaskToDelete \u003d Integer.parseInt(temporary[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return indexOfTaskToDelete;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Handles \"find ..\" inputs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param textEntered user\u0027s input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return a String[]  to be passed into TaskManager."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String[] handleFindCommands(String textEntered) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return textEntered.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 47
    }
  },
  {
    "path": "src/main/java/dukeclasses/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "//import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * This class handles the saving and loading of data from data.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected String dataDirPath \u003d \"data/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Create a folder to store user\u0027s data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @throws IOException If the folder cannot be created, inform the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void checkFileDir() throws IOException { //check if data folder exists, if not create it"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        File dataDirectory \u003d new File(Paths.get(dataDirPath).toUri());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //If data folder does not exists then create a folder for it"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (!dataDirectory.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            boolean success \u003d dataDirectory.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            //If failed to create successfully, need to inform user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            if (!success) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                throw new IOException(\"Failed to create directory \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(\"Connecting to Stark\u0027s secure database...\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Create a file called data.txt to store user\u0027s data."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @throws IOException throws exception if file is not found"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void checkFile() throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        File dataFile \u003d new File(Paths.get(dataDirPath.concat(\"data.txt\")).toUri());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            boolean fileCreated \u003d dataFile.createNewFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            if (fileCreated) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(\"New file created successfully\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(\"Cannot create file\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(\"Data file found! Proceeding to load existing data!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * helps with loading data when starting up program again. Data is stored in data.txt."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return returns an array List with the data filled in from data.txt"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public ArrayList\u003cTask\u003e loadExistingData() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String fileName \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            // FileReader reads text files in the default encoding."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            FileReader fileReader \u003d new FileReader(fileName);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            // Always wrap FileReader in BufferedReader."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                String[] temporary \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                if (temporary[0].contains(\"dukeClasses.ToDo\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    Task t \u003d new ToDo(temporary[2]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    if (temporary[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    listOfTasks.add(t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                } else if (temporary[0].contains(\"dukeClasses.Deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    Task t \u003d new Deadline(temporary[2], LocalDate.parse(temporary[3]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    if (temporary[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    listOfTasks.add(t);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                } else if (temporary[0].contains(\"dukeClasses.Event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    Task t \u003d new Event(temporary[2], temporary[3]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    if (temporary[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    listOfTasks.add(t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    if (listOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                        System.out.println(\"File is empty, no data to load.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            // Always close files."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    \"Unable to open file \u0027\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                           + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    \"Error reading file \u0027\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                            + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * saves data in data.txt before program exits."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param list list contains the ArrayList filled with all the data up till now."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *             It will be saved in data.txt"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void saveExistingData(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String fileName \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            // Assume default encoding."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            // Always wrap FileWriter in BufferedWriter."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    bufferedWriter.write(((ToDo) t).saveData());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    bufferedWriter.write(((Deadline) t).saveData());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    bufferedWriter.write(((Event) t).saveData());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            // Always close files."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } catch (IOException i) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            i.printStackTrace();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 158
    }
  },
  {
    "path": "src/main/java/dukeclasses/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * This class is the parent class of deadline,todo and event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public Task(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        this.description \u003d s;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * returns a string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return returns a string containing the details"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Returns whether is it completed or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return Completed or Incomplete."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return isDone ? \"Completed\" : \"Incomplete\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Used to change the isDone boolean of a dukeClasses.Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Get description of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * gets the isDone boolean for a task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 60
    }
  },
  {
    "path": "src/main/java/dukeclasses/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * Handles all the issues related to Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * Similar to TaskList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * loads existing data from data.txt."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void loadExistingData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        listOfTasks \u003d storage.loadExistingData();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * saves current data into data.txt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void saveExistingData() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        storage.saveExistingData(listOfTasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Used for Level-9. find keyword that appears in each dukeClasses.Task in listOfTasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param keyword keyword to search"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void findTask(String keyword) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            if (listOfTasks.get(i).description.contains(keyword)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(\"  \" + (i + 1) +  \". \" + this.listOfTasks.get(i).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * lists down all tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void listAllTasks() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"Here are your tasks in your list: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        for (int j \u003d 0; j \u003c this.listOfTasks.size(); j++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(\"  \" + (j + 1) +  \". \" + this.listOfTasks.get(j).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * change the boolean isDone? of a dukeClasses.Task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param index index of dukeClasses.Task to be set as Done (isDone \u003d True)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void setTaskAsDone(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        listOfTasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        storage.saveExistingData(listOfTasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"  \" + listOfTasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Adds a new task and saves it in data."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param textEntered includes the type of task, description, and /by or /at"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @throws DukeException Must have deadline and date for dukeClasses.Deadline and Events"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void addTask(String textEntered) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (textEntered.contains(\"todo\")) { //Handles dukeClasses.Task that are dukeClasses.ToDos"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            if (textEntered.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                newTask \u003d new ToDo(textEntered.substring(5));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                this.listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else if (textEntered.contains(\"deadline\")) { //Handles dukeClasses.Task that are dukeClasses.Deadline"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            if (textEntered.split(\" \").length \u003d\u003d 1) { //No input date"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                textEntered \u003d textEntered.substring(9);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                String[] temp \u003d (textEntered.split(\"/by \")); //leaving only the date and time portion"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                String tempDate \u003d temp[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                LocalDate date;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    date \u003d LocalDate.parse(tempDate);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    newTask \u003d new Deadline(temp[0], date);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    this.listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    throw new DateTimeException(ex.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else { //Handles task that is dukeClasses.Event"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            if (textEntered.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                textEntered \u003d textEntered.substring(6);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                String[] temp \u003d (textEntered.split(\"/\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                newTask \u003d new Event(temp[0], temp[1].substring(3));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                this.listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        storage.saveExistingData(listOfTasks);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"  \" + newTask.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Handles it when user types in nonsense inputs."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @throws DukeException Telling user that there is no such exception"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void nonsenseInput() throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Deletes task from listOfTasks and saves the data."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param indexOfTaskToDelete index of task to delete"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @throws DukeException Cannot delete nothing"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @throws IndexOutOfBoundsException Incase if user inputs something that is out of array bound"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void deleteTask(int indexOfTaskToDelete) throws DukeException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (listOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            throw new DukeException(\"Nothing to delete because list is empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        indexOfTaskToDelete \u003d indexOfTaskToDelete - 1;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (listOfTasks.get(indexOfTaskToDelete) \u003d\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            throw new DukeException(\"Cannot delete because the task do not exist.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(\"  \" + listOfTasks.get(indexOfTaskToDelete).toString());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(\"Now you have \" + (listOfTasks.size() - 1) + \" tasks left in the list.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            listOfTasks.remove(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            storage.saveExistingData(listOfTasks);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * used for Level 1 and 2. Redundant now."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param textEntered the user\u0027s input"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void echo(String textEntered) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(textEntered);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Return list of Tasks."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return listOfTasks"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 183
    }
  },
  {
    "path": "src/main/java/dukeclasses/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * Todo class is a child class of dukeClasses.Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public ToDo(String desciption) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        super(desciption);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * returns a String contaning description of object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return returns a String containing the description of the object, used to print out"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * returns the dynamic state of the dukeClasses.ToDo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @return the state of dukeClasses.ToDo, to be saved in data.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String isItDone \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //1 is done, 0 is not done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        return \"dukeClasses.ToDo\" + \"|\" + isItDone + \"|\" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 32
    }
  },
  {
    "path": "src/main/java/dukeclasses/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "package dukeclasses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " * Handles all the user inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected boolean hasEnded;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected TaskManager manager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    protected String horizontalLine \u003d \"**************************************************************\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public Ui(TaskManager manager) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        this.hasEnded \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Prints out the introduction text."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void introduction() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        //To run using gradle go and search in Help \u003e Delegate Run \u003e build tools \u003e gradle"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        String logo \u003d \" _____        .      _     |\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                +     \"|         |  | |\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                +                     \"   _| |_   |\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                +      \"|_____   _|  | |  |_   _|  |__\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                +      \"|_____  |_|  |_|    |_|    |  |\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"\" + logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            Storage store \u003d new Storage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            store.checkFileDir();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            store.checkFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(ex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"Hello!! My name is Edith. Tony Stark\u0027s Personal Assistant\" + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Handles all the different kinds of inputs the user can have."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * @param textEntered textEntered represents whatever the user types"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void handleInputs(String textEntered) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (textEntered.equals(\"list\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            manager.listAllTasks();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else if (textEntered.contains(\"done\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            int indexOfTaskDone \u003d parser.handleDoneCommands(textEntered);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                manager.setTaskAsDone(indexOfTaskDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(\"Done must be followed by a number\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(\"There is no task with that index! \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else if (textEntered.contains(\"todo\") || (textEntered.contains(\"deadline\"))"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                || textEntered.contains(\"event\")) { //create a task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                manager.addTask(textEntered);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(\"Please enter dates in this format YYYY-MM_DD\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else if (textEntered.contains(\"delete\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                Parser parse \u003d new Parser();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                int indexOfTaskDeleted \u003d parse.handleDeleteCommands(textEntered);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                manager.deleteTask(indexOfTaskDeleted);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else if (textEntered.contains(\"bye\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            manager.saveExistingData();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            this.hasEnded \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else if (textEntered.contains(\"find\")) { //contains 1 keyword only, as stated in the question"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            Parser parse \u003d new Parser();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            String[] temp \u003d parse.handleFindCommands(textEntered);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                    throw new DukeException(\"Find must be followed by a keyword and cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                manager.findTask(temp[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        } else { //nonsense input"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                manager.nonsenseInput();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        if (!textEntered.contains(\"bye\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     * Prints the goodbye message for the user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(\"Data has been saved! Goodbye Mr.Stark!!!!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 123
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dukeclasses.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import dukeclasses.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import org.junit.jupiter.api.Order;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Order(1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void testTaskName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"test\", LocalDate.parse(\"2020-01-01\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        assertEquals(\"test\", deadlineTest.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Order(2)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void testDoneStatus() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"test\", LocalDate.parse(\"2020-01-01\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        assertEquals(false, deadlineTest.getIsDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 30
    }
  },
  {
    "path": "src/test/java/TaskTests.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import dukeclasses.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import dukeclasses.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "public class TaskTests {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void testDeadline() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"hello\", LocalDate.parse(\"2023-11-11\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        assertEquals(\"hello\", deadlineTest.getDescription());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    public void testEvent() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        Event eventTest \u003d new Event(\"hello\", \"Changi\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "        assertEquals(false, eventTest.getIsDone());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": " _____        .      _     |"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "|         |  | |   _| |_   |"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "|_____   _|  | |  |_   _|  |__"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "|_____  |_|  |_|    |_|    |  |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "Connecting to Stark\u0027s secure database..."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "Data file found! Proceeding to load existing data!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "Hello!! My name is Edith. Tony Stark\u0027s Personal Assistant"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "DukeException: I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "DukeException: I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "Here are your tasks in your list: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  1. [D][?] CS2103T duke (by: Apr 11 2020 SATURDAY)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  2. [T][?] CS2103T duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  3. [E][?] CS2101 CA component 1 (at: Thursday 08:00)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  4. [D][?] CS2103T duke (by: Apr 11 2020 SATURDAY)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  5. [T][?] CS2103T duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  6. [E][?] CS2101 CA component 1 (at: Thursday 08:00)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  7. [D][?] CS2103T duke (by: Apr 11 2020 SATURDAY)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  8. [T][?] CS2103T duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "  9. [E][?] CS2101 CA component 1 (at: Thursday 08:00)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "Data has been saved! Goodbye Mr.Stark!!!!"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "**************************************************************"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "hello world"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\dukeclasses\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WillySeahh"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "WillySeahh": 22
    }
  }
]
