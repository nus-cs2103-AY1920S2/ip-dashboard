[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 38,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "#User Guide"
      },
      {
        "lineNumber": 2,
        "content": ""
      },
      {
        "lineNumber": 3,
        "content": "##1. Features "
      },
      {
        "lineNumber": 4,
        "content": ""
      },
      {
        "lineNumber": 5,
        "content": "###1.1 Viewing List: list"
      },
      {
        "lineNumber": 6,
        "content": "Returns all the tasks in the list."
      },
      {
        "lineNumber": 7,
        "content": ""
      },
      {
        "lineNumber": 8,
        "content": "Format: "
      },
      {
        "lineNumber": 9,
        "content": "    **list**"
      },
      {
        "lineNumber": 10,
        "content": ""
      },
      {
        "lineNumber": 11,
        "content": "###2.1 Adding Todo Task: todo "
      },
      {
        "lineNumber": 12,
        "content": "Adds a Todo task to the list."
      },
      {
        "lineNumber": 13,
        "content": ""
      },
      {
        "lineNumber": 14,
        "content": "Format: **todo (todo details)**"
      },
      {
        "lineNumber": 15,
        "content": ""
      },
      {
        "lineNumber": 16,
        "content": "Examples: "
      },
      {
        "lineNumber": 17,
        "content": " * todo eat"
      },
      {
        "lineNumber": 18,
        "content": " * todo homework"
      },
      {
        "lineNumber": 19,
        "content": " "
      },
      {
        "lineNumber": 20,
        "content": " ###2.3 Adding Deadline Task: deadline .../by"
      },
      {
        "lineNumber": 21,
        "content": " Adds a deadline task to the list."
      },
      {
        "lineNumber": 22,
        "content": " "
      },
      {
        "lineNumber": 23,
        "content": " Format: **deadline (deadline details) /by (deadline)**"
      },
      {
        "lineNumber": 24,
        "content": " "
      },
      {
        "lineNumber": 25,
        "content": " Examples: "
      },
      {
        "lineNumber": 26,
        "content": "  * deadline return book /by 18/2/2020 1800"
      },
      {
        "lineNumber": 27,
        "content": "  * deadline submit work /by 20/2/2020 1000"
      },
      {
        "lineNumber": 28,
        "content": "  "
      },
      {
        "lineNumber": 29,
        "content": "###2.4 Adding Event Task: event .../at"
      },
      {
        "lineNumber": 30,
        "content": "Adds a event task to the list."
      },
      {
        "lineNumber": 31,
        "content": "   "
      },
      {
        "lineNumber": 32,
        "content": "Format: **event (event details) /at (event date)**"
      },
      {
        "lineNumber": 33,
        "content": "   "
      },
      {
        "lineNumber": 34,
        "content": "Examples: "
      },
      {
        "lineNumber": 35,
        "content": "  * event group project meeting /at 21/2/2020 1500"
      },
      {
        "lineNumber": 36,
        "content": "  * event charity work /at 25/2/2020 0900"
      },
      {
        "lineNumber": 37,
        "content": "  "
      },
      {
        "lineNumber": 38,
        "content": "###2.5 Find Task: find "
      },
      {
        "lineNumber": 39,
        "content": "Finds tasks whose tasks contains any of the given keywords "
      },
      {
        "lineNumber": 40,
        "content": ""
      },
      {
        "lineNumber": 41,
        "content": "Format: **find KEYWORD**"
      },
      {
        "lineNumber": 42,
        "content": "   "
      },
      {
        "lineNumber": 43,
        "content": "Examples: "
      },
      {
        "lineNumber": 44,
        "content": "  * find charity "
      },
      {
        "lineNumber": 45,
        "content": "  "
      },
      {
        "lineNumber": 46,
        "content": "  Returns: "
      },
      {
        "lineNumber": 47,
        "content": "                        "
      },
      {
        "lineNumber": 48,
        "content": "            [E][X] charity work"
      },
      {
        "lineNumber": 49,
        "content": "  "
      },
      {
        "lineNumber": 50,
        "content": "  * find work "
      },
      {
        "lineNumber": 51,
        "content": "  "
      },
      {
        "lineNumber": 52,
        "content": "  Returns: "
      },
      {
        "lineNumber": 53,
        "content": "  "
      },
      {
        "lineNumber": 54,
        "content": "           [E][X] charity work "
      },
      {
        "lineNumber": 55,
        "content": "  "
      },
      {
        "lineNumber": 56,
        "content": "           [D][X] submit work  "
      },
      {
        "lineNumber": 57,
        "content": "           "
      },
      {
        "lineNumber": 58,
        "content": "           [T][X] todo homework "
      },
      {
        "lineNumber": 59,
        "content": "  "
      },
      {
        "lineNumber": 60,
        "content": ""
      },
      {
        "lineNumber": 61,
        "content": "###2.6 View Tasks via Date: date"
      },
      {
        "lineNumber": 62,
        "content": ""
      },
      {
        "lineNumber": 63,
        "content": "View all the tasks on the specific date."
      },
      {
        "lineNumber": 64,
        "content": ""
      },
      {
        "lineNumber": 65,
        "content": "Format: **date (dd/MM/YYYY)**"
      },
      {
        "lineNumber": 66,
        "content": "      "
      },
      {
        "lineNumber": 67,
        "content": "Examples: "
      },
      {
        "lineNumber": 68,
        "content": "  * date 21/2/2020"
      },
      {
        "lineNumber": 69,
        "content": "  "
      },
      {
        "lineNumber": 70,
        "content": "Returns: "
      },
      {
        "lineNumber": 71,
        "content": "        "
      },
      {
        "lineNumber": 72,
        "content": "        [E][X] group project meeting (at: 21 Feb 2020 3PM)"
      },
      {
        "lineNumber": 73,
        "content": "        "
      },
      {
        "lineNumber": 74,
        "content": "###2.7 View Tasks via Type: **view**"
      },
      {
        "lineNumber": 75,
        "content": ""
      },
      {
        "lineNumber": 76,
        "content": "Views all the tasks of one type, either Todo, Event or Deadline."
      },
      {
        "lineNumber": 77,
        "content": "   "
      },
      {
        "lineNumber": 78,
        "content": "Format: **view (task type)**"
      },
      {
        "lineNumber": 79,
        "content": "   "
      },
      {
        "lineNumber": 80,
        "content": "Examples: "
      },
      {
        "lineNumber": 81,
        "content": "  * view todo"
      },
      {
        "lineNumber": 82,
        "content": "  "
      },
      {
        "lineNumber": 83,
        "content": "  Returns:"
      },
      {
        "lineNumber": 84,
        "content": "         "
      },
      {
        "lineNumber": 85,
        "content": "         [T][X] eat"
      },
      {
        "lineNumber": 86,
        "content": "         [T][X] do homework"
      },
      {
        "lineNumber": 87,
        "content": "         "
      },
      {
        "lineNumber": 88,
        "content": "  * view event"
      },
      {
        "lineNumber": 89,
        "content": "  "
      },
      {
        "lineNumber": 90,
        "content": "  Returns: "
      },
      {
        "lineNumber": 91,
        "content": "         "
      },
      {
        "lineNumber": 92,
        "content": "         [E][X] group project meeting (at: 21 Feb 2020 3PM)"
      },
      {
        "lineNumber": 93,
        "content": "         [E][X] charity work (at: 25 Feb 2020 9AM)"
      },
      {
        "lineNumber": 94,
        "content": "         "
      },
      {
        "lineNumber": 95,
        "content": ""
      },
      {
        "lineNumber": 96,
        "content": "  "
      },
      {
        "lineNumber": 97,
        "content": "###2.8 Done Tasks: done"
      },
      {
        "lineNumber": 98,
        "content": ""
      },
      {
        "lineNumber": 99,
        "content": "Mark the specific task as done with a Tick."
      },
      {
        "lineNumber": 100,
        "content": ""
      },
      {
        "lineNumber": 101,
        "content": "Format: **done (index of task in list)**"
      },
      {
        "lineNumber": 102,
        "content": "      "
      },
      {
        "lineNumber": 103,
        "content": "Examples: "
      },
      {
        "lineNumber": 104,
        "content": "  * done 1"
      },
      {
        "lineNumber": 105,
        "content": " "
      },
      {
        "lineNumber": 106,
        "content": "###2.9 Delete Tasks: delete"
      },
      {
        "lineNumber": 107,
        "content": ""
      },
      {
        "lineNumber": 108,
        "content": "Delete and remove the specific task from the list."
      },
      {
        "lineNumber": 109,
        "content": ""
      },
      {
        "lineNumber": 110,
        "content": "Format: **delete (index of task in list)**"
      },
      {
        "lineNumber": 111,
        "content": "      "
      },
      {
        "lineNumber": 112,
        "content": "Examples: "
      },
      {
        "lineNumber": 113,
        "content": "  * delete 1"
      },
      {
        "lineNumber": 114,
        "content": "  "
      }
    ],
    "authorContributionMap": {
      "null": 113,
      "chuayijing": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * Deadline stores the description of task and the deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * contains the date of the deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param description is the name of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param by deadline date"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert description !\u003d null: \"No description for this deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert by !\u003d null : \" no date and timing for this deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param by takes in the deadline date of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return it as MMM d yyyy."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String parseDate(String by) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert by !\u003d null : \" no date and timing available\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            DateFormat newFormat \u003d new SimpleDateFormat(\"MMM d yyyy h a\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            s \u003d  newFormat.format(df.parse(by));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            pe.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return the date of the deadline."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String getDate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.by.split(\" \")[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + parseDate(this.by) + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 59
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * Constructs Dialog box for the users."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param text GUI text for the dialog box."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param img GUI image for the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return a dialog box for the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * Constructs a dialog box for Duke."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param text the GUI text for the dialog box."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param img the GUI image for the Duke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return a dialog box for Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 71
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private TaskList tasklist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private String allInst;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * initialises Storage and TaskList classes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param filePath file to be read / written to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            storage.readFileContents();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Duke() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String getGreet() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return ui.greeting();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * takes in user input as string and output it as task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param input takes in user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return the reply by bot in task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            s \u003d parser.scan(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuayijing": 46,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert message !\u003d null : \"No error message to print out\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * returns the toString of Event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param description is the name of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param at to be done on this date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert description !\u003d null : \" no date and timing for this event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert at !\u003d null : \" no date and timing for this event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String getAt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param at takes in the event\u0027s date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return it as MMM d yyyy."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String parseDate(String at) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert at !\u003d null : \" no date and timing available\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            DateFormat newFormat \u003d new SimpleDateFormat(\"MMM d yyyy h a\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            s \u003d  newFormat.format(df.parse(at));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            pe.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return the date of the event."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String getDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.at.split(\" \")[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + parseDate(at) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 56
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * returns the toString of Events"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param description is the name of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param at to be done on this date"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert description !\u003d null : \" no date and timing for this event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert at !\u003d null : \" no date and timing for this event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String getAt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @param at takes in the event\u0027s date"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return it as MMM d yyyy"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    String date(String at) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert at !\u003d null : \" no date and timing available\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            DateFormat newFormat \u003d new SimpleDateFormat(\"MMM d yyyy h a\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            s \u003d  newFormat.format(df.parse(at));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            pe.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date(at) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 49
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greet();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/distracted.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/redFemale.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String response \u003d duke.getGreet();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 57
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " *  makes sense of the user command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Storage storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Parser() throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * scanner scan task\u0027s instruction and run accordingly"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @throws DukeException when users input task which bot does not understand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String scan(String command) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            if(command.startsWith(\"bye\", 0)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList allTask \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                List\u003cTask\u003e tasks \u003d allTask.getDoneTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                storage.load(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d ui.bye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"view\", 0)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList schedule \u003d new TaskList(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d schedule.view();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"date\", 0)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList schedule \u003d new TaskList(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d schedule.date();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"find\", 0)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList task \u003d new TaskList(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d task.find();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"delete\", 0)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList task \u003d new TaskList(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d task.delete();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (!command.startsWith(\"view\", 0)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    \u0026\u0026 !command.startsWith(\"todo\", 0)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    \u0026\u0026 !command.startsWith(\"deadline\", 0)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    \u0026\u0026 !command.startsWith(\"event\", 0)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    \u0026\u0026 !command.startsWith(\"done\", 0)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    \u0026\u0026 !command.startsWith(\"list\", 0)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    \u0026\u0026 !command.startsWith(\"delete\", 0)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                throw new DukeException(\" ))-: OOPS!!! I\u0027m sorry, \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                        + \"but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"todo\", 0)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList task \u003d new TaskList(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d task.toDo();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"deadline\", 0)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList task \u003d new TaskList(command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d task.deadLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"event\", 0)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList task \u003d new TaskList(command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d task.event();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"done\", 0)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList task \u003d new TaskList(command);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d task.done();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            } else if (command.startsWith(\"list\", 0)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                TaskList task \u003d new TaskList(command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                toPrint \u003d task.printList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 78
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " *deals with loading tasks from the file and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * saving tasks in the file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private List\u003cString\u003e allInstructions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private List\u003cTask\u003e doneTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        if (!this.file.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            this.file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    TaskList readFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            String instruction \u003d s.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            String[] arr \u003d instruction.split(\"\\\\|\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            if (arr[0].equals(\"E \")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                Event e \u003d new Event(arr[2].trim(), arr[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if (Integer.parseInt(arr[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    e.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                doneTasks.add(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            if (arr[0].equals(\"T \")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                Todo t \u003d new Todo(arr[2].trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if (Integer.parseInt(arr[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                doneTasks.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            if (arr[0].equals(\"D \")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                Deadline d \u003d new Deadline(arr[2].trim(), arr[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if (Integer.parseInt(arr[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    d.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                doneTasks.add(d);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        tasklist.setTask(doneTasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * run through all the tasks and prints it out in .txt file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void load(List\u003cTask\u003e doneTasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            String tasks \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            for (int i \u003d 0; i \u003c doneTasks.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                Task t \u003d doneTasks.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if (t instanceof Todo) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    tasks +\u003d \"T | \" + t.getIsTaskDone() + \" | \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            +  t.getDescription()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            + System.lineSeparator();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if (t instanceof  Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    tasks +\u003d \"D | \" + t.getIsTaskDone() + \" | \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            + t.getDescription() + \"| \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            + d.getBy() + System.lineSeparator();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if (t instanceof Event) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    tasks +\u003d \"E | \" + t.getIsTaskDone() + \" | \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            + t.getDescription() + \"| \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            + e.getAt() + System.lineSeparator();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            writeToFile(filePath, tasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            System.out.println(\" Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 101
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * contains information whether the task is done or not."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     * @return return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public int getIsTaskDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.getStatusIcon();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 34
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * TaskList reads and do all the instructions, and returns them as Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private List\u003cString\u003e allInstructions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    static List\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    private int counter \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.allInstructions \u003d allInstructions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public TaskList(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.allInstructions \u003d allInstructions;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String convertToString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//        return allInstructions.stream().map(i -\u003e i)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        for (int i\u003d0; i\u003callInstructions.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            s +\u003d allInstructions.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//    public List\u003cTask\u003e convertToTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//        for (int i\u003d0; i\u003callInstructions.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//            String instruction \u003d allInstructions.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//            String[] arr \u003d instruction.split(\" | \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//            if (arr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public List\u003cTask\u003e getDoneTasks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return this.store;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void setTask(List\u003cTask\u003e i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        this.store \u003d i;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String delete() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        int num \u003d Integer.parseInt(description.split(\" \")[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert (num\u003e\u003d1 \u0026\u0026 num\u003c\u003dstore.size()) : \"This task does not exists\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.remove(store.get(num - 1)) + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        store.remove(num - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        toPrint +\u003d ui.storeSize(store.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String toDo() throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        if (description.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            String todo \u003d description.substring(5);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            Task taskDo \u003d new Todo(todo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            store.add(taskDo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            String toPrint \u003d ui.gotIt() + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            toPrint +\u003d taskDo.toString() + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            toPrint +\u003d ui.storeSize(store.size());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            return toPrint;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            throw new DukeException(\"))-: OOPS!!! The description of a todo\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    + \" cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String deadLine() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String by \u003d description.split(\"/\")[1].substring(3);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        by +\u003d \"/\" +description.split(\"/\")[2] + \"/\" + description.split(\"/\")[3];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String d \u003d description.split(\"/\")[0].substring(9);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Task deadline \u003d new Deadline(d, by);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        store.add(deadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.gotIt() + \"\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        toPrint +\u003d deadline.toString() + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        toPrint +\u003d ui.storeSize(store.size());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String event() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String at \u003d description.split(\"/\")[1].substring(3);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        at +\u003d \"/\" +description.split(\"/\")[2] + \"/\" + description.split(\"/\")[3];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String d \u003d description.split(\"/\")[0].substring(6);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Task event \u003d new Event(d, at);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        store.add(event);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.gotIt() + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        toPrint +\u003d event.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        toPrint +\u003d \"\\n\" + ui.storeSize(store.size());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String done() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        int num \u003d Integer.parseInt(description.split(\" \")[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert (num \u003e\u003d1 \u0026\u0026 num\u003c\u003d store.size()) : \"This task does not exists\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Task t \u003d store.get(num - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.doneTask() + \"\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        toPrint +\u003d t.toString();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String find() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.matchingTask() + \"\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String matching \u003d description.substring(5);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert (matching !\u003d \"\") : \"user needs to input\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        toPrint  +\u003d store.stream()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                .filter( s -\u003e s.getDescription().contains(matching))"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                .map(Task::toString)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String date \u003d description.substring(5);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.date(date) + \"\\n\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        for(int i\u003d0; i\u003cstore.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            Task t\u003d store.get(i);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if(e.getDate().equals(date)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    toPrint +\u003d e.toString() + \"\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                if(d.getDate().equals(date)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    toPrint +\u003d d.toString() + \"\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String view() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        List\u003cTodo\u003e td \u003d new ArrayList\u003cTodo\u003e();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        List\u003cDeadline\u003e dl \u003d new ArrayList\u003cDeadline\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        List\u003cEvent\u003e evt \u003d new ArrayList\u003cEvent\u003e();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String taskToView \u003d description.substring(5);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.view(taskToView) + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        if (taskToView.equals(\"todo\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            toPrint +\u003d store.stream()"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            .filter( s -\u003e { return s instanceof Todo;})"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            .map(Task::toString)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                            .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        if (taskToView.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            toPrint +\u003d store.stream()"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    .filter( s -\u003e {return s instanceof Deadline;})"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    .map(Task::toString)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        if (taskToView.equals(\"event\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            toPrint +\u003d store.stream()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    .filter( s -\u003e {return s instanceof Event;})"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    .map(Task::toString)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                    .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        String toPrint \u003d ui.taskList();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            toPrint +\u003d \"\\n\" + counter + \". \" + store.get(i).toString();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            assert store.get(i) !\u003d null : \"No task available\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 189
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assert description !\u003d null : \"No description for this deadline\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuayijing": 13
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " * deals with interactions with the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String greeting() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Hello! I\u0027m Duke\\n What can i do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String view(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"These are all your tasks for \" + input + \":\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String date(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"These are all your tasks on \" + input + \":\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String gotIt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String remove(Task t) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n \" + t;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String storeSize(int num) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Now you have \" + num + \" tasks in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String doneTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String taskList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public String matchingTask() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        return \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"380.0\" prefWidth\u003d\"380\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow \u003d \"ALWAYS\" \u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            \u003cFont name \u003d \"Verdana\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void testTaskDate() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Deadline d \u003d new Deadline(\"deadline\", \"31/01/2020 1800\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assertEquals(\"31/01/2020 1800\", d.getBy());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void testDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Deadline d \u003d new Deadline(\"deadline\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assertEquals(\"Dec 2 2019 6 PM\", d.getDate(\"2/12/2019 1800\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 17
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void testTaskDone() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Task t \u003d new Task(\"todo run\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assertEquals(0, t.getIsTaskDone());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuayijing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    public void testDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        Task t \u003d new Task(\"todo work\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "        assertEquals(\"todo work\", t.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuayijing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuayijing": 17
    }
  }
]
