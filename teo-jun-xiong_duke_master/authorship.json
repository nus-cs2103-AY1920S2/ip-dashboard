[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "main.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for main.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "group \u0027Duke.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 37,
      "-": 18
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents the exception when unsupported commands are entered."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class InvalidCommandArgumentException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public InvalidCommandArgumentException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 10
    }
  },
  {
    "path": "src/main/java/exception/InvalidTaskDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an exception when an invalid index is accessed in creating a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class InvalidTaskDateTimeException extends ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public InvalidTaskDateTimeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 10
    }
  },
  {
    "path": "src/main/java/exception/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an exception when there is missing date or time in commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class MissingDateTimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public MissingDateTimeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 10
    }
  },
  {
    "path": "src/main/java/exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an exception when a description is missing in the command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class MissingDescriptionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public MissingDescriptionException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 10
    }
  },
  {
    "path": "src/main/java/exception/TaskListIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents the exception that occurs when an invalid element in TaskList is accessed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class TaskListIndexOutOfBoundsException extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public TaskListIndexOutOfBoundsException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 10
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * gui.Main driver class for main.Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static TaskList dl;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Driver method for main.Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Retrieves list from stored data if available, else start a new list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * The util.task.TaskList is then parsed with using input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            dl \u003d Storage.retrieveTasks();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (FileNotFoundException | ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            dl \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private String executeCommand(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return Parser.parse(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return executeCommand(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 40,
      "-": 2
    }
  },
  {
    "path": "src/main/java/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import main.gui.Main;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 13
    }
  },
  {
    "path": "src/main/java/main/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package main.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.SnapshotParameters;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.image.WritableImage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Rectangle clip \u003d new Rectangle("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                100.0, 100.0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        clip.setArcWidth(100);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        clip.setArcHeight(100);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // snapshot the rounded image."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SnapshotParameters parameters \u003d new SnapshotParameters();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        parameters.setFill(Color.TRANSPARENT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        WritableImage image \u003d new ImageView(img).snapshot(parameters, null);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // apply a shadow effect."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        displayPicture.setEffect(new DropShadow(5, Color.GRAY));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 82
    }
  },
  {
    "path": "src/main/java/main/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package main.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import main.Duke;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A GUI for main.Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            FXMLLoader fxmlLoader;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        duke.init();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 36
    }
  },
  {
    "path": "src/main/java/main/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package main.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import main.Duke;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.DukeUiString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Controller for gui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pic1.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pic2.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                0, DialogBox.getDukeDialog(DukeUiString.HELLO, dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing main.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String input \u003d userInput.getText().trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (input.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            delay.setOnFinished( event -\u003e Platform.exit() );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 67
    }
  },
  {
    "path": "src/main/java/util/DukeConstant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class DukeConstant {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DELIMITER_WHITESPACE \u003d \" \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DELIMITER_COMMA \u003d \",\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DELIMITER_DATE \u003d \"/\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DELIMITER_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DELIMITER_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    //"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String TICK_ICON \u003d \"\\u2714\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String CROSS_ICON \u003d \"\\u274C\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    // Used in util.task.DeadlineTask#createDeadlineTask and util.task.EventTask#createEventTask"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int TASK_HOUR_START_INDEX \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int TASK_HOUR_END_INDEX \u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int DATE_DAY_INDEX \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int DATE_MONTH_INDEX \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int DATE_YEAR_INDEX \u003d 2;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int DAY_ONE \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int DAY_TWO \u003d 2;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final int DAY_THREE \u003d 3;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DAY_FIRST \u003d \"st\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DAY_SECOND \u003d \"nd\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DAY_THIRD \u003d \"rd\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DAY_NTH \u003d \"th\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    // Used in Parser#parse"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String SAVE_COMMAND \u003d \"save\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String CLEAR_COMMAND \u003d \"clear\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String SCHEDULE_COMMAND \u003d \"schedule\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String HELP_COMMAND \u003d \"help\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    // Used in Storage#stringToDate"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String JAN_STRING \u003d \"Jan\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String JAN_NUM \u003d \"01\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String FEB_STRING \u003d \"Feb\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String FEB_NUM \u003d \"02\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String MAR_STRING \u003d \"Mar\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String MAR_NUM \u003d \"03\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String APR_STRING \u003d \"Apr\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String APR_NUM \u003d \"04\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String MAY_STRING \u003d \"May\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String MAY_NUM \u003d \"05\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String JUN_STRING \u003d \"Jun\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String JUN_NUM \u003d \"06\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String JUL_STRING \u003d \"Jul\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String JUL_NUM \u003d \"07\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String AUG_STRING \u003d \"Aug\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String AUG_NUM \u003d \"08\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String SEP_STRING \u003d \"Sep\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String SEP_NUM \u003d \"09\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String OCT_STRING \u003d \"Oct\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String OCT_NUM \u003d \"10\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String NOV_STRING \u003d \"Nov\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String NOV_NUM \u003d \"11\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DEC_STRING \u003d \"Dec\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DEC_NUM \u003d \"12\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 69
    }
  },
  {
    "path": "src/main/java/util/DukeUiString.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to abstract the frequently used Strings in main.Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class DukeUiString {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \"                 .-\\\"\\\"\\\"\\\"-.        .-\\\"\\\"\\\"\\\"-.\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                /        \\\\      /        \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"               /_        _\\\\    /_        _\\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"              // \\\\      / \\\\\\\\  // \\\\      / \\\\\\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"              |\\\\__\\\\    /__/|  |\\\\__\\\\    /__/|\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"               \\\\    ||    /    \\\\    ||    /\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                \\\\        /      \\\\        /\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                 \\\\ \\\\__/ /        \\\\ \\\\__/ /\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                  \u0027.__.\u0027          \u0027.__.\u0027\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                   |  |            |  |\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                   |  |            |  |\\n\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String HELLO \u003d DukeUiString.DIVIDER + DukeUiString.LOGO"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   Hello!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"\\n   What\u0027s up today?\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"\\n   Here are some commands that I can help you with:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"      list, clear, todo, deadline, event, bye, find...!\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"      Enter \\\"help\\\" to find out more!\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String ADDED \u003d \"   Got it! I\u0027ve added this task:\\n\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DIVIDER \u003d \"____________________________________________________________\\n\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DONE \u003d \"   Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DELETED \u003d \"   Alright, I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String BYE \u003d \"   Your current task list has been saved!\\n   Bye, hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String SAMPLE \u003d \"   For example:\\n      deadline Assignment /by 01/01/2000 1234\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String UI_BYE \u003d DukeUiString.DIVIDER + DukeUiString.BYE + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String UI_SAVE \u003d DukeUiString.DIVIDER + \"   Your list has been saved!\" + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String INVALID_DATE_TIME_FORMAT \u003d \"   The date and/or time format is invalid.\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DATE_TIME_FORMAT_EXAMPLE \u003d \"   Please format your input as: DD/MM/YYYY HHmm.\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String WRITE_ERROR_MESSAGE \u003d DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   Something went wrong with saving the file!\\n\" + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String DATE_TIME_ERROR_MESSAGE \u003d DukeUiString.DIVIDER + DukeUiString.INVALID_DATE_TIME_FORMAT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + DukeUiString.DATE_TIME_FORMAT_EXAMPLE + DukeUiString.SAMPLE + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String UI_CLEAR \u003d DukeUiString.DIVIDER + \"   Your tasks have been cleared!\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   The list is now empty.\\n\\n\" + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static final String UI_HELP \u003d DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ list                  Obtains a list of your tasks\\n\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ clear                 Empties your list of tasks\\n\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ todo description      Adds a ToDo task\\n\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ deadline description  Adds a Deadline task\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"      /by date\\n\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ event description     Adds an Event Task\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"      /at date\\n\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ done number           Marks a task as done, where\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                           number is greater than 0\\n\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ find keywords         Finds a list of tasks matching\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                           the string of words\\n\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ help                  Brings up this help section\\n\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   ~ bye                   Saves your list of tasks\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"                           and quit Duke\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 65
    }
  },
  {
    "path": "src/main/java/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import exception.InvalidCommandArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import exception.InvalidTaskDateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import exception.MissingDateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import exception.TaskListIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import main.Duke;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.DeadlineTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.EventTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.ToDoTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to accept and execute a user\u0027s commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Converts a Task\u0027s date to a String."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A String of the Task\u0027s deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static String dateToString(Date deadline) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"E HHmm, MMM d, YYYY\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String string \u003d format.format(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d string.split(DukeConstant.DELIMITER_COMMA);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        int day \u003d deadline.getDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (day \u003d\u003d DukeConstant.DAY_ONE) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d DukeConstant.DAY_FIRST;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else if (day \u003d\u003d DukeConstant.DAY_TWO) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d DukeConstant.DAY_SECOND;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else if (day \u003d\u003d DukeConstant.DAY_THREE) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d DukeConstant.DAY_THIRD;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d DukeConstant.DAY_NTH;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return arr[0] + \",\" + arr[1] + \",\" + arr[2];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Converts a String to a Date object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param parameter A String of dd/MM/yyyy hh:mm."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A Date parsed using the input String"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws ParseException if the String cannot be parsed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static Date stringToDate(String parameter) throws ParseException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert parameter !\u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy hh:mm\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d parameter.split(DukeConstant.DELIMITER_WHITESPACE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String hour \u003d arr[1].substring(DukeConstant.TASK_HOUR_START_INDEX, DukeConstant.TASK_HOUR_END_INDEX);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String minute \u003d arr[1].substring(DukeConstant.TASK_HOUR_END_INDEX);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] date \u003d arr[0].split(DukeConstant.DELIMITER_DATE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // Input date is too short/long"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (date.length !\u003d 3) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            throw new InvalidTaskDateTimeException(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String day \u003d date[DukeConstant.DATE_DAY_INDEX];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String month \u003d date[DukeConstant.DATE_MONTH_INDEX];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String year \u003d date[DukeConstant.DATE_YEAR_INDEX];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return format.parse(day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private static Date stringNoTimeToDate(String parameter) throws ParseException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert parameter !\u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] date \u003d parameter.split(DukeConstant.DELIMITER_DATE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // Input date is too short/long"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (date.length !\u003d 3) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            throw new InvalidTaskDateTimeException(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String day \u003d date[DukeConstant.DATE_DAY_INDEX];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String month \u003d date[DukeConstant.DATE_MONTH_INDEX];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String year \u003d date[DukeConstant.DATE_YEAR_INDEX];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return format.parse(day + \"/\" + month + \"/\" + year);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Parses and then executes a user\u0027s commands."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static String parse(String input) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String command \u003d Ui.readCommand(input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.HELP_COMMAND:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                sb.append(Ui.printHelp());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.LIST_COMMAND:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                sb.append(Ui.printList(Duke.dl));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.SAVE_COMMAND:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    Storage.writeTasks(Duke.dl);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printWriteErrorMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                sb.append(Ui.printSave());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.CLEAR_COMMAND:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                Duke.dl \u003d new TaskList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                sb.append(Ui.printClear());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.BYE_COMMAND:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    Storage.writeTasks(Duke.dl);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printWriteErrorMessage());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                sb.append(Ui.printBye());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.FIND_COMMAND:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String keywords \u003d Ui.readKeyword(input.substring(command.length()));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                TaskList found \u003d Duke.dl.find(keywords);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                sb.append(Ui.printFind(keywords, found));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.SCHEDULE_COMMAND:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String scheduleString \u003d Ui.readScheduleDate(input.substring(command.length()));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (scheduleString.length() !\u003d 10) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new InvalidTaskDateTimeException(\"   The date of the schedule is invalid.\\n\" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                \"   Please try again!\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    Date scheduleDate \u003d stringNoTimeToDate(scheduleString);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    TaskList schedule \u003d Duke.dl.findByDay(scheduleDate);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printList(schedule));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (InvalidTaskDateTimeException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printErrorMessage(e));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printDateTimeErrorMessage());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.DONE_COMMAND:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String str \u003d Ui.readTaskIndex(input.substring(command.length()));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (str.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new TaskListIndexOutOfBoundsException(\"   No index entered. Please try again.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    int index \u003d Integer.parseInt(str) - 1;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (index \u003c 0) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new TaskListIndexOutOfBoundsException(\"   Invalid index entered. Please try again.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (index \u003e\u003d Duke.dl.listSize()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new TaskListIndexOutOfBoundsException("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                \"   There are only \" + Duke.dl.listSize() + \" items in the list!\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    Duke.dl \u003d Duke.dl.setDone(index);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printDone(Duke.dl, index));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (TaskListIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printErrorMessage(e));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.DELETE_COMMAND:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String delete \u003d Ui.readTaskIndex(input.substring(command.length()));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (delete.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new TaskListIndexOutOfBoundsException(\"   No index entered. Please try again.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    int index \u003d Integer.parseInt(delete) - 1;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (index \u003c 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new TaskListIndexOutOfBoundsException(\"   Invalid index entered. Please try again.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (index \u003e\u003d Duke.dl.listSize()) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new TaskListIndexOutOfBoundsException("
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                \"   There are only \" + Duke.dl.listSize() + \" items in the list!\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    Duke.dl \u003d Duke.dl.deleteTask(index);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printDelete(Duke.dl, index));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (TaskListIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printErrorMessage(e));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.TODO_COMMAND:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.EVENT_COMMAND:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String description \u003d Ui.readTaskDescription(input.substring(command.length()));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    if (description.replace(\"\\n\", \"\").replace(\" \", \"\").length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new MissingDescriptionException(\"The description of a \" + command"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                + \" cannot be empty.\\n   Please try again!\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        Task task;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (command.equals(DukeConstant.TODO_COMMAND)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            task \u003d new ToDoTask(description, false);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            if (!description.contains(DukeConstant.DELIMITER_BY)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    \u0026\u0026 !description.contains(DukeConstant.DELIMITER_AT)) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                throw new MissingDateTimeException(\"   Missing \\\"/by\\\" or \\\"/at\\\" in task description.\\n   Please try again.\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            String[] arr \u003d description.split(\"/by|/at\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            if (arr.length \u003d\u003d 0 || arr[1].split(DukeConstant.DELIMITER_WHITESPACE).length !\u003d 3) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                throw new MissingDateTimeException(\"   The date and time of the \""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                        + command + \" is missing.\\n   Please try again!\\n\\n\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                        + DukeUiString.SAMPLE);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            String[] splitting \u003d arr[1].trim().split(DukeConstant.DELIMITER_WHITESPACE);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            String parameter \u003d splitting[0] + \" \" + splitting[1];"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            Date deadline \u003d stringToDate(parameter);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            task \u003d command.equals(DukeConstant.DEADLINE_COMMAND)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    ? DeadlineTask.createDeadlineTask(arr[0], deadline)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    : EventTask.createEventTask(arr[0], deadline);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        Duke.dl \u003d Duke.dl.addToList(task);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        sb.append(Ui.printTaskAdded(Duke.dl, task));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (MissingDescriptionException | MissingDateTimeException | InvalidTaskDateTimeException e) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printErrorMessage(e));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printDateTimeErrorMessage());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    throw new InvalidCommandArgumentException(\"   Hey, I can\u0027t do that for you. \" +"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            \"\\n   I don\u0027t know \" + input + \"...\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (InvalidCommandArgumentException e) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sb.append(Ui.printErrorMessage(e));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(sb.toString());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 278
    }
  },
  {
    "path": "src/main/java/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.ToDoTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to write to and read from a text file containing Strings of the Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private static final File filePath \u003d new File(\"myTasks.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Writes Tasks to a text file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param dl A TaskList containing the current Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws IOException if the file cannot be found."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static void writeTasks(TaskList dl) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert dl !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(Storage.filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        for (int i \u003d 0; i \u003c dl.listSize(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String string \u003d dl.printTask(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            char taskType \u003d string.charAt(1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            int isComplete \u003d dl.isTaskDone(i) ? 1 : 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String[] arr \u003d string.split(\"\\\\(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String taskDescription \u003d arr[0].substring(8).trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String taskInString \u003d taskType + \" | \" + isComplete + \" | \" + taskDescription;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (Character.toUpperCase(taskType) !\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String time \u003d arr[1].split(\":\")[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                time \u003d time.trim().substring(0, time.length() - 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                taskInString +\u003d \" | \" + time;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            taskInString +\u003d \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            sb.append(taskInString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        fw.write(sb.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Retrieves a previous TaskList from a text file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A TaskList updated with the Tasks from the text file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws FileNotFoundException if the file cannot be found."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws ParseException        if the date and time cannot be parsed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static TaskList retrieveTasks() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Scanner sc \u003d new Scanner(Storage.filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String[] details \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            boolean isTaskDone \u003d Integer.parseInt(details[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (details[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                dl.addToList(new ToDoTask(details[2].trim(), isTaskDone));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String dateTime \u003d stringToDate(details[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                Date deadline \u003d Parser.stringToDate(dateTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                if (details[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    dl.addToList(EventTask.createEventTask(details[2].trim(), deadline));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    dl.addToList(DeadlineTask.createDeadlineTask(details[2].trim(), deadline));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Converts a String to a Date used in creating Tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param detail A String of the details of a Task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A Date."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public  static String stringToDate(String detail) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert detail !\u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d detail.trim().split(\", \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String time \u003d arr[0].split(\" \")[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String year \u003d arr[2].substring(0, 4);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] dayMonth \u003d arr[1].split(\" \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String day \u003d dayMonth[1].length() \u003d\u003d 3 ? \"0\" + dayMonth[1].substring(0, 1) : dayMonth[1].substring(0, 2);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String month \u003d dayMonth[0];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.JAN_STRING:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.JAN_NUM;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.FEB_STRING:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.FEB_NUM;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.MAR_STRING:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.MAR_NUM;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.APR_STRING:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.APR_NUM;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.MAY_STRING:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.MAY_NUM;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.JUN_STRING:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.JUN_NUM;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.JUL_STRING:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.JUL_NUM;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.AUG_STRING:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.AUG_NUM;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.SEP_STRING:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.SEP_NUM;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.OCT_STRING:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.OCT_NUM;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.NOV_STRING:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.NOV_NUM;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case DukeConstant.DEC_STRING:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d DukeConstant.DEC_NUM;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return day + \"/\" + month + \"/\" + year + \" \" + time;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 145
    }
  },
  {
    "path": "src/main/java/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to handle interactions with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * It prints responses to a user\u0027s command or input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String readCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return input.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printList(TaskList dl) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert dl !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + dl.printList()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"\\n\" + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printBye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.UI_BYE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String readTaskIndex(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return input.trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printDone(TaskList dl, int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert dl !\u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeUiString.DONE"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"      \" + dl.printTask(index)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + e.getMessage() + \"\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String readTaskDescription(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return input.trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String readKeyword(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return input.trim().toLowerCase();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printTaskAdded(TaskList dl, Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert dl !\u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeUiString.ADDED"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"      \" + task.toString()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"\\n\\n   Now you have \" + dl.listSize()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + (dl.listSize() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" in the list.\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printDateTimeErrorMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.DATE_TIME_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printDelete(TaskList dl, int index) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert dl !\u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeUiString.DELETED + \"      \" + dl.printTask(index)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"\\n   Now you have \" + dl.listSize()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + (dl.listSize() - 1 \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" in the list.\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printWriteErrorMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.WRITE_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printFind(String keywords, TaskList found) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert keywords !\u003d null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert found !\u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.DIVIDER"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"   Here are the tasks with \" + keywords + \" in them:\\n\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + found.printList()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"\\n\" + DukeUiString.DIVIDER;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static String printClear() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.UI_CLEAR;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static String printHelp() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.UI_HELP;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static String readScheduleDate(String input) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return input.trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static String printSave() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return DukeUiString.UI_SAVE;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 115
    }
  },
  {
    "path": "src/main/java/util/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents a task with a deadline when it is due."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A deadline task has a description, a deadline date, and a true or false on whether it is completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    Date deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a util.task.DeadlineTask object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param isDone      The boolean variable on whether the deadline task is completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param deadline    The due Date of the deadline task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private DeadlineTask(String description, boolean isDone, Date deadline) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Static method to create a util.task.DeadlineTask object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Throws an exception if the input text is not in the required format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the deadline task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param deadline    The Date object of the date and time of the deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A util.task.DeadlineTask."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static DeadlineTask createDeadlineTask(String description, Date deadline) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert deadline !\u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new DeadlineTask(description.trim(), false, deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets this util.task.DeadlineTask\u0027s complete status to true."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Overrides the abstract method in util.Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new complete util.task.DeadlineTask with the same description, deadline as the util.task.DeadlineTask instance."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public DeadlineTask completeTask() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new DeadlineTask(this.description, true, this.deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return \"[D] [\" + super.getStatusIcon() + \"] \" + this.description"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" (by: \" + Parser.dateToString(this.deadline) + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 57
    }
  },
  {
    "path": "src/main/java/util/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * An event has a description, a date, and a true or false on whether it is completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    Date deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a util.task.EventTask object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param isDone      The boolean variable on whether the event is completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param deadline    The due Date of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private EventTask(String description, boolean isDone, Date deadline) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Static method to create an util.task.EventTask object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Throws an exception if the input text is not in the required format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param deadline    The String of the date and time of the event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return An Event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public static EventTask createEventTask(String description, Date deadline) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert deadline !\u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new EventTask(description.trim(), false, deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets this util.task.EventTask\u0027s complete status to true."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Overrides the abstract method in util.task.Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new complete util.task.EventTask with the same description, deadline as the util.task.EventTask instance."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public EventTask completeTask() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new EventTask(this.description, true, this.deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return \"[E] [\" + super.getStatusIcon() + \"] \" + this.description"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" (at: \" + Parser.dateToString(this.deadline) + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 57
    }
  },
  {
    "path": "src/main/java/util/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.DukeConstant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an abstract class, util.task.Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A util.task.Task has a description and a complete status."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a util.task.Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description A String description of the util.task.Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param isDone      A boolean on whether the util.task.Task is complete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * An abstract task to complete the util.task.Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A completed util.task.Task with the same description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public abstract Task completeTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Obtain a status icon, depending on the complete status."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A String status icon."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return (isDone ? DukeConstant.TICK_ICON : DukeConstant.CROSS_ICON); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public boolean getCompletionStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public boolean match(String keywords) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert keywords !\u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.description.toLowerCase().contains(keywords);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 48
    }
  },
  {
    "path": "src/main/java/util/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents a list of Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates an empty util.task.TaskList with no tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a copy of the util.task.TaskList with the same list of Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param dl A util.task.TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private TaskList(TaskList dl) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.list \u003d dl.list;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Adds a Task to a util.task.TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param task The Task to be added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new util.task.TaskList with the added Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public TaskList addToList(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dl.list.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Checks whether a Task is complete."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param index The index of the Task to be checked."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A boolean of whether the Task has been completed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public boolean isTaskDone(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.list.get(index).getCompletionStatus();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Prints all the Tasks in the util.task.TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (this.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            sb.append(\"   The list is empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            sb.append(\"      \").append(i).append(\". \").append(list.get(i - 1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (i !\u003d list.size()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets a Task to be completed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param index The index of the Task to be completed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new util.task.TaskList with the updated Task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public TaskList setDone(int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList(this);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dl.list.set(index, this.list.get(index).completeTask());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String printTask(int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.list.get(index).toString() + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public int listSize() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Deletes a Task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param index The index of the Task to be deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new util.task.TaskList without the deleted Task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public TaskList deleteTask(int index) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList(this);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dl.list.remove(index);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Finds all the Tasks that contain the keyword(s)."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param keywords A String of keywords."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A util.task.TaskList containing all the matching Tasks."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public TaskList find(String keywords) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assert keywords !\u003d null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList found \u003d new TaskList();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (task.match(keywords)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                found \u003d found.addToList(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     public TaskList findByDay(Date date) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList temp \u003d new TaskList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        for (Task t : this.list) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (t instanceof DeadlineTask || t instanceof EventTask) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                Date tDate \u003d t instanceof DeadlineTask ? ((DeadlineTask) t).deadline : ((EventTask) t).deadline;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                if (date.getYear() \u003d\u003d tDate.getYear() \u0026\u0026 date.getMonth() \u003d\u003d tDate.getMonth()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        \u0026\u0026 date.getDay() \u003d\u003d tDate.getDay()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    temp \u003d temp.addToList(t);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 138
    }
  },
  {
    "path": "src/main/java/util/task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "package util.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents a to do task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A to do task has a description, and a true or false on whether it is completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public ToDoTask(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets this util.task.ToDoTask\u0027s complete status to true."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Overrides the abstract method in util.Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new complete util.task.ToDoTask with the same description, deadline as the util.task.ToDoTask instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public ToDoTask completeTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new ToDoTask(this.description, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return \"[T] [\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 28
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"680.0\" prefWidth\u003d\"0.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \u003cInsets left\u003d\"6.0\" right\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \u003cFont name\u003d\"Consolas\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \u003cInsets right\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"3.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 29
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"700.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"main.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"624.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"624.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"556.0\" prefWidth\u003d\"700.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 23
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import exception.InvalidTaskDateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class DeadlineTaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateDeadlineTask_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // 1234 becomes 0034"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assertEquals(\"[D] [] Buy birthday present (by: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                DeadlineTask.createDeadlineTask(\"Buy birthday present\",  new Date(2000, 9, 9, 23, 45)).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateDeadlineTask_invalidDate_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"[D] [] Buy birthday present (by: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    DeadlineTask.createDeadlineTask(\"Buy birthday present\",  new Date(2000, 9, 9, 23, 45)).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (InvalidTaskDateTimeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 31
    }
  },
  {
    "path": "src/test/java/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import exception.InvalidTaskDateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import util.task.EventTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class EventTaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateEventTask_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // 1234 becomes 0034"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assertEquals(\"[E] [] Birthday (at: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                EventTask.createEventTask(\"Birthday\", new Date(2000, 9, 9, 23, 45)).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateEventTask_invalidDate_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"[E] [] Birthday (by: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    EventTask.createEventTask(\"Birthday\",  new Date(2000, 9, 9, 23, 45)).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (InvalidTaskDateTimeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 31
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                  M\"\"\"\"\"\"\"`YM\"\"MMMMM\"\"MP\"\"\"\"\"\"`MM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                  M  mmmm.  M  MMMMM  M  mmmmm..M"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          .d8888b.M  MMMMM  M  MMMMM  M.      `YM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          88\u0027  `88M  MMMMM  M  MMMMM  MMMMMMM.  M"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          88.  .88M  MMMMM  M  `MMM\u0027  M. .MMM\u0027  M"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          `88888P\u0027M  MMMMM  Mb       dMb.     .dM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Hello!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   The oNUS is on me to help you be productive! (\u003e‿◠)✌"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "      [T] [?]  borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Now you have 1 task in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   1. [T] [?]  borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "      [D] [?]  return book (by Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "      [E] [?] event project meeting (at Mon 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "javac  -cp C:\\Users\\teoju\\IdeaProjects\\duke\\src -Xlint:none -d C:\\Users\\teoju\\IdeaProjects\\duke\\bin C:\\Users\\teoju\\IdeaProjects\\duke\\src\\main\\java\\*.java --release 8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "java -classpath C:\\Users\\teoju\\IdeaProjects\\duke\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 21
    }
  }
]
