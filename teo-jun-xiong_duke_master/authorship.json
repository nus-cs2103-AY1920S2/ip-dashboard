[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "group \u0027Duke.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 23,
      "-": 18
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents a task with a deadline when it is due."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A deadline task has a description, a deadline date, and a true or false on whether it is completed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a DeadlineTask object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param isDone      The boolean variable on whether the deadline task is completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param deadline    The due Date of the deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private DeadlineTask(String description, boolean isDone, Date deadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Static method to create a DeadlineTask object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Throws an exception if the input text is not in the required format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param text        The String of the date and time of the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A DeadlineTask."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws ParseException if parsing of String into Date fails"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static DeadlineTask createDeadlineTask(String description, String text) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy hh:mm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d text.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String hour \u003d arr[1].substring(0, 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String minute \u003d arr[1].substring(2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] date \u003d arr[0].split(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (date.length !\u003d 3) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            throw new InvalidTaskDateTimeException(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String day \u003d date[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String month \u003d date[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String year \u003d date[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Date deadline \u003d format.parse(day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new DeadlineTask(description, false, deadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Converts a DeadlineTask\u0027s deadline to a String."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A String of the DeadlineTask\u0027s deadline."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private String deadlineToString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"E HHmm, MMM d, YYYY\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String string \u003d format.format(deadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d string.split(\",\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        int day \u003d deadline.getDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (day \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"st\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else if (day \u003d\u003d 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"nd\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else if (day \u003d\u003d 3) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"rd\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"th\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return arr[0] + \",\" + arr[1] + \",\" + arr[2];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets this DeadlineTask\u0027s complete status to true."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Overrides the abstract method in Task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new complete DeadlineTask with the same description,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * deadline as the DeadlineTask instance."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    DeadlineTask completeTask() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new DeadlineTask(this.description, true, this.deadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return \"[D] [\" + super.getStatusIcon() + \"] \" + this.description"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" (by: \" + this.deadlineToString() + \")\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 94
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Main driver class for Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Driver method for Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Retrieves list from stored data if available, else start a new list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * The TaskList is then parsed with using input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private static void run() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            dl \u003d Storage.retrieveTasks();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (FileNotFoundException | ParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            dl \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Parser.parse(dl);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.HELLO);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 25,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeStringFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to abstract the frequently used Strings in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class DukeStringFormat {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \"                  M\\\"\\\"\\\"\\\"\\\"\\\"\\\"`YM\\\"\\\"MMMMM\\\"\\\"MP\\\"\\\"\\\"\\\"\\\"\\\"`MM\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    \"                  M  mmmm.  M  MMMMM  M  mmmmm..M\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    \"          .d8888b.M  MMMMM  M  MMMMM  M.      `YM\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    \"          88\u0027  `88M  MMMMM  M  MMMMM  MMMMMMM.  M\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    \"          88.  .88M  MMMMM  M  `MMM\u0027  M. .MMM\u0027  M\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    \"          `88888P\u0027M  MMMMM  Mb       dMb.     .dM\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    \"                  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static final String HELLO \u003d DukeStringFormat.DIVIDER + DukeStringFormat.LOGO"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + \"   Hello!\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            \"\\n   The oNUS is on me to help you be productive!\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            + DukeStringFormat.DIVIDER;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static final String ADDED \u003d \"   Got it! I\u0027ve added this task:\\n\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static final String DIVIDER \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static final String DONE \u003d \"   Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static final String DELETED \u003d \"   Alright, I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static final String BYE \u003d \"   Your current task list has been saved!\\n   Bye, hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static final String SAMPLE \u003d \"   For example:\\n      deadline Assignment /by 01/01/2000 0000\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 25
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * An event has a description, a date, and a true or false on whether it is completed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a EventTask object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param isDone      The boolean variable on whether the event is completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param deadline    The due Date of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private EventTask(String description, boolean isDone, Date deadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Static method to create an EventTask object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Throws an exception if the input text is not in the required format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description The String description of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param text        The String of the date and time of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return An Event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws ParseException if parsing of String into Date fails"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static EventTask createEventTask(String description, String text) throws ParseException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy hh:mm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d text.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String hour \u003d arr[1].substring(0, 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String minute \u003d arr[1].substring(2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] date \u003d arr[0].split(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (date.length !\u003d 3) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            throw new InvalidTaskDateTimeException(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String day \u003d date[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String month \u003d date[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String year \u003d date[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Date deadline \u003d format.parse(day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new EventTask(description, false, deadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Converts an EventTask\u0027s date to a String."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A String of the EventTask\u0027s deadline."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private String deadlineToString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"E HHmm, MMM d, YYYY\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String string \u003d format.format(deadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d string.split(\",\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        int day \u003d deadline.getDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (day \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"st\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else if (day \u003d\u003d 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"nd\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else if (day \u003d\u003d 3) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"rd\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            arr[1] +\u003d \"th\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return arr[0] + \",\" + arr[1] + \",\" + arr[2];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets this EventTask\u0027s complete status to true."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Overrides the abstract method in Task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new complete EventTask with the same description,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * deadline as the EventTask instance."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    EventTask completeTask() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new EventTask(this.description, true, this.deadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return \"[E] [\" + super.getStatusIcon() + \"] \" + this.description"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" (at: \" + this.deadlineToString() + \")\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 94
    }
  },
  {
    "path": "src/main/java/InvalidCommandArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents the exception when unsupported commands are entered."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class InvalidCommandArgumentException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    InvalidCommandArgumentException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 8
    }
  },
  {
    "path": "src/main/java/InvalidTaskDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an exception when an invalid index is accessed in creating a Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "public class InvalidTaskDateTimeException extends ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    InvalidTaskDateTimeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 8
    }
  },
  {
    "path": "src/main/java/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an exception when there is missing date or time in commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class MissingDateTimeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    MissingDateTimeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 8
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an exception when a description is missing in the command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class MissingDescriptionException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    MissingDescriptionException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 8
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to accept and execute a user\u0027s commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Parses and then executes a user\u0027s commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param dl A TaskList containing the current Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static void parse(TaskList dl) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String command \u003d ui.readCommand(sc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                // Prints current list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    ui.printList(sc, dl);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    ui.printBye(sc);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    String keywords \u003d ui.readKeyword(sc);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    TaskList found \u003d dl.find(keywords);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    ui.printList(sc, found);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    String str \u003d ui.readTaskIndex(sc);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (str.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            throw new TaskListIndexOutOfBoundsException(\"   No index entered. Please try again.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        int index \u003d Integer.parseInt(str) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (index \u003c 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            throw new TaskListIndexOutOfBoundsException(\"   Invalid index entered. Please try again.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (index \u003e\u003d dl.listSize()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            throw new TaskListIndexOutOfBoundsException("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    \"   There are only \" + dl.listSize() + \" items in the list!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        dl \u003d dl.setDone(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        ui.printDone(dl, index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    } catch (TaskListIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        ui.printErrorMessage(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    String description \u003d ui.readTaskDescription(sc);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (description.replace(\"\\n\", \"\").replace(\" \", \"\").length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            throw new MissingDescriptionException(\"The description of a \" + command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    + \" cannot be empty.\\n   Please try again!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            Task task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                task \u003d new ToDoTask(description, false);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                if (!description.contains(\"/by\") \u0026\u0026 !description.contains(\"/at\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    throw new MissingDateTimeException(\"   Missing \\\"by\\\" or \\\"at\\\" in task description.\\n   Please try again.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                String[] arr \u003d description.split(\" /by| /at\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                if (arr.length \u003d\u003d 0 || arr[1].split(\" \").length !\u003d 3) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    throw new MissingDateTimeException(\"   The date and time of the \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                            + command + \" is missing.\\n   Please try again!\\n\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                            + DukeStringFormat.SAMPLE);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                String[] splitting \u003d arr[1].split(\" \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                String parameter \u003d splitting[0] + splitting[1] + \" \" + splitting[2];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                task \u003d command.equals(\"deadline\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                        ? DeadlineTask.createDeadlineTask(arr[0], parameter)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                        : EventTask.createEventTask(arr[0], parameter);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            dl \u003d dl.addToList(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            ui.printTaskAdded(dl, task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    } catch (MissingDescriptionException | MissingDateTimeException | InvalidTaskDateTimeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        ui.printErrorMessage(e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        ui.printDateTimeErrorMessage();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    String delete \u003d ui.readTaskIndex(sc);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (delete.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            throw new TaskListIndexOutOfBoundsException(\"   No index entered. Please try again.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        int index \u003d Integer.parseInt(delete) - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (index \u003c 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            throw new TaskListIndexOutOfBoundsException(\"   Invalid index entered. Please try again.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        if (index \u003e\u003d dl.listSize()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                            throw new TaskListIndexOutOfBoundsException("
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                    \"   There are only \" + dl.listSize() + \" items in the list!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        ui.printDelete(dl, index);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        dl \u003d dl.deleteTask(index);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    } catch (TaskListIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        ui.printErrorMessage(e);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        command \u003d command + sc.nextLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        throw new InvalidCommandArgumentException(\"   Hey, I can\u0027t do that for you. \" +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                                \"\\n   I don\u0027t know \" + command + \"...\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    } catch (InvalidCommandArgumentException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                        ui.printErrorMessage(e);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    Storage.writeTasks(dl);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    ui.printWriteErrorMessage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 161
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to write to and read from a text file containing Strings of the Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private static final File filePath \u003d new File(\"myTasks.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Writes Tasks to a text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param dl A TaskList containing the current Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws IOException if the file cannot be found."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static void writeTasks(TaskList dl) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(Storage.filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        for (int i \u003d 0; i \u003c dl.listSize(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String string \u003d dl.printTask(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            char taskType \u003d string.charAt(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            int isComplete \u003d dl.isTaskDone(i) ? 1 : 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String[] arr \u003d string.split(\"\\\\(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String taskDescription \u003d arr[0].substring(8).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String taskInString \u003d taskType + \" | \" + isComplete + \" | \" + taskDescription;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (Character.toUpperCase(taskType) !\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String time \u003d arr[1].split(\":\")[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                time \u003d time.trim().substring(0, time.length() - 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                taskInString +\u003d \" | \" + time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            taskInString +\u003d \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            sb.append(taskInString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        fw.write(sb.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Retrieves a previous TaskList from a text file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A TaskList updated with the Tasks from the text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws FileNotFoundException if the file cannot be found."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @throws ParseException        if the date and time cannot be parsed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    static TaskList retrieveTasks() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        Scanner sc \u003d new Scanner(Storage.filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            String[] details \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            boolean isTaskDone \u003d Integer.parseInt(details[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (details[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                dl.addToList(new ToDoTask(details[2], isTaskDone));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                String dateTime \u003d stringToDate(details[3]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                if (details[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    dl.addToList(EventTask.createEventTask(details[2], dateTime));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    dl.addToList(DeadlineTask.createDeadlineTask(details[2], dateTime));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Converts a String to a Date used in creating Tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param detail A String of the details of a Task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A Date."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private static String stringToDate(String detail) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] arr \u003d detail.trim().split(\", \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String time \u003d arr[0].split(\" \")[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String year \u003d arr[2];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String[] dayMonth \u003d arr[1].split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String day \u003d dayMonth[1].length() \u003d\u003d 3 ? \"0\" + dayMonth[1].substring(0, 1) : dayMonth[1].substring(0, 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        String month \u003d dayMonth[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Jan\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"01\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Feb\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"02\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Mar\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"03\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Apr\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"04\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"May\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"05\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Jun\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"06\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Jul\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"07\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Aug\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"08\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Sep\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"09\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Oct\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"10\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Nov\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"11\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            case \"Dec\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                month \u003d \"12\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return day + \"/\" + month + \"/\" + year + \" \" + time;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 133
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents an abstract class, Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A Task has a description and a complete status."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param description A String description of the Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param isDone      A boolean on whether the Task is complete."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * An abstract task to complete the Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A completed Task with the same description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    abstract Task completeTask();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Obtain a status icon, depending on the complete status."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A String status icon."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return (isDone ? \"\\u2714\" : \"\\u274C\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    boolean getCompletionStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    boolean match(String keywords) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.description.toLowerCase().contains(keywords);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 43
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents a list of Tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates an empty TaskList with no tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Creates a copy of the TaskList with the same list of Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param dl A TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    private TaskList(TaskList dl) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        this.list \u003d dl.list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Adds a Task to a TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param task The Task to be added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new TaskList with the added Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    TaskList addToList(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dl.list.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Checks whether a Task is complete."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param index The index of the Task to be checked."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A boolean of whether the Task has been completed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    boolean isTaskDone(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.list.get(index).getCompletionStatus();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Prints all the Tasks in the TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printList() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        if (this.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            System.out.println(\"   The list is empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            System.out.println(\"   \" + i + \". \" + list.get(i - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets a Task to be completed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param index The index of the Task to be completed."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new TaskList with the updated Task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    TaskList setDone(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList(this);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dl.list.set(index, this.list.get(index).completeTask());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String printTask(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.list.get(index).toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    int listSize() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Deletes a Task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param index The index of the Task to be deleted."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new TaskList without the deleted Task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    TaskList deleteTask(int index) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList dl \u003d new TaskList(this);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dl.list.remove(index);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Finds all the Tasks that contain the keyword(s)."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @param keywords A String of keywords."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A TaskList containing all the matching Tasks."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    TaskList find(String keywords) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        TaskList found \u003d new TaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            if (task.match(keywords)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                found \u003d found.addToList(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 110
    }
  },
  {
    "path": "src/main/java/TaskListIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents the exception that occurs when an invalid element in TaskList is accessed."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class TaskListIndexOutOfBoundsException extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    TaskListIndexOutOfBoundsException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 8
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * Represents a to do task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A to do task has a description, and a true or false on whether it is completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class ToDoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    ToDoTask(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Sets this ToDoTask\u0027s complete status to true."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * Overrides the abstract method in Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * @return A new complete ToDoTask with the same description,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     * deadline as the ToDoTask instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    ToDoTask completeTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return new ToDoTask(this.description, true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return \"[T] [\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 27
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * A class to handle interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " * It prints responses to a user\u0027s command or input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String readCommand(Scanner sc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return sc.next().toLowerCase();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printList(Scanner sc, TaskList dl) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        dl.printList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printBye(Scanner sc) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER + DukeStringFormat.BYE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String readTaskIndex(Scanner sc) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return sc.nextLine().trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printDone(TaskList dl, int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DONE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(\"      \" + dl.printTask(index));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + e.getMessage() + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String readTaskDescription(Scanner sc) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return sc.nextLine().trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    String readKeyword(Scanner sc) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        return sc.nextLine().trim().toLowerCase();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printTaskAdded(TaskList dl, Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.ADDED"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"      \" + task.toString()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"\\n\\n   Now you have \" + dl.listSize()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + (dl.listSize() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" in the list.\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printDateTimeErrorMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"   Please format your input as: DD/MM/YYYY HHmm.\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.SAMPLE"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printDelete(TaskList dl, int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.out.println(DukeStringFormat.DIVIDER"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.DELETED + \"      \" + dl.printTask(index)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"\\n   Now you have \" + (dl.listSize() - 1)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + (dl.listSize() - 1 \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \" in the list.\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void printWriteErrorMessage() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        System.err.println(DukeStringFormat.DIVIDER"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + \"   Something went wrong with saving the file!\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                + DukeStringFormat.DIVIDER);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 81
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class DeadlineTaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateDeadlineTask_success() throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // 1234 becomes 0034"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assertEquals(\"[D] [☓] Buy birthday present (by: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                DeadlineTask.createDeadlineTask(\"Buy birthday present\", \"09/09/2000 2345\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateDeadlineTask_invalidDate_exceptionThrown() throws ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"[D] [☓] Buy birthday present (by: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    DeadlineTask.createDeadlineTask(\"Buy birthday present\", \"09-09-2000 2345\").toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (InvalidTaskDateTimeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\", e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 29
    }
  },
  {
    "path": "src/test/java/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "class EventTaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateEventTask_success() throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        // 1234 becomes 0034"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        assertEquals(\"[E] [☓] Birthday (at: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                EventTask.createEventTask(\"Birthday\", \"09/09/2000 2345\").toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    void testCreateEventTask_invalidDate_exceptionThrown() throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"[E] [☓] Birthday (by: Sat 2345, Sep 9th, 2000)\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    EventTask.createEventTask(\"Birthday\", \"09-09-2000 2345\").toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        } catch (InvalidTaskDateTimeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "            assertEquals(\"   The date and/or time format is invalid.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                    + \"   Please format your input as: DD/MM/YYYY HHmm.\", e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 30
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                  M\"\"\"\"\"\"\"`YM\"\"MMMMM\"\"MP\"\"\"\"\"\"`MM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                  M  mmmm.  M  MMMMM  M  mmmmm..M"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          .d8888b.M  MMMMM  M  MMMMM  M.      `YM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          88\u0027  `88M  MMMMM  M  MMMMM  MMMMMMM.  M"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          88.  .88M  MMMMM  M  `MMM\u0027  M. .MMM\u0027  M"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "          `88888P\u0027M  MMMMM  Mb       dMb.     .dM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "                  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Hello!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   The oNUS is on me to help you be productive! (\u003e‿◠)✌"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "      [T] [?]  borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Now you have 1 task in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   1. [T] [?]  borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "      [D] [?]  return book (by Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "      [E] [?] event project meeting (at Mon 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "   Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "javac  -cp C:\\Users\\teoju\\IdeaProjects\\duke\\src -Xlint:none -d C:\\Users\\teoju\\IdeaProjects\\duke\\bin C:\\Users\\teoju\\IdeaProjects\\duke\\src\\main\\java\\*.java --release 8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "java -classpath C:\\Users\\teoju\\IdeaProjects\\duke\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teo-jun-xiong"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "teo-jun-xiong": 21
    }
  }
]
