[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    mainClassName \u003d \"main.Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 13,
      "-": 20
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "TODO^_^0^_^todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "EVENT^_^0^_^event^_^01/01/2020 1800 to 02/01/2020 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "DEADLINE^_^0^_^deadline^_^01/01/2020 1800"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import main.Main;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 8
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command interface. Forms the base for all commands of Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Execute method to be implemented by all classes that derive from this interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the command being executed is unable to proceed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 19
    }
  },
  {
    "path": "src/main/java/commands/CommandBye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command for Duke to say goodbye. Handles the disabling of the bot as well."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandBye implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Prints a goodbye message to the UI, and also disables the bot to stop the loop."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        processor.disable();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return \"Ok see you! Hopefully I could help you in some way! :)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 20
    }
  },
  {
    "path": "src/main/java/commands/CommandDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.DeadlineTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command that handles creating and adding a \"deadline\" task to the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandDeadline extends CommandTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Attempts to create a \"deadline\" task, and add it to the processor\u0027s TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the input format is incorrect."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (!args.contains(\" /by \")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"Your deadline command is incorrect! Please follow the format: deadline \u003citem\u003e \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"/by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] inputArgs \u003d args.split(\" \", 2)[1].split(\" /by \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (inputArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"Your deadline command is incorrect! Please follow the format: deadline \u003citem\u003e \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"/by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        DeadlineTask task \u003d new DeadlineTask(inputArgs[0], inputArgs[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        processor.getTaskList().add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String output \u003d String.format(\"%s\\n%s\\n%s\\n\", \"I\u0027ve got it! Added the following task:\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                \"You\u0027ve now got \" + processor.getTaskList().size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        super.execute(processor, args);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 41
    }
  },
  {
    "path": "src/main/java/commands/CommandDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Handles the deletion of tasks from the processor\u0027s TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandDelete implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Deletes the task from the list and updates the list thereafter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the input format is incorrect, or if the task at the index is not"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *                       found"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] argsArray \u003d args.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (argsArray.length \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"Your \u0027delete\u0027 command is incorrect! Use the following format: delete \u003cnumber\u003e\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else if (Integer.parseInt(argsArray[1]) \u003e processor.getTaskList().size()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve selected a non-existent task to delete! Please try again!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else if (Integer.parseInt(argsArray[1]) \u003c 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an index below the number of tasks in the list! Please try again!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(argsArray[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Task selectedTask \u003d processor.getTaskList().removeAt(taskIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            Storage.saveTasks(processor);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String output \u003d String.format(\"%s\\n%s\\n%s\\n\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                \"Noted! I\u0027ve deleted the following task:\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                selectedTask.toString(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                \"You now have \" + processor.getTaskList().size() + \" tasks remaining!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 49
    }
  },
  {
    "path": "src/main/java/commands/CommandDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command that handles marking a task as done in the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandDone implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Attempts to find the task selected by the user, then marks it as done, saving thereafter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws exception if Duke is unable to find a task at the index specified."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] argsArray \u003d args.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (argsArray.length \u003c 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"Your \u0027done\u0027 command is incorrect! Use the following format: done \u003cnumber\u003e\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else if (Integer.parseInt(argsArray[1]) \u003e processor.getTaskList().size()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve selected a non-existent task to complete! Please try again!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else if (Integer.parseInt(argsArray[1]) \u003c 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an index below the number of tasks in the list! Please try again!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(argsArray[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Task selectedTask \u003d processor.getTaskList().get(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        selectedTask.complete();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            Storage.saveTasks(processor);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String output \u003d String.format(\"%s\\n%s\\n\", \"Great job on being productive! I\u0027ve marked the following task as \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                + \"completed:\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                selectedTask.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 47
    }
  },
  {
    "path": "src/main/java/commands/CommandEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command that handles creating and adding an \"event\" task to the processor\u0027s TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandEvent extends CommandTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Attempts to create an \"event\" task, and add it to the processor\u0027s TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the input format is incorrect."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (!args.contains(\" /at \")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"Your \u0027event\u0027 command is incorrect! Please follow the format: event \u003citem\u003e \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"/at \u003ctime\u003e to \u003ctime\u003e\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] inputArgs \u003d args.split(\" \", 2)[1].split(\" /at \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (inputArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"Your \u0027event\u0027 command is incorrect! Please follow the format: event \u003citem\u003e \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"/at \u003ctime\u003e to \u003ctime\u003e\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        EventTask task \u003d new EventTask(inputArgs[0], inputArgs[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        processor.getTaskList().add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String output \u003d String.format(\"%s\\n%s\\n%s\\n\", \"I\u0027ve got it! Added the following task:\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                \"You\u0027ve now got \" + processor.getTaskList().size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        super.execute(processor, args);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 43
    }
  },
  {
    "path": "src/main/java/commands/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Finds a task using the keyword entered."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandFind implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Finds a task in the list using the keyword entered as input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] argsArray \u003d args.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (argsArray.length \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an invalid format! Please use find \u003cstring\u003e.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String searchString \u003d argsArray[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        List\u003cTask\u003e tasksList \u003d processor.getTaskList().getTasksContaining(searchString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String tasksListString \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        for (Task task : tasksList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            tasksListString +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String output \u003d String.format(\"%s\\n%s\\n\", String.format(\"We\u0027ve found the following tasks related to your \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                        + \"search (\\\"%s\\\"):\", searchString),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                tasksListString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 40
    }
  },
  {
    "path": "src/main/java/commands/CommandHi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command to say hello to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandHi implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Says hello to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return \"Hello from Duke! What can I help you with today?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 18
    }
  },
  {
    "path": "src/main/java/commands/CommandInvalid.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * An invalid command, which is created and executed when the user\u0027s input does not match any available commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandInvalid implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Apologises for not being able to process their command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return \"Sorry, but I don\u0027t think you\u0027ve entered a valid command! :(\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 18
    }
  },
  {
    "path": "src/main/java/commands/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command that prints out the list of tasks as entered by the user, in the order that they were entered."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandList implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        List\u003cTask\u003e taskList \u003d processor.getTaskList().getTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            return \"Looks like you don\u0027t have any tasks entered! Try entering one with the \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"commands \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            String taskListString \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                taskListString +\u003d String.format(\"%d. %s\", i + 1, taskList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            String output \u003d String.format(\"%s\\n%s\\n\", \"Here are the \" + taskList.size() + \" tasks I\u0027ve noted down \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"for you:\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    taskListString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 36
    }
  },
  {
    "path": "src/main/java/commands/CommandListOn.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command that prints the list of tasks that occur on the selected date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandListOn implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Date entered is parsed first, and then the TaskList is searched to check if any deadlines or events occur on"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * that date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the date entered is in the incorrect format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] argsArray \u003d args.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            LocalDate searchDate \u003d LocalDate.parse(argsArray[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            List\u003cTask\u003e filteredTaskList \u003d processor.getTaskList().getTasksOn(searchDate);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            if (filteredTaskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                return \"Looks like you don\u0027t have any tasks entered on this date! Try entering one with \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                        + \"the commands \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                String filteredTaskListString \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                for (int i \u003d 0; i \u003c filteredTaskList.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    filteredTaskListString +\u003d String.format(\"%d. %s\", i + 1, filteredTaskList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                String output \u003d String.format(\"%s\\n%s\\n\", String.format(\"Here are the %d tasks I\u0027ve noted down for \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                                + \"you on %s:\", filteredTaskList.size(), searchDate.format("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                                        DateTimeFormatter.ofPattern(\"MMM d yyyy\"))),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                        filteredTaskListString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an incorrect date! Please follow this format: liston dd/MM/yyyy\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 52
    }
  },
  {
    "path": "src/main/java/commands/CommandTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Parent class for the \"todo\", \"deadline\" and \"event\" commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandTask implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Prints the task count to the UI and attempts to save the current list of instructions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception when there is an error in adding a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            Storage.saveTasks(processor);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 27
    }
  },
  {
    "path": "src/main/java/commands/CommandTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.TodoTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Command that handles creating and adding a \"todo\" task to the processor\u0027s TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class CommandTodo extends CommandTask {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Attempts to create a \"todo\" task before adding it to the processor\u0027s TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor The instantiated DukeProcessor object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param args      The arguments as entered by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the input format is incorrect."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String execute(DukeProcessor processor, String args) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] argsArray \u003d args.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (argsArray.length \u003c 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"Your \u0027todo\u0027 command is incorrect! Please follow the following format: todo \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"\u003citem\u003e\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        TodoTask task \u003d new TodoTask(argsArray[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        processor.getTaskList().add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String output \u003d String.format(\"%s\\n%s\\n%s\\n\", \"I\u0027ve got it! Added the following task:\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                \"You\u0027ve now got \" + processor.getTaskList().size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        super.execute(processor, args);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 37
    }
  },
  {
    "path": "src/main/java/commands/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Enum to hold the different types of commands available to be created."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    HI, BYE, LIST, LISTON, DONE, FIND, TODO, DEADLINE, EVENT, DELETE, INVALID"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 9
    }
  },
  {
    "path": "src/main/java/commands/Commander.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Commander handles the creation of commands to be executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class Commander {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Creates the command indicated by the processor to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param commandType The type of command that the processor has requested."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Returns a command, to be executed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static Command createCommand(CommandType commandType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case HI:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandHi();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandTodo();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandDeadline();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandEvent();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandDelete();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case LISTON:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandListOn();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandFind();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d new CommandInvalid();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 52
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Duke\u0027s Exception that will be thrown when errors related to Duke\u0027s functionality are encountered."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 15
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Duke\u0027s main class, where he will start his processor and begin to process user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    DukeProcessor processor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Constructor of Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        processor \u003d new DukeProcessor();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return processor.processInput(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public DukeProcessor getProcessor() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return processor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 28
    }
  },
  {
    "path": "src/main/java/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            stage.setTitle(\"Duke!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 33
    }
  },
  {
    "path": "src/main/java/processor/DukeProcessor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package processor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import commands.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import commands.Commander;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Duke\u0027s processor class. Handles the processing of inputs and ensuring that Duke is running."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class DukeProcessor {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private boolean isActive;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public DukeProcessor() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Initiates startup, creating a TaskList and setting Duke to be active, after which Duke says hello."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        taskList \u003d new TaskList(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        isActive \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        sayHello();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Processes the input entered by the user. Input is sent to be parsed by Parser class, then the Command returned"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * by Commander class is executed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String processInput(String input) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Command command \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            return command.execute(this, input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Says hello."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String sayHello() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Command sayHello \u003d Commander.createCommand(CommandType.HI);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            return sayHello.execute(this, \"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns the TaskList of the processor."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return TaskList instantiated by DukeProcessor."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Disables Duke. He will be unable to process any input after this."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void disable() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        isActive \u003d false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Checks if Duke is still active."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Boolean that indicates true if Duke is active."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public boolean isActive() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return isActive;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 81
    }
  },
  {
    "path": "src/main/java/processor/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package processor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import commands.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import commands.Commander;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Handles the parsing of user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Parses the user input and returns the Command he has requested for. Invalid command is returned for an invalid"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Command that user has requested for."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static Command parseInput(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] inputArgs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        switch (inputArgs[0]) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.BYE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.LIST);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"liston\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.LISTON);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.DONE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.TODO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.DEADLINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.EVENT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.DELETE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.FIND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            command \u003d Commander.createCommand(CommandType.INVALID);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 58
    }
  },
  {
    "path": "src/main/java/processor/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package processor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Handles the storing of tasks on a local text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Initiates the storage process by checking if a .txt file exists on the local computer. If it does not, it"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * creates a new file for input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            File taskFile \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            if (!taskFile.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                taskFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                taskFile.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Attempts to save tasks to the created .txt file on the local computer. Tasks are first packaged before storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor Duke\u0027s processor."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws IOException Throws an exception for errors pertaining to saving the tasks in the external text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static void saveTasks(DukeProcessor processor) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        for (int i \u003d 0; i \u003c processor.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            Task task \u003d processor.getTaskList().get(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            String taskStorageString \u003d packageTask(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            fw.append(taskStorageString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            if (i !\u003d processor.getTaskList().size() - 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                fw.append(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Attempts to load tasks from the .txt file on the local computer, and processes packaged tasks from the file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * before returning the list of saved tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor Duke\u0027s processor."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return The list of tasks saved previously by Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws IOException Throws an exception for errors pertaining to loading the tasks in the external text file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the method processPackagedTask fails."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static List\u003cTask\u003e loadTasks(DukeProcessor processor) throws IOException, DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        File taskFile \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (!taskFile.exists()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new IOException(\"File not found\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Scanner sc \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        List\u003cTask\u003e outputTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            Task task \u003d processPackagedTask(line);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            outputTaskList.add(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return outputTaskList;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Packages the tasks into a format that can be stored and re-processed when loaded in the future."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param task Task to be packaged."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Task object in the form of a packaged String, ready to be stored."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private static String packageTask(Task task) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        int doneIndicator \u003d 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            doneIndicator \u003d 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            output \u003d String.format(\"%s^_^%d^_^%s\", \"TODO\", doneIndicator, task.getDescription());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            output \u003d String.format(\"%s^_^%d^_^%s^_^%s\", \"DEADLINE\", doneIndicator, task.getDescription(),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    ((DeadlineTask) task).getDeadline());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            output \u003d String.format(\"%s^_^%d^_^%s^_^%s\", \"EVENT\", doneIndicator, task.getDescription(),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    ((EventTask) task).getEventTime());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Attempts to process and create a Task object from the String read from the .txt file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param taskString String from .txt file to be processed."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Task object that was defined from the taskString."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if unable to create a Task object."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private static Task processPackagedTask(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Task outputTask;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String[] taskArray \u003d taskString.split(\"\\\\^_\\\\^\", 4);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (taskArray[0].equals(\"TODO\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            outputTask \u003d new TodoTask(taskArray[2]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else if (taskArray[0].equals(\"DEADLINE\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            outputTask \u003d new DeadlineTask(taskArray[2], taskArray[3]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            outputTask \u003d new EventTask(taskArray[2], taskArray[3]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (Integer.parseInt(taskArray[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            outputTask.complete();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return outputTask;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 140
    }
  },
  {
    "path": "src/main/java/tasks/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Deadline Task object, for deadlines. Contains methods pertaining to a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private LocalDateTime parsedDeadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Constructor of a deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param deadline    When the task has to be done by. Follows the format \"dd/mm/yyyy HHmm\"."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException For parseDeadline method."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public DeadlineTask(String description, String deadline) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        parseDeadline(deadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Processes the String entered for a deadline into a LocalDate object, and saves it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param deadline Deadline in String form."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception when the deadline format is not followed correctly."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void parseDeadline(String deadline) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            this.parsedDeadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered the deadline date incorrectly! Please use \\\"dd/mm/yyyy HHmm\\\" for\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \" your dates, e.g. 05/12/2020 1800\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns a parsed deadline."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Object containing the parsed deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public LocalDateTime getParsedDeadline() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return parsedDeadline;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns the String of the deadline."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Deadline String."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns a String of the task with the type of task and date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Formatted String of a deadline task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return String.format(\"%s%s (by: %s)\", \"[D]\", super.toString(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                parsedDeadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 72
    }
  },
  {
    "path": "src/main/java/tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Event Task object, for events. Contains methods pertaining to an event task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private LocalDateTime parsedStartTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private LocalDateTime parsedEndTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Constructor of an event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param eventTime   Period of which the event will run. Follows the format \"dd/mm/yyyy HHmm to dd/mm/yyyy HHmm\"."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException For parseEventTime method."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public EventTask(String description, String eventTime) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        parseEventTime(eventTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Parses the event times and saves the start time and end time as two different LocalDateTime objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param eventTime Period of which the event will run. Follows the format \"dd/mm/yyyy HHmm to dd/mm/yyyy HHmm\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @throws DukeException Throws an exception if the format is not followed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private void parseEventTime(String eventTime) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            String[] eventTimeArray \u003d eventTime.split(\" to \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            parsedStartTime \u003d LocalDateTime.parse(eventTimeArray[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            parsedEndTime \u003d LocalDateTime.parse(eventTimeArray[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered the event date incorrectly! Please use \\\"dd/mm/yyyy HHmm to \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    + \"dd/mm/yyyy/HHmm\\\" for your dates, e.g. 05/12/2020 1800 to 06/12/2020 1800\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns the start time of the event, in LocalDateTime form."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Object containing the start time of the event."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public LocalDateTime getParsedStartTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return parsedStartTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns the end time of the event, in LocalDateTime form."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Object containing the end time of the event."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public LocalDateTime getParsedEndTime() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return parsedEndTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns the start and end time of the event in String form."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return String of the event time."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String getEventTime() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns a String of the task with the type of task and date."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Formatted String of a event task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return String.format(\"%s%s (at: %s to %s)\", \"[E]\", super.toString(),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                parsedStartTime.format(DateTimeFormatter.ofPattern("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                \"MMM d yyyy, h:mm a\")), parsedEndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 85
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Task object that forms the base of TodoTask, DeadlineTask and EventTask. Contains methods pertaining to the Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * objects."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Constructor of the task. Takes in a description, and sets the task as \"not done\"."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Completes the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Checks if the task has been completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Boolean that is true if the task is completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Description of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Formats the task to contain a tick or a cross depending on whether it is done or not respectively."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Task in String form."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String marker \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            marker \u003d \"/\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            marker \u003d \"X\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return String.format(\"[%s] %s\", marker, description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 61
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Class to handle the list of tasks as entered by the user. Has methods to modify the list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    DukeProcessor processor;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Constructor of a TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param processor Duke\u0027s processor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public TaskList(DukeProcessor processor) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        this.processor \u003d processor;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Initiates the TaskList. Attempts to load the tasks from a external .txt file using Storage class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            Storage.init();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            taskList \u003d Storage.loadTasks(processor);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param task Task to be added to the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Removes a task from the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param task Task to be removed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Boolean indicating whether the task was successfully removed or not. True if removed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public boolean remove(Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return taskList.remove(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Removes the task from the task list at that index."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param index Index of task to be removed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Task that was removed from the list at that index."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public Task removeAt(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns the number of tasks in the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Gets the task stored in the task list at that index."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param index Index of task to get."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Task at the chosen index."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Prints the tasks in the order in which they were in the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Prints the tasks that start on the selected searchDate."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param searchDate Date to filter tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public List\u003cTask\u003e getTasksOn(LocalDate searchDate) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        List\u003cTask\u003e outputTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                if (((DeadlineTask) task).getParsedDeadline().toLocalDate().equals(searchDate)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    outputTaskList.add(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                if (((EventTask) task).getParsedStartTime().toLocalDate().equals(searchDate)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                    outputTaskList.add(task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return outputTaskList;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Prints the tasks that contain the search String."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param searchText Text to filter the tasks by."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public List\u003cTask\u003e getTasksContaining(String searchText) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        List\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            if (task.getDescription().contains(searchText)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                filteredTaskList.add(task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return filteredTaskList;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 136
    }
  },
  {
    "path": "src/main/java/tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Todo Task object, contains methods pertaining to the Todo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Constructor of a todo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param description Description of the todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Returns the Todo task formatted with the task type and whether it is done or not."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return Todo task in String form."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return String.format(\"%s%s\", \"[T]\", super.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 25
    }
  },
  {
    "path": "src/main/java/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * A custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Creates a DialogBox object that contains information that the user has entered."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param text Text that the user has input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param img User\u0027s profile picture."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return A DialogBox containing both a profile picture and the text that the user has input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Creates a DialogBox object that contains information that the Duke has processed and is ready to output."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param text Text that Duke wants to output."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @param img Duke\u0027s profile picture."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * @return A DialogBox containing both a profile picture and the text that Duke wants to output."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 73
    }
  },
  {
    "path": "src/main/java/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import main.Duke;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        displayText(duke.getProcessor().sayHello());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void displayText(String text) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(text, dukeImage));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 59
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            \u003cFont name\u003d\"Consolas\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            \u003cInsets right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            \u003cInsets right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"385.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 19
    }
  },
  {
    "path": "src/test/java/DukeProcessorTester.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import processor.DukeProcessor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class DukeProcessorTester {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void processorDisableTester() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        DukeProcessor p \u003d new DukeProcessor();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        p.disable();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        assertEquals(false, p.isActive());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 14
    }
  },
  {
    "path": "src/test/java/TaskTester.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import tasks.TodoTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "public class TaskTester {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void todoTaskCompleteTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        TodoTask task \u003d new TodoTask(\"test\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        task.complete();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        assertEquals(true, task.isDone());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void deadlineTaskCompleteTest() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        DeadlineTask task \u003d new DeadlineTask(\"test\", \"01/01/2020 1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        task.complete();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        assertEquals(true, task.isDone());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    public void eventTaskCompleteTest() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        EventTask task \u003d new EventTask(\"test\", \"01/01/2020 1800 to 01/01/2020 1900\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        task.complete();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "        assertEquals(true, task.isDone());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "todo hello world"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "deadline Do homework /by yesterday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "event Go for lecture /at 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "then"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "then"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "\t"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jumpcutfindo"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jumpcutfindo": 34
    }
  }
]
