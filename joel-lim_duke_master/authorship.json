[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "joel-lim": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "false"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "return book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2019-09-11T00:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "false"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "book fair"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2019-09-11T00:00"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2020-09-11T18:01:59"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "true"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2103"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2020-02-13T00:00"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "true"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2101 presentation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2020-02-20T00:00"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "2020-02-20T00:00"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "false"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 21
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### Check off your tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Duke provides the functionality of a to-do list with 3 built-in task types: Todos, Deadlines and Events."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Once you are done with a task, you can mark it as complete and Duke will remember its completion status."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### Search for related tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "If your task list is simply too long, Duke allows you to streamline your search for related tasks by keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### Reschedule tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "A deadline changed, or you made a typo? Fret not! Duke lets you reschedule your tasks with one easy command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Create a Todo task with a given description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`todo 2103 IP`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Got it. I\u0027ve added this task:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`[T][✘] 2103 IP`\u003cbr/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Now you have x tasks in the list.`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Create a Deadline task with a given description as well as due date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Usage: deadline 2103 IP submission /by 24-02-2020`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Got it. I\u0027ve added this task:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`[D][✘] 2103 IP submission (by: Feb 24 2020, 00:00)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Create an Event task with a given description, start and end time."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Usage: event 2103 tutorial /at 19/02/2020 12:00 to 19/02/2020 13:00`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Got it. I\u0027ve added this task:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`[E][✘] 2103 tutorial (at: Feb 19 2020, 12:00 to Feb 19 2020, 13:00)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Mark a task as complete."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`[T][✓] 2103 IP`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Mark a task as complete by index."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`[T][✓] 2103 IP`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "List all tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Here are the tasks in your list:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`1.[T][✓] 2103 IP`\u003cbr/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`2.[D][✘] 2103 IP submission (by: Feb 24 2020, 00:00)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`3.[E][✘] 2103 tutorial (at: Feb 19 2020, 12:00 to Feb 19 2020, 13:00)`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - delete"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Delete a task by index."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Noted. I\u0027ve removed this task:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`[E][✘] 2103 tutorial (at: Feb 19 2020, 12:00 to Feb 19 2020, 13:00)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - find"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Search for related tasks by keyword."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`find submission`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Here are the matching tasks in your list:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`1.[D][✘] 2103 IP submission (by: Feb 24 2020, 00:00)`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - reschedule"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Reschedule a task by index (Deadline or Event)."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`reschedule 2 25/12/2020`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`I\u0027ve rescheduled this task:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`[D][✘] 2103 IP submission (by: Dec 25 2020, 00:00)`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "### `Keyword` - bye"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Exit Duke."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "`Save Success! See you next time!`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "joel-lim": 140
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.concurrent.Semaphore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.TextStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.commands.CommandHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Logic for Duke. Uses TextUi by default."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Semaphore inputLock;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Ui ui \u003d new TextUi();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Runs the main loop of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.showGreeting();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Setup in-memory and disk storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Storage storage \u003d new TextStorage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        TaskList tasks \u003d loadTasks(storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        activate(new CommandHandler(tasks, ui, storage));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        saveTasks(tasks, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.shutDown();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Registers a semaphore for Duke to synchronise with other threads."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void addSemaphore(Semaphore sem) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        inputLock \u003d sem;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Configures Duke to use a particular Ui."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void useUi(Ui ui) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private TaskList loadTasks(Storage storage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            tasks.add(storage.load());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showReply(\"Save file loaded!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showError(\"Save file not found!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private void saveTasks(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showReply(\"Save Success! See you next time!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showError(\"Save Failure :-(. Try again next time!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private void activate(CommandHandler handler) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        while (handler.isActive()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            if (inputLock !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    inputLock.acquire();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    ui.showError(\"Interrupted!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            handler.handleCommand(ui.getInput());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "joel-lim": 87
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Gui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Main class called by Launcher to initialise Duke and Gui."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Solution below adapted from JavaFx Tutorial by Jeffry Lum."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/Gui.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        AnchorPane ap;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            System.out.println(\"Error in loading fxml!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Gui gui \u003d fxmlLoader.\u003cGui\u003egetController();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        gui.setDuke(duke);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        stage.resizableProperty().setValue(false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Handle case where user manually exits"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        stage.setOnCloseRequest(new EventHandler\u003cWindowEvent\u003e() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            public void handle(WindowEvent event) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                gui.bye();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        new Thread(() -\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            duke.run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }).start();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 54
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a command that can be run by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Parses the given argument string and executes the Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param arg   Arguments for the command (may be empty)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param tasks List of Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param ui    User interface for Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param storage Storage for Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @throws DukeException If inputs are invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.parsers.DateTimeParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Parses user-entered strings and executes them as Commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Remains active until user deactivates with \"bye\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private HashMap\u003cString, Command\u003e commands;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private boolean isActive;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Creates a CommandHandler."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param ui User interface."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param storage Persistent storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public CommandHandler(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        isActive \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Create parsers"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        DateTimeParser dtParser \u003d new DateTimeParser();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Register commands"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"list\", new ListAll());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"done\", new MarkTaskAsDone());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"todo\", new CreateTodo());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"deadline\", new CreateDeadline(dtParser));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"event\", new CreateEvent(dtParser));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"delete\", new DeleteTask());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"find\", new FindTasks());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        commands.put(\"reschedule\", new RescheduleTask(dtParser));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Parses the user string into a Command and executes it."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param command User-entered string to be parsed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void handleCommand(String command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Check if command is bye"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            isActive \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Extract out command word and arguments"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Pair\u003cString, String\u003e commandAndArg \u003d getCommandAndArg(command);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String commandWord \u003d commandAndArg.getKey();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String arg \u003d commandAndArg.getValue();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Execute command"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        executeCommand(commandWord, arg);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public boolean isActive() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return isActive;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Pair\u003cString, String\u003e getCommandAndArg(String str) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        int spaceIndex \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (spaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            // No spaces found, so must be single-word command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return new Pair\u003cString, String\u003e(str.toLowerCase(), \"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            // Split string into command word and arguments"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            String commandWord \u003d str.substring(0, spaceIndex).toLowerCase();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            String arg \u003d str.substring(spaceIndex + 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return new Pair\u003cString, String\u003e(commandWord, arg);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private void executeCommand(String commandWord, String arg) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Check if command exists"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (!commands.containsKey(commandWord)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showError(\"Command \" + commandWord + \" does not exist!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            commands.get(commandWord).execute(arg, tasks, ui, storage);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 102
    }
  },
  {
    "path": "src/main/java/duke/commands/CreateDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.parsers.DateTimeParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Creates a Deadline Task and adds it to the TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class CreateDeadline extends TimedCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public CreateDeadline(DateTimeParser dtParser) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(dtParser);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Perform parsing of arguments"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String[] args \u003d arg.split(\"/by\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage: deadline [task name] /by [datetime]\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String taskName \u003d args[0].strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String dateTime \u003d args[1].strip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (taskName.length() \u003d\u003d 0 || dateTime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage: deadline [task name] /by [datetime]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Create parsed Deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Task newTask \u003d new Deadline(taskName, dtParser.parse(dateTime));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Save new Deadline to disk"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Error when saving to disk!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Display reply"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.showReply(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\", newTask,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                tasks.size()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/CreateEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.parsers.DateTimeParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Creates an Event Task and adds it to the TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class CreateEvent extends TimedCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public CreateEvent(DateTimeParser dtParser) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(dtParser);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Perform parsing of arguments"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String[] args \u003d arg.split(\"/at\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage: event [task name] /at [start datetime] to [end datetime]\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String taskName \u003d args[0].strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String[] dateTimes \u003d args[1].strip().split(\"to\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (taskName.length() \u003d\u003d 0 || dateTimes.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage: event [task name] /at [start datetime] to [end datetime]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Create parsed Event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Task newTask \u003d new Event(taskName, dtParser.parse(dateTimes[0].strip()), dtParser.parse(dateTimes[1].strip()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Save new Event to disk"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Error when saving to disk!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Display reply"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.showReply(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\", newTask,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                tasks.size()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/CreateTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Creates a Todo Task and adds it to the TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class CreateTodo implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (arg.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage: todo [task name]\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Create new Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Task newTask \u003d new Todo(arg);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Save new Todo to disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Error when saving to disk!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Display reply"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.showReply(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\", newTask,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                tasks.size()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Deletes a Task from the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class DeleteTask implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Check if task number is valid"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            taskNo \u003d Integer.parseInt(arg);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage: delete [int]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Delete task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Task removed \u003d tasks.remove(taskNo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            String reply \u003d String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    removed, tasks.size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showReply(reply);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Task number provided is out of bounds!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Save changes to disk"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Error when saving to disk!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/FindTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class FindTasks implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d tasks.search(arg.strip());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showReply(\"No matching tasks found!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assert matchingTasks.size() \u003e 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        for (Task task : matchingTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(counter + \".\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.showReply(sb.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ListAll.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Displays all Tasks in the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class ListAll implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"There are currently no tasks.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Concat String representations of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        for (Task task : tasks.getAllTasks()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(counter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Display reply"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.showReply(sb.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/MarkTaskAsDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Marks as a specific Task as completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class MarkTaskAsDone implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Check if task number is valid"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            taskNo \u003d Integer.parseInt(arg);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage: done [int]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Mark task as done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Task task \u003d tasks.get(taskNo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            ui.showReply(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Task number provided is out of bounds!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Save changes to disk"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Error when saving to disk!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 41
    }
  },
  {
    "path": "src/main/java/duke/commands/RescheduleTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.TimedTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.parsers.DateTimeParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Reschedules an existing Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "class RescheduleTask extends TimedCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private final int NOT_FOUND \u003d -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public RescheduleTask(DateTimeParser dtParser) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(dtParser);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void execute(String arg, TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Split string into taskNo and datetimes"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String dateTimeInfo;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        int spaceIndex \u003d arg.indexOf(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (spaceIndex \u003d\u003d NOT_FOUND) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            // No spaces found, so must be invalid usage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Usage for Deadline: reschedule [task number] [due date]\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    + \"Usage for Event: reschedule [task number] [start time] to [end time]\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            // Split string into taskNo and rest of string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                taskNo \u003d Integer.parseInt(arg.substring(0, spaceIndex));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                throw new DukeException(\"Task number provided is invalid!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            dateTimeInfo \u003d arg.substring(spaceIndex + 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Check if task number is in range"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            task \u003d tasks.get(taskNo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Task number provided is out of bounds!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Check for valid task type"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (!(task instanceof TimedTask)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"This task cannot be rescheduled!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Perform rescheduling"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            LocalDateTime newDateTime \u003d dtParser.parse(dateTimeInfo);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            deadline.reschedule(newDateTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            String[] dateTimes \u003d dateTimeInfo.split(\"to\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            if (dateTimes.length \u003c 2) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                throw new DukeException(\"Usage for Event: reschedule [task number] [start time] to [end time]\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            LocalDateTime newStart \u003d dtParser.parse(dateTimes[0].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            LocalDateTime newEnd \u003d dtParser.parse(dateTimes[1].trim());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            event.reschedule(newStart, newEnd);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Save changes to disk"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Error when saving to disk!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Display reply"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ui.showReply(String.format(\"I\u0027ve rescheduled this task:\\n  %s\", task));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 84
    }
  },
  {
    "path": "src/main/java/duke/commands/TimedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.parsers.DateTimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a command that requires parsing of DateTime information."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public abstract class TimedCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    DateTimeParser dtParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public TimedCommand(DateTimeParser dtParser) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.dtParser \u003d dtParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Converts a user-entered date/time string into LocalDateTime."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param dateTime User-entered string representing date/time."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return LocalDateTime parsed from user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @throws DukeException If unable to parse string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public LocalDateTime parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return dtParser.parse(dateTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 28
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * An Exception that occurs specifically in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 10
    }
  },
  {
    "path": "src/main/java/duke/parsers/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * A wrapper around multiple DateTimeFormatters that parses user-entered date/times."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private List\u003cDateTimeFormatter\u003e dtFormatters \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Initialises a DateTimeParser."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public DateTimeParser() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        dtFormatters.add(DateTimeFormatter.ofPattern(\"dd/MM/yyyy[ HH][:][mm][:ss]\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        dtFormatters.add(DateTimeFormatter.ofPattern(\"dd-MM-yyyy[ HH][:][mm][:ss]\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        dtFormatters.add(DateTimeFormatter.ofPattern(\"dd MM yyyy[ HH][:][mm][:ss]\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Returns a LocalDateTime parsed from user-entered string. If no time is"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * specified, it is automatically set to start of day."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param str User-entered string representing date/time."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return LocalDateTime parsed from user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @throws DukeException If unable to parse string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public LocalDateTime parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assert dtFormatters.size() \u003e 0 : \"There should be at least one DateTimeFormatter\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        for (DateTimeFormatter dtf : dtFormatters) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                TemporalAccessor ta \u003d dtf.parseBest(str, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                if (ta instanceof LocalDateTime) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    return (LocalDateTime) ta;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    return ((LocalDate) ta).atStartOfDay();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        throw new DukeException(\"Cannot parse datetime! Suggested format: dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 52
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Allows Duke to persist data across sessions."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public interface Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Saves data in the current session."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Overwrites existing save file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param tasks List of Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    void save(List\u003cTask\u003e tasks) throws IOException, DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Loads data from the existing save file (if any)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return List of Tasks from previous session."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    List\u003cTask\u003e load() throws FileNotFoundException, DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 28
    }
  },
  {
    "path": "src/main/java/duke/storage/TextStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Stores data in raw text to a local file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class TextStorage implements Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Initialises a TextStorage that saves to the given filepath."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param filePath Location of save file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public TextStorage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Create directories if they do not exist"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        new File(filePath).getParentFile().mkdirs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Loads a list of tasks from the filePath."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Scanner s \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        // Read file line by line and populate tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            switch (s.nextLine()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                task \u003d new Todo(s.nextLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                task \u003d new Deadline(s.nextLine(), LocalDateTime.parse(s.nextLine()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                task \u003d new Event(s.nextLine(), LocalDateTime.parse(s.nextLine()), LocalDateTime.parse(s.nextLine()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                throw new DukeException(\"Save file corrupt!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            if (s.nextLine().equals(\"true\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Saves a list of tasks to the filePath."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            fw.write(toSaveable(task) + System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private String toSaveable(Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assert task !\u003d null : \"task should not be null\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return String.format(\"todo\\n%s\\n%s\", task.getName(), task.getIsDone());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return String.format(\"deadline\\n%s\\n%s\\n%s\", deadline.getName(), deadline.getDateTime(),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    deadline.getIsDone());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            assert task instanceof Event;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return String.format(\"event\\n%s\\n%s\\n%s\\n%s\", event.getName(), event.getStart(), event.getEnd(),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                    event.getIsDone());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 92
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a Task that has a specific deadline to be met."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public Deadline(String name, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void reschedule(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", getStatus(), name, formatTime(dateTime));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 28
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a Task that has a specific start time and end time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    protected LocalDateTime start;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    protected LocalDateTime end;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Initialises an Event with the given name, start time and end time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param name Name of Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param start Start of Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param end End of Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public Event(String name, LocalDateTime start, LocalDateTime end) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public LocalDateTime getStart() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public LocalDateTime getEnd() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void reschedule(LocalDateTime start, LocalDateTime end) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s to %s)\", getStatus(), name, formatTime(start), formatTime(end));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 41
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a task to be completed by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Marks the Task as completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Gets the Task completion status."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return A unicode tick or cross."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a list of Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Adds multiple Tasks to the TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param moreTasks Tasks to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void add(List\u003cTask\u003e moreTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        tasks.addAll(moreTasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Retrives all Tasks containing a keyword from the TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param keyword Keyword to be checked (case-insensitive)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return List of Tasks containing the keyword."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public List\u003cTask\u003e search(String keyword) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            // Case insensitive check"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Retrives a specified Task from the TaskList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param taskNo Task number to be retrieved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return Task object specified."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public Task get(int taskNo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Removes a specified Task from the TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param taskNo Task number to be removed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return Task object that has been removed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public Task remove(int taskNo) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return tasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Retrives all Task from the TaskList."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return List of all Tasks in the TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Gets the size of the TaskList."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return Size of TaskList."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 94
    }
  },
  {
    "path": "src/main/java/duke/tasks/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a Task that has some form of time information."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public abstract class TimedTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private DateTimeFormatter dtf;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public TimedTask(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    protected String formatTime(LocalDateTime dt) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assert dtf !\u003d null : \"DateTimeFormatter should be instantiated\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return dtf.format(dt);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 22
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Represents a generic Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatus(), name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 15
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author joel-lim-reused"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    // Reused from JavaFx Tutorial by Jeffry Lum."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private DialogBox(String text, Image img) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            throw new DukeException(\"Unable to load fxml!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Gets a DialogBox with the User\u0027s image."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Gets a flipped DialogBox with Duke\u0027s image."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "joel-lim": 72
    }
  },
  {
    "path": "src/main/java/duke/ui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.concurrent.Semaphore;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Controller for the Main Window of the GUI for Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class Gui extends AnchorPane implements Ui {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    // Solution below adapted from JavaFx Tutorial by Jeffry Lum."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Semaphore inputLock;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        inputLock \u003d new Semaphore(1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Releases the semaphore to allow getting user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        inputLock.release();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Configures Duke to accept self as Ui and self\u0027s semaphore for"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * synchronisation."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        duke.useUi(this);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        duke.addSemaphore(inputLock);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void showReply(String reply) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Platform.runLater(() -\u003e addDialog(reply, true));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Platform.runLater(() -\u003e addDialog(error, true));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nGive me a moment while I locate your save file...\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Platform.runLater(() -\u003e addDialog(greeting, true));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Adds a new DialogBox containing the given text to the dialogContainer."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param isDuke Determines whether to add Duke DialogBox or User DialogBox."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private void addDialog(String text, Boolean isDuke) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            if (isDuke) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                dialogContainer.getChildren().add(DialogBox.getDukeDialog(text, dukeImage));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                dialogContainer.getChildren().add(DialogBox.getUserDialog(text, userImage));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Obtains input from the user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            inputLock.acquire();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            showError(\"Interrupted!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Platform.runLater(() -\u003e userInput.clear());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Platform.runLater(() -\u003e addDialog(input, false));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        inputLock.release();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Shuts down the Gui."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void shutDown() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Thread.sleep(1000);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            showError(\"Interrupted!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Passes a \"bye\" input to Duke\u0027s CommandHandler."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        userInput.setText(\"bye\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        inputLock.release();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 129
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Displays output to the user in text (CLI)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class TextUi implements Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private String lineBreak \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void showReply(String reply) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        System.out.print(formatReply(reply));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        System.out.print(formatReply(error));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Displays a text greeting to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        sb.append(logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        sb.append(formatReply(\"Hello! I\u0027m Duke\\nGive me a moment while I locate your save file...\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        System.out.print(sb.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void shutDown() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    private String formatReply(String str) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        String[] lines \u003d str.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(\"\u003e \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        sb.append(lineBreak);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 52
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " * Allows Duke to obtain input from and display output to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Displays a greeting to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    void showGreeting();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Displays a reply to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param reply Reply to be displayed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    void showReply(String reply);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Displays an error to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @param error Error to be displayed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    void showError(String error);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Gets user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    String getInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     * Closes Ui and performs cleanup operations."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    void shutDown();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"5.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 19
    }
  },
  {
    "path": "src/main/resources/view/Gui.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c?import duke.ui.Gui?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.Gui\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 20
    }
  },
  {
    "path": "src/test/java/duke/parsers/DateTimeParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class DateTimeParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void testParsingOfDateTimes() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        DateTimeParser dtp \u003d new DateTimeParser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        LocalDateTime expectedDate \u003d LocalDate.parse(\"2000-12-11\").atStartOfDay();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e dtp.parse(\"11/13/2000\")); // invalid date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertEquals(expectedDate, dtp.parse(\"11/12/2000\")); // date with slash"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertEquals(expectedDate, dtp.parse(\"11-12-2000\")); // date with dash"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertEquals(expectedDate, dtp.parse(\"11 12 2000\")); // date with space"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertEquals(LocalDateTime.parse(\"2000-12-11T16:00:00\"), dtp.parse(\"11/12/2000 1600\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 26
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void testStatus() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        Task task \u003d new TaskStub(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertEquals(\"\\u2718\", task.getStatus());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatus());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    class TaskStub extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        public TaskStub(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "            return name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 26
    }
  },
  {
    "path": "src/test/java/duke/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "        assertEquals(\"[T][\\u2718] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Command badcommand does not exist!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Todo description cannot be empty!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e   [T][?] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Usage: deadline [task name] /by [time]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e   [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Usage: event [task name] /at [time]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e   [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Usage: done [int]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Task number provided is out of bounds!"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e   [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e 1.[T][?] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e 2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e 3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Task number provided is out of bounds!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e   [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e 1.[T][?] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e 2.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003e Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 53
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "badcommand"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "done two"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin -classpath ..\\src\\main\\java ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joel-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joel-lim"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "joel-lim": 21
    }
  }
]
