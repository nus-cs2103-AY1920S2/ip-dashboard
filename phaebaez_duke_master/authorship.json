[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    toolVersion \u003d \"8.23\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "test {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 25,
      "phaebaez": 39
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "[T] - ✓ - read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "[D] - ✘ - return book - 2019-06-06"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "[E] - ✘ - project meeting - 2019-08-06"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "[T] - ✓ - join sports club"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represents a task of type deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Creates a task of type deaedline with"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * the specified description and end date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param description is the description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param by is the date that the task needs to be completed by."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        super(description, TaskType.Deadline);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Produces string to be printed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string that represents the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void setTaskDeadline() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        taskType \u003d TaskType.Deadline;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Prints the string representation of the"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * task that is to be saved in the file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string representation of the task to be saved in the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"[D]\" + super.printToFile() + \" - \" + by;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 39
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " * The Main class used to run the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " * Creates the Ui, Storage and TaskList objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " * Catches DukeExceptions and prints the error messages."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " * Specifies the path to tasks.txt."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " * Terminates when execute method of Command returns false."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private TaskList tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Storage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private int counter;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    public Duke() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private Label greet() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d storage.load();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        counter \u003d temp.size();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasks \u003d new TaskList(temp, counter);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Label textToAdd \u003d new Label(\"Hello! This is Duke, your personal chatbot.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                DialogBox.getDukeDialog(textToAdd, new ImageView(duke))"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        );"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return Parser.parseCommand(input, tasks, storage);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 167
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represents the errors that can occur"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " * when the Duke chatbot is running."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "phaebaez": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represents a task of type event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private LocalDate dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Creates a task of type event with the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * specified description and the date of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param description is the description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param dateTime is the date that the event occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public Event(String description, LocalDate dateTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        super(description, TaskType.Event);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Produces string to be printed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string that represents the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void setTaskEvent() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        taskType \u003d TaskType.Event;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Prints the string representation of the"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * task that is to be saved in the file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string representation of the"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     task to be saved in the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"[E]\" + super.printToFile() + \" - \" + dateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "phaebaez": 41
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "///**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "// * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "// */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "///**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "// * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "// */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 51
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represents a parser that parses input string"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " *    to determine what command is run."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private static int counter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Creates a parser object which takes in an arraylist"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     of tasks which can be modified based on the command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     entered and a counter that keeps track of the number"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     of tasks in the arraylist."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param tasklist is the list of tasks in the file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param counter is the total number of tasks in the file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public Parser(ArrayList\u003cTask\u003e tasklist, int counter) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.counter \u003d tasklist.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Filters through the list of valid commands that can be entered to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *    modify the list of tasks and chooses the right command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param nextString is the command entered by the user and usually"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     contains a command and some times a description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param tasks is the current list of tasks before the modification"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return the arraylist of tasks after the modfication"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static String parseCommand(String nextString, TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (nextString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }else if (nextString.trim().equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            assert counter \u003e 0 : \"You can\u0027t get a list of tasks if you don\u0027t have anything in it!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.listTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0,4).contains(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            assert counter \u003e 0 : \"You need to have a task to complete it!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.markComplete(nextString, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0,4).contains(\"find\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.findTask(nextString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0,4).contains(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            assert nextString.length() \u003e 5 : \"You can\u0027t just set a todo if you don\u0027t have one!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.addTodo(nextString, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0,8).contains(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            assert nextString.length() \u003e 9 : \"You can\u0027t just set a deadline if you don\u0027t have one!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.addDeadline(nextString, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0,5).contains(\"event\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            assert nextString.length() \u003e 6 : \"You can\u0027t just set an event if you don\u0027t have one!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.addEvent(nextString, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0, 6).contains(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            assert counter \u003e 0 : \"You need to have a task to delete it!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            counter--;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.deleteTask(nextString, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0, 6).contains(\"filter\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.filterType(nextString);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (nextString.trim().substring(0,7).contains(\"percent\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            return tasks.calculatePercent(nextString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                throw new DukeException(ui.showWrongFormat());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return ui.showErrorMsg();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 72
    }
  },
  {
    "path": "src/main/java/Statistics.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//public class Statistics {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    int totalCount \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    int todoCount \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    int deadlineCount \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//    int eventCount \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//public String statsTask() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        int totalCount \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        int todoCount \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        int deadlineCount \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        int eventCount \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        for (Task t: tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        String type \u003d t.getType();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        todoCount++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        deadlineCount++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        } else if (type.equals(\"E\")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        eventCount++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        totalCount++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        return \"Percentage of task of type todo: \" + (todoCount / totalCount) +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        \"\\n Percentage of task of type deadline: \" + (deadlineCount / totalCount) +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        \"\\n Percentage of task of type event: \" + (eventCount / totalCount);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 31
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represents a storage that has methods to load from and save to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " *    the list of tasks from the input file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private static ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private static ArrayList\u003cTask\u003e deadlineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private static ArrayList\u003cTask\u003e eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private static ArrayList\u003cTask\u003e doneList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private int counter \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Creates a storage object which takes in the file path"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *    of the file that contains the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param filepath is the file path of the file that"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     contains the list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Loads the list of tasks from the input file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return the list of tasks already in the input file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        try { //read file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            FileReader fileReader \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                String[] temp \u003d line.split(\" - \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                if (temp[0].contains(\"T\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    Task task \u003d new Todo(temp[2]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    ((Todo) task).setTaskTodo();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    todoList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    tasks.add(counter, task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    if (temp[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                        task.setIsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                        doneList.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                } else if (temp[0].contains(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    int day \u003d Integer.parseInt(temp[3].split(\"-\")[2]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    int month \u003d Integer.parseInt(temp[3].split(\"-\")[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    int year \u003d Integer.parseInt(temp[3].split(\"-\")[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    LocalDate date \u003d LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    Task task \u003d new Deadline(temp[2], date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    ((Deadline) task).setTaskDeadline();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    deadlineList.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    tasks.add(counter, task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    if (temp[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                        task.setIsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                        doneList.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                } else if (temp[0].contains(\"E\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    int day \u003d Integer.parseInt(temp[3].split(\"-\")[2]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    int month \u003d Integer.parseInt(temp[3].split(\"-\")[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    int year \u003d Integer.parseInt(temp[3].split(\"-\")[0]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    LocalDate date \u003d LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    Task task \u003d new Event(temp[2], date);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    ((Event) task).setTaskEvent();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    eventList.add(task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    tasks.add(counter, task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    if (temp[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                        task.setIsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                        doneList.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Replaces the list of tasks in the input file with the new list of tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *    that has been modified through the user commands."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param toSave represents the new list of tasks that is to be written back"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     into the input file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e toSave) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        try { //write file"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filepath, false);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            String content \u003d \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            for (Task task : toSave) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                content \u003d content + task.printToFile() + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            bufferedWriter.write(content);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTodoList() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return todoList;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static ArrayList\u003cTask\u003e getDeadlineList() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return deadlineList;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static ArrayList\u003cTask\u003e getEventList() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return eventList;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public static ArrayList\u003cTask\u003e getDoneList() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return doneList;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 127
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represents a task."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    TaskType taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Creates a task of with"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * the specified description and end date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.taskType \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Gets the current status of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string representation of the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     status of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Changes task status to done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return the variable isDone to have a new value of true."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public boolean setIsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Returns the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string representation of the description of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /**Produces string to be printed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string that represents the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Prints the string representation of the"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * task that is to be saved in the file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string representation of the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     task to be saved in the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \" - \" + getStatusIcon() + \" - \" + description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 59
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represents the list of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private int counter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList \u003d Storage.getTodoList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ArrayList\u003cTask\u003e deadlineList \u003d Storage.getDeadlineList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ArrayList\u003cTask\u003e eventList \u003d Storage.getEventList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    private ArrayList\u003cTask\u003e doneList \u003d Storage.getDoneList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Creates a list of tasks which takes in a list containing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     all the tasks that have been added or were already in the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     and a counter that keeps track of the total number of tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param tasks represents the list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param counter represents the total number of tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks, int counter) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        this.counter \u003d counter;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Adds a task of type \u0027Todo\u0027 to the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param nextString is the command entered by the user. Must contain"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     the keyword \u0027todo\u0027 and a description of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String addTodo(String nextString, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (nextString.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            throw new DukeException(ui.showEmptyTaskMsg());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String name \u003d nextString.substring(5);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Task task \u003d new Todo(name);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        todoList.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasks.add(counter, task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return ui.showAddTaskMsg() + \"\\t\" + task.toString() + \"\\n\" + ui.showCounterMsg(counter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Adds a task of type \u0027Deadline\u0027 to the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param nextString is the command entered by the user. Must contain"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     the keyword \u0027deadline\u0027, a description of the task and the deadline"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String addDeadline(String nextString, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (nextString.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            throw new DukeException(ui.showEmptyTaskMsg());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (!nextString.contains(\"/by\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            throw new DukeException(ui.showWrongFormat());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String name \u003d nextString.substring(9);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String taskName \u003d name.split(\" /by \")[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String dateTime \u003d name.split(\" /by \")[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String[] tempDate \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int day \u003d Integer.parseInt(tempDate[0].split(\"/\")[0]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int month \u003d Integer.parseInt(tempDate[0].split(\"/\")[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int year \u003d Integer.parseInt(tempDate[0].split(\"/\")[2]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        LocalDate date \u003d LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Task task \u003d new Deadline(taskName, date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        deadlineList.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasks.add(counter, task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return ui.showAddTaskMsg() + \"\\t\" + task.toString() + \"\\n\" + ui.showCounterMsg(counter);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Adds a task of type \u0027Event\u0027 to the list of tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param nextString is the command entered by the user. Must contain"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     the keyword \u0027event\u0027, a description of the task and the date"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String addEvent(String nextString, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (nextString.equals(\"event\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            throw new DukeException(ui.showEmptyTaskMsg());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (!nextString.contains(\"/at\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            throw new DukeException(ui.showWrongFormat());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String name \u003d nextString.substring(5);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String taskName \u003d name.split(\" /at \")[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String dateTime \u003d name.split(\" /at \")[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String[] tempDate \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int day \u003d Integer.parseInt(tempDate[0].split(\"/\")[0]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int month \u003d Integer.parseInt(tempDate[0].split(\"/\")[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int year \u003d Integer.parseInt(tempDate[0].split(\"/\")[2]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        LocalDate date \u003d LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Task task \u003d new Event(taskName, date);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        eventList.add(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasks.add(counter, task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return ui.showAddTaskMsg() + \"\\t\" + task.toString() + \"\\n\" + ui.showCounterMsg(counter);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Deletes a task from the list of tasks, given the index of a task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param nextString is the command entered by the user. Must contain"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     the keyword \u0027delete\u0027 and the index of the task to be deleted."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String deleteTask(String nextString, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (nextString.equals(\"delete\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            throw new DukeException(ui.showNoMsgToDelete());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String[] temp \u003d nextString.split(\" \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int index \u003d Integer.parseInt(temp[1]) - 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Task current \u003d tasks.get(index);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (current instanceof Todo) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            storage.getTodoList().remove(current);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (current instanceof Deadline) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            storage.getDeadlineList().remove(current);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (current instanceof Event) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            storage.getEventList().remove(current);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        counter--;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return ui.showRemoveTaskMsg() + current.toString() + \"\\n\" + ui.showCounterMsg(counter);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Marks a task in the list of tasks as complete, given the index of the task."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param nextString is the command entered by the user. Must contain"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     the keyword \u0027done\u0027 and the index of the task."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String markComplete(String nextString, Storage storage) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String[] temp \u003d nextString.split(\" \");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int index \u003d Integer.parseInt(temp[1]) - 1;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Task current \u003d tasks.get(index);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        current.setIsDone();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return ui.showDoneMsg() + current.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Lists all the tasks in the list of tasks that contains the keyword"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     as inputted by the user."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param nextString is the command entered by the user. Must contain"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     the keyword \u0027find\u0027 and the keyword that the user wishes to filter"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     the list of tasks against."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String findTask(String nextString) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String[] temp \u003d nextString.split(\" \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String keyword \u003d temp[1];"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String toPrint \u003d ui.showFindTaskMsg();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                toPrint \u003d toPrint + (tasks.indexOf(t) + 1) + \". \" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        assert counter \u003e 0 : \"You can\u0027t find a task on the list if it\u0027s not even on it!\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Lists all the tasks in the list of tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String temp \u003d ui.showListMsg();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            temp \u003d temp + (tasks.indexOf(t) + 1) + \". \" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String filterType(String input) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String type \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String toPrint \u003d ui.showFindTaskMsg();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            for (Task t: todoList) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                toPrint \u003d toPrint + (tasks.indexOf(t) + 1) + \". \" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            for (Task t: deadlineList) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                toPrint \u003d toPrint + (tasks.indexOf(t) + 1) + \". \" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            for (Task t: eventList) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "                toPrint \u003d toPrint + (tasks.indexOf(t) + 1) + \". \" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        assert counter \u003e 0 : \"You can\u0027t find a task on the list if it\u0027s not even on it!\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String calculatePercent(String input) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        double num \u003d 0;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String statsFor \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        if (statsFor.equals(\"todo\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            num \u003d todoList.size();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (statsFor.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            num \u003d deadlineList.size();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (statsFor.equals(\"event\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            num \u003d eventList.size();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        } else if (statsFor.equals(\"done\")) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "            num \u003d doneList.size();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        double totalNum \u003d tasks.size();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"Percentage of tasks that are Todos is: \" + (num / totalNum);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 233
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    Todo, Deadline, Event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 3
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "/** Represnts a task of type todo."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": " */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Creates a task of type todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     with the specified description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        super(description, TaskType.Todo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Produces string to be printed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string that represents the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void setTaskTodo() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        taskType \u003d TaskType.Todo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    /** Prints the string representation of the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     task that is to be saved in the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     * @return a string representation of the"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     *     task to be saved in the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"[T]\" + super.printToFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 34
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        System.out.println(\"Hey, I\u0027m Duke\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        System.out.println(\"What\u0027s up\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String sayBye() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"Bye.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showListMsg() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showDoneMsg() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showAddTaskMsg() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return (\"Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showRemoveTaskMsg() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return (\"Noted! I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showCounterMsg(int counter) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return (\"Now you have \" + counter + \" tasks in your list. \\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showEmptyTaskMsg() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"OOPS!!! The description cannot be empty :( \\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showWrongFormat() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"Did you mistype something? \\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showNoMsgToDelete() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"Looks like there\u0027s no message to be deleted. \\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showFindTaskMsg() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        return \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public String showErrorMsg() { return \"Warning. Error. \\n\";}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 48
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void markCompleteTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasklist.add(new Todo(\"test 1\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasklist.add(new Todo(\"test 2\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasklist.add(new Todo(\"test 3\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        TaskList tasks \u003d new TaskList(tasklist, 3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasks.markComplete(\"done 2\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String finished \u003d String.valueOf(tasklist.get(1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        assertEquals(\"[T][✓] test 2\", finished);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void deleteTaskTest() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasklist.add(new Todo(\"test 1\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasklist.add(new Todo(\"test 2\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasklist.add(new Todo(\"test 3\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        TaskList tasks \u003d new TaskList(tasklist, 3);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String deleted \u003d String.valueOf(tasklist.get(1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        tasks.deleteTask(\"delete 2\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        assertEquals(\"[T][✘] test 2\", deleted);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 34
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void sayByeTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String bye \u003d ui.sayBye();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        assertEquals(\"Bye.\", bye);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    public void showListMsgTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        String msg \u003d ui.showListMsg();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "        assertEquals(\"Here are the tasks in your list: \", msg);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "deadline homework /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "event project /at 6th Aug 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "done 4"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin C:\\Users\\phaed\\duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "phaebaez"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "phaebaez"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "phaebaez": 21
    }
  }
]
